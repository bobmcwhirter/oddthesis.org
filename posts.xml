<feed>
  <entry>
    <title>Trip Report: Raleigh RubyCamp</title>
    <slug>trip-report-raleigh-rubycamp</slug>
    <published>2008-10-20T13:26:42Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I did the round-trip from the land of cows to Raleigh to attend the &lt;a title="Raleigh RubyCamp" href="http://barcamp.pbwiki.com/RaleighRubyCamp" mce_href="http://barcamp.pbwiki.com/RaleighRubyCamp"&gt;Raleigh RubyCamp&lt;/a&gt; over the weekend.&lt;/p&gt;
&lt;p&gt;I think I heard about 80 folks showed up, but I&amp;#8217;m not certain on that.&lt;/p&gt;
&lt;p&gt;Mark (root@37s) and &lt;a title="James's Blog" href="http://infozerk.com/averyblog/" mce_href="http://infozerk.com/averyblog/"&gt;James&lt;/a&gt; did a very nice job of organizing it.&amp;nbsp; They provided good coffee and donuts to start the morning right.&amp;nbsp; Krispy Kreme is never a bad idea.&lt;/p&gt;
&lt;p&gt;We gathered, and a handful of folks presented introductions about what they wanted to do a session on.&amp;nbsp; We then figured out the slots, and got started.&lt;/p&gt;
&lt;p&gt;&lt;a title="Brenton's Blog" href="http://exawkuser.blogspot.com/" mce_href="http://exawkuser.blogspot.com/"&gt;Brenton Leanhardt&lt;/a&gt; talked about &lt;a title="Genome" href="http://genome.et.redhat.com/" mce_href="http://genome.et.redhat.com/"&gt;Genome&lt;/a&gt; and &lt;a title="Cobbler" href="https://fedorahosted.org/cobbler" mce_href="https://fedorahosted.org/cobbler"&gt;Cobbler&lt;/a&gt;, two &lt;a title="Red Hat ET" href="http://et.redhat.com/page/Main_Page" mce_href="http://et.redhat.com/page/Main_Page"&gt;emerging technologies&lt;/a&gt; at Red Hat.&amp;nbsp; Cobbler helps to stitch together distributions, Kickstarts and repositories, while Genome helps manage the inventory of virtualization hardware and the guest instances running on them.&lt;/p&gt;
&lt;p&gt;His use-case for the technologies is the fact that we&amp;#8217;ve got Xen hosts running on machines scattered under desks and in closets, which have been donated to a virtual pool.&lt;/p&gt;
&lt;p&gt;Where did you launch that instance last month?&amp;nbsp; Where can you launch a new instance today?&amp;nbsp; Genome helps answer those questions.&amp;nbsp; Many of the Genome bits are Camping apps.&lt;/p&gt;
&lt;p&gt;I presented my short slide-deck about JBoss-Rails.&lt;/p&gt;
&lt;p&gt;&lt;a title="Mark's Twitter" href="http://twitter.com/markimbriaco" mce_href="http://twitter.com/markimbriaco"&gt;Mark Imbriaco&lt;/a&gt; led an open discussion about Rails deployments.&amp;nbsp; It ended up mostly being us asking how 37signals did things.&amp;nbsp; He described their hosting environment, their occasional frustrations with Mongrel, along with some stories about running migrations against a 100gig database.&lt;/p&gt;
&lt;p&gt;&lt;a title="Sean Cribbs" href="http://seancribbs.com/" mce_href="http://seancribbs.com/"&gt;Sean Cribbs&lt;/a&gt; talked about his experience in joining and then leading open-source projects, particularly &lt;a title="Radiant CMS" href="http://radiantcms.org/" mce_href="http://radiantcms.org/"&gt;Radiant CMS&lt;/a&gt;.&amp;nbsp; He discussed breaking up the core into &lt;a title="Radiant on GitHub" href="http://github.com/radiant" mce_href="http://github.com/radiant"&gt;many plugins and modules&lt;/a&gt;, and the uptick in community participation that followed.&lt;/p&gt;
&lt;p&gt;Overall it was a great weekend, and I even got some nice t-shirts out of it.&amp;nbsp; Not bad.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Preliminary slides for JBoss-Rails at RubyCamp</title>
    <slug>preliminary-slides-for-jboss-rails-at-rubycamp</slug>
    <published>2008-10-18T04:27:23Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Thanks to the typical &lt;a title="Damn you, Amazon" href="http://www.fnokd.com/2008/10/17/run-level-run/"&gt;demo demons&lt;/a&gt;, I&amp;#8217;ve been unable to get everything functioning perfect for instantaneous clustering on EC2 by tomorrow.&lt;/p&gt;
&lt;p&gt;Oh well.&lt;/p&gt;
&lt;p&gt;But here&amp;#8217;s the &lt;a href="http://fnokd.com/~bob/jboss-rails-cloud-rubycamp.pdf"&gt;first draft of some slides&lt;/a&gt; I&amp;#8217;m taking with me to the Raleigh RubyCamp.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fnokd.com/~bob/jboss-rails-cloud-rubycamp.pdf"&gt;&lt;img class="aligncenter size-medium wp-image-570" title="slide1001" src="http://www.fnokd.com/wp-content/uploads/2008/10/slide1001-300x225.jpg" alt="" width="300" height="225" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s a BarCamp style event, so I anticipate the slides probably changing throughout the day.  I&amp;#8217;ll published updates if needed.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Run level, run!</title>
    <slug>run-level-run</slug>
    <published>2008-10-17T23:48:31Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Trying to debug why my init scripts weren&amp;#8217;t initing on EC2, I checked all the normal places.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;chkconfig&lt;/code&gt; tool reported that my services should be on at runlevel 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
jboss   0:off&#160;&#160; 1:off&#160;&#160; 2:off&#160;&#160; 3:on&#160;&#160;&#160; 4:off&#160;&#160; 5:on&#160;&#160;&#160; 6:off
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My /etc/inittab says I was booting to runlevel 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
id:3:initdefault:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yet the console did not show my things to be spinning.&#160; A little googling around, I found the &lt;code&gt;runlevel&lt;/code&gt; command (I&amp;#8217;m not a linux expert&amp;#8230;) which explained to me I was in runlevel 4.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
N 4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4?  Really?  4?  I wasn&amp;#8217;t expecting that.&lt;/p&gt;
&lt;p&gt;Apparently this is just how EC2/Xen work.&#160; They force you up into runlevel 4.&lt;/p&gt;
&lt;p&gt;What does 4 mean?&#160; Asking the Wikipedia, you&amp;#8217;ll see a pattern:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Typical linux: unused&lt;/li&gt;
&lt;li&gt;Debian/Ubuntu: same as 2,3 and 5, weirdos&lt;/li&gt;
&lt;li&gt;RHEL/Fedora: unused/user-definable&lt;/li&gt;
&lt;li&gt;SUSE: unused/user-definable&lt;/li&gt;
&lt;li&gt;Slackware/Gentoo: Same as 3, which implies graphics, even&lt;/li&gt;
&lt;li&gt;Sys-V: seems to imply multi-user with graphics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I had no idea that runlevels were all over the map.&#160; I also had no idea that EC2 would disregard my inittab and make up their own ideas.&lt;/p&gt;
&lt;p&gt;Thanks, guys.&#160; Another hour-long round of RPMing, kickstarting, and image-creation ahead of me&amp;#8230;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Boot up JBoss</title>
    <slug>boot-up-jboss</slug>
    <published>2008-10-16T15:26:54Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;On my path towards clustering a Rails app on JBoss on EC2, I &lt;a title="Stumbling into the Thincrusties" href="http://www.fnokd.com/2008/10/11/stumbling-through-technology/"&gt;stumbled across&lt;/a&gt; Bryan Kearney and the other &lt;a title="Thincrust" href="http://thincrust.net/"&gt;Thincrust&lt;/a&gt; guys. With their help, I now have a JBoss AS5 + jboss-rails &amp;#8220;appliance&amp;#8221; ready to roll.&lt;/p&gt;
&lt;p&gt;Grab the &lt;a title="Raw image" href="http://fnokd.com/~bob/jboxx/jboxx5-0.1-preview-1-raw.tar.gz"&gt;raw image&lt;/a&gt; or the &lt;a title="JBoxx VMWare image" href="http://fnokd.com/~bob/jboxx/jboxx5-0.1-preview-1-vmware.tar.gz"&gt;VMWare image&lt;/a&gt;, and play along at home.&lt;/p&gt;
&lt;p&gt;Fire up the image in your favorite virtualization environment. I give my virtual machine at least a gig of RAM. Marvel at the pretty Grub splash screen, courtesy of &lt;a title="James Cobb" href="http://www.insectengine.com/wordpress/"&gt;James Cobb&lt;/a&gt; (JBoss.org designer).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fnokd.com/wp-content/uploads/2008/10/picture-6.png"&gt;&lt;img class="aligncenter size-full wp-image-551" title="Grub" src="http://www.fnokd.com/wp-content/uploads/2008/10/picture-6.png" alt="" width="456" height="339" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let it boot on up, and you&amp;#8217;ll notice a handful of things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Very few things roll across during boot.&#160; The image is an assembly of &amp;#8220;just enough&amp;#8221; OS bits.&lt;/li&gt;
&lt;li&gt;Before JBoss boots, &amp;#8220;Installing Appliance&amp;#8221; or &amp;#8220;Updating Appliance&amp;#8221; will scroll by.&#160; This is the Thincrust magic that allows adjustment of the appliance in a consistent and controlled manner (via Puppet).&lt;/li&gt;
&lt;li&gt;JBoss AS 5 (with rails deployer) starts at boot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can login with root password of &lt;strong&gt;thincrust&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The login prompt will tell you the IP address of the appliance, since it probably booted off DHCP.&#160; JBoss will be up and running at &lt;code&gt;&lt;strong&gt;http://&amp;lt;IP_ADDRESS&amp;gt;:8080/&lt;/strong&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can &lt;code&gt;&lt;strong&gt;su jboss&lt;/strong&gt;&lt;/code&gt;, whose &lt;code&gt;$HOME&lt;/code&gt; is &lt;code&gt;/opt/jboss/jboss-as5&lt;/code&gt;, which coincidentally is &lt;code&gt;$JBOSS_HOME&lt;/code&gt;.&#160; The &lt;code&gt;default&lt;/code&gt; configuration is used to start the AS.&#160; Logs are under &lt;code&gt;/opt/jboss/jboss-as5/server/default/log/&lt;/code&gt;.&#160; And to deploy, just drop something into &lt;code&gt;/opt/jboss/jboss-as5/server/default/deploy/&lt;/code&gt; and it&amp;#8217;ll hot-deploy.&lt;/p&gt;
&lt;p&gt;To control the service, as root:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;service jboss stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;service jboss start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;service jboss status&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;ll make the RPMs used to build this available sometime soon.  Until then, you can poke around &lt;a title="my JBoss RPMification project" href="http://github.com/bobmcwhirter/jboss-rpm/tree/master"&gt;the bits I use to create the RPMs&lt;/a&gt; ultimately used by Thincrust to build the appliance image.  They are packaged in a way that makes my Red Hat brethren throw up in their mouths a little bit.&lt;/p&gt;
&lt;p&gt;Also, once I test&amp;#8217;em on EC2, I&amp;#8217;ll throw out public AMIs for testing.&lt;/p&gt;
&lt;p&gt;By no means is this complete.  This just marked a nice spike of a milestone along the way.  There&amp;#8217;s still plenty of things that&amp;#8217;ll poke you in the eye if you&amp;#8217;re not careful.  Always wear your safety harness.  Drink plenty of fluids.  Keep away from children.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Stumbling through technology</title>
    <slug>stumbling-through-technology</slug>
    <published>2008-10-11T15:45:44Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;It can sometimes be funny, the paths we take.&lt;/p&gt;
&lt;p&gt;Once I&amp;#8217;d verified that a Rails app deployed on JBoss &lt;a title="Clustering Rails on JBoss" href="http://www.fnokd.com/2008/09/29/jbor-will-it-cluster/"&gt;would indeed cluster&lt;/a&gt;, I sat in my farmhouse, looking at my lone little Mac.&#160; Not much of a cluster to play with.&lt;/p&gt;
&lt;p&gt;So I started looking at &lt;a title="Amazon EC2" href="http://aws.amazon.com/ec2/"&gt;Amazon EC2&lt;/a&gt;, which is truly very nice, particularly when paired with &lt;a title="Elasticfox happiness" href="http://www.fnokd.com/2008/10/01/elasticfox-osx-and-iterm/"&gt;Elasticfox&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, firing up a cluster on EC2 requires a nicely-produced, ready-to-boot machine image or a lot of manual configuration on each node.&lt;/p&gt;
&lt;p&gt;&lt;a title="Sacha's blog" href="http://sacha.labourey.com/"&gt;Sacha&lt;/a&gt; pointed me to another group within Red Hat: &lt;a title="Thincrust" href="http://thincrust.net/"&gt;Thincrust&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thincrust configures a Fedora disk image with &amp;#8220;just enough&amp;#8221; OS bits, and provides a way to add/update applications on it.&#160; It&amp;#8217;s a happy mixture of Kickstart, &lt;a title="Puppet" href="http://reductivelabs.com/projects/puppet/"&gt;Puppet&lt;/a&gt; and Yum.&lt;/p&gt;
&lt;p&gt;The goal is to make it easy to produce &lt;a title="Example Thincrust appliances" href="http://thincrust.net/ace-examples.html"&gt;&amp;#8220;appliance&amp;#8221; images&lt;/a&gt; that could be flung onto machines, real or virtual.&#160; Need a Git server?&#160; Fire up the Git appliance on the cloud.&#160; Need a Drupal server?&#160; Fire one of those up.&#160; Need a JBoss server or cluster?&#160; We&amp;#8217;re working on that..&lt;/p&gt;
&lt;p&gt;Thincrust is built upon Fedora.&#160; My Mac is not.&#160; But &lt;a title="VMWare Fusion" href="http://www.vmware.com/products/fusion/"&gt;VMWare Fusion&lt;/a&gt; lets me run Fedora.&#160; So I can create Fedora-based Thincrust images.&#160; Which I&amp;#8217;ll deploy on EC2.&#160; Which is running Xen, probably on RHEL.&#160; And ultimately allowing you to run your Ruby-on-Rails applications on a Java stack.&lt;/p&gt;
&lt;p&gt;There are times I can&amp;#8217;t remember exactly which OS, language, or virtualization environment I should be thinking in.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Elasticfox, OSX and iTerm</title>
    <slug>elasticfox-osx-and-iterm</slug>
    <published>2008-10-01T14:51:53Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;&lt;a title="Elasticfox" href="http://developer.amazonwebservices.com/connect/entry.jspa?externalID=609"&gt;Elasticfox&lt;/a&gt; is a nice extension for managing your relationship with &lt;a title="Amazon EC2" href="http://aws.amazon.com/ec2/"&gt;EC2&lt;/a&gt; from within Firefox.&#160; It&amp;#8217;s XUL-based, somewhat homely and odd.&#160; But it&amp;#8217;s so much nicer than dealing with the &lt;code&gt;ec2-*&lt;/code&gt; scripts directly and copying Amazon&amp;#8217;s wacky hash identifiers hither and thither.&lt;/p&gt;
&lt;p&gt;But on OSX, the &amp;#8220;ssh to this instance&amp;#8221; button is wired up to Terminal.app.&#160; I can&amp;#8217;t stand Terminal.app.&#160; I much prefer iTerm.&lt;/p&gt;
&lt;p&gt;So, a little AppleScript hacking, and Elasticfox now uses iTerm to connect to instances through ssh.&lt;/p&gt;
&lt;p&gt;Instead of jamming it all into a dozen &lt;code&gt;-e&lt;/code&gt; options on &lt;code&gt;osascript&lt;/code&gt;, I just put it in a file, and changed my configuration.&lt;/p&gt;
&lt;dl id="attachment_542" class="wp-caption aligncenter" style="width: 448px;"&gt;
&lt;dt class="wp-caption-dt"&gt;&lt;a href="http://www.fnokd.com/wp-content/uploads/2008/10/picture-26.png"&gt;&lt;img class="size-full wp-image-542" title="Elasticfox configuration" src="http://www.fnokd.com/wp-content/uploads/2008/10/picture-26.png" alt="Elasticfox configuration" width="438" height="265" /&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;p&gt;And the script itself:&lt;/p&gt;
&lt;pre style="overflow:auto;font-size:90%;"&gt;&lt;code&gt;
on run argv
  tell application "iTerm"
    activate
    set cmd to "ssh -i " &amp;amp; item 1 of argv &amp;amp; " " &amp;amp; item 2 of argv
    set myterm to the last terminal
    tell myterm
      launch session "Default Session"
      tell the last session
        write text the cmd
      end tell
    end tell
  end tell
end run
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Reminder: RaleighRubyCamp</title>
    <slug>reminder-raleighrubycamp</slug>
    <published>2008-09-30T13:23:17Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Don&amp;#8217;t forget, in a few weeks at the &lt;a title="Red Hat in Raleigh" href="http://www.redhat.com/about/contact/ww/americas/raleigh.html"&gt;Red Hat offices in Raleigh&lt;/a&gt;, there will be an unconference-style &lt;a title="RaleighRubyCamp" href="http://barcamp.pbwiki.com/RaleighRubyCamp"&gt;Ruby BarCamp&lt;/a&gt; on October 18th.&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://barcamp.pbwiki.com/RaleighRubyCamp"&gt;&lt;img class="aligncenter size-medium wp-image-535" title="raleigh-rubycamp" src="http://www.fnokd.com/wp-content/uploads/2008/09/raleigh-rubycamp-300x106.png" alt="" width="300" height="106" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My plan is to put together a few clumps of slides, prepare a cluster on EC2, and see if anyone wants to hear about JBoss Rails.&#160; I&amp;#8217;ll of course put them online sometimes before/during/after the camp, since that&amp;#8217;s &lt;a title="BarCamp rules" href="http://barcamp.pbwiki.com/TheRulesOfBarCamp"&gt;part of the rules&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Multiple instances of AS on OSX</title>
    <slug>multiple-instances-of-as-on-osx</slug>
    <published>2008-09-29T17:22:38Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Rysiek asked me to elucidate my clustering on OSX&amp;#8230;&lt;/p&gt;
&lt;p&gt;By default, it seems that OSX provides exactly 1 localhost address, unlike RHEL.&#160; I normally make use of 127.0.0.1/24 when I&amp;#8217;m deploying on Linux, and figured I&amp;#8217;d do the same on OSX.&lt;/p&gt;
&lt;p&gt;To accomplish this, you need to create some new localhost IPs to play with.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
sudo ifconfig lo0 alias 127.0.0.10 up
sudo ifconfig lo0 alias 127.0.0.11 up
sudo ifconfig lo0 alias 127.0.0.12 up
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, when you run your AS with &lt;code&gt;./run.sh&lt;/code&gt;, just pass &lt;code&gt;-b 127.0.0.10&lt;/code&gt; or &lt;code&gt;-b 127.0.0.11&lt;/code&gt; etc, and the entire stack will bind to that IP address.&lt;/p&gt;
&lt;p&gt;At this point, I&amp;#8217;m allowing each AS instance to share a work directory and such, which is probably not exactly the safest thing to be doing.  Normally each cluster node would be a discrete machine with its own &lt;code&gt;JBOSS_HOME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For the apache config, in &lt;code&gt;/private/etc/apache2/httpd.conf&lt;/code&gt;, I uncommented the line to allow vhost file loading:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
# Virtual hosts
Include /private/etc/apache2/extra/httpd-vhosts.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, in the &lt;code&gt;httpd-vhosts.conf&lt;/code&gt; file I fixed it up to include my virtual host for the head-end load-balancing stuff.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; is only barely conformant, and even the &lt;code&gt;DocumentRoot&lt;/code&gt; is gratuitous, really.  It looks like this:&lt;/p&gt;
&lt;pre style="overflow:auto;font-size:90%"&gt;&lt;code&gt;
&amp;lt;VirtualHost *:80&amp;gt;
  ServerName app.local.ballast
  DocumentRoot "/Users/bob/public_html"

  RewriteEngine on

  RewriteMap    lb      'prg:/Users/bob/bin/load_balancer local.ballast 1 3'
  RewriteRule   ^/(.*)$ ${lb:$1}           [P,L]
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What that is doing is passing each requested path to the &lt;code&gt;load_balancer&lt;/code&gt; script I&amp;#8217;ve borrowed from I-don&amp;#8217;t-know-&amp;#8217;where.  It returns an augmented URL pointing to one of my localhost-bound nodes.&lt;/p&gt;
&lt;pre style="overflow:auto;font-size:90%"&gt;&lt;code&gt;
#!/usr/bin/env perl
##
##  lb.pl -- load balancing script
##

$| = 1;

$name   = $ARGV[0];         # the hostname base
$first  = $ARGV[1];         # the first server (not 0 here, because 0 is myself)
$last   = $ARGV[2];         # the last server in the round-robin

$cnt = 0;
while (&amp;lt;STDIN&amp;gt;) {
    $server = sprintf("node%d.%s", $cnt+$first, $name);
    $cnt = (($cnt+1) % ($last+1-$first));
    print "http://$server:8080/$_";
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If a path of &lt;code&gt;/foo/bar&lt;/code&gt; is handed to it on STDIN, it&amp;#8217;ll return something in the format of &lt;code&gt;http://node1.local.ballast:8080/foo/bar&lt;/code&gt; or &lt;code&gt;http://node2.local.ballast:8080/foo/bar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Through the magic of &lt;code&gt;/etc/hosts&lt;/code&gt; those friendly names point to the localhost bound AS cluster nodes, along with &lt;code&gt;app.local.ballast&lt;/code&gt; pointing to good old traditional 127.0.0.1, where httpd is normally listening.  That&amp;#8217;s my head-end from the &lt;code&gt;httpd-vhosts.conf&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
127.0.0.1       localhost app.local.ballast

127.0.0.10      node1.local.ballast
127.0.0.11      node2.local.ballast
127.0.0.12      node3.local.ballast
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fire up a browser and I surf to &lt;code&gt;http://app.local.ballast/&lt;/code&gt;, apache answers, and immediately and invisibly proxies the request to port 8080 of one of my localhost-bound JBoss AS instances.&lt;/p&gt;
&lt;p&gt;Nice.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JBoR: Will it cluster?</title>
    <slug>jbor-will-it-cluster</slug>
    <published>2008-09-29T15:08:01Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;JBoss on Rails will indeed cluster!&lt;/p&gt;
&lt;p&gt;After modifying and dropping my &lt;a href="http://github.com/bobmcwhirter/jboss-rails/tree/master"&gt;jboss-rails.deployer&lt;/a&gt; into an &amp;#8216;all&amp;#8217; configured server of JBoss AS 5, and firing up 3 instances on my localhost (non-trivial on OSX&amp;#8230;):&lt;/p&gt;
&lt;pre style="overflow: auto; font-size: 90%"&gt;&lt;code&gt;
10:43:28,409 INFO  [RPCManagerImpl] Received new cluster view: [127.0.0.10:63740|2] [127.0.0.10:63740, 127.0.0.11:63747, 127.0.0.12:63749]
10:43:28,435 INFO  [RPCManagerImpl] Cache local address is 127.0.0.12:63749
10:43:28,469 INFO  [ComponentRegistry] JBoss Cache version: JBossCache 'Poblano' 2.2.0.GA
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I&amp;#8217;ve got 3 nodes running the same Rails app, all sharing a cookie and a &lt;a href="http://www.jboss.org/jbosscache/"&gt;JBossCache&lt;/a&gt; cache.  Nick Sieger&amp;#8217;s &lt;a href="http://github.com/nicksieger/jruby-rack/tree/master"&gt;JRuby-Rack&lt;/a&gt; handles binding the Rails session to the actual servlet session, and JBossCache takes care of the rest.&lt;/p&gt;
&lt;p&gt;A little 8-line perl round-robinning load-balancer is wired up through mod_rewrite in my Apache httpd.conf to throw requests to each of the nodes.  Anything set in the session is immediately available at the next request which lands at a different node.&lt;/p&gt;
&lt;p&gt;Further down the line, we can look at a clustered cache for caching AR models and view fragments.  Not too shabby.&lt;/p&gt;
&lt;p&gt;It should be fairly easy to create a nice Amazon EC2 AMI with Fedora+AS5+jboss-rails, plus some better Rake/capistrano tasks, and make for quick cluster deployment.&#160;&#160; Any EC2 experts wanting to jump in?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JBoss Amputation</title>
    <slug>jboss-amputation</slug>
    <published>2008-09-23T18:02:16Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Since JBoss AS 5 is built on top of Microcontainer, it&amp;#8217;s effectively a network of beans just doing their respective jobs.&#160; You have already probably noticed that it ships with 3 included configurations: &lt;strong&gt;minimal&lt;/strong&gt;, &lt;strong&gt;default&lt;/strong&gt;, and &lt;strong&gt;all&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, they&amp;#8217;re awefully far apart along the spectrum of configuration options.&#160; The &lt;strong&gt;minimal&lt;/strong&gt; configuration barely gets the container running, while the &lt;strong&gt;all&lt;/strong&gt; configuration includes, well, everything.&#160; For most apps, it&amp;#8217;s safe to start with the &lt;strong&gt;default&lt;/strong&gt; configuration.&#160; But default to who?&#160; It&amp;#8217;s the 80% case.&#160; But the 80% of the world who gets by with &lt;strong&gt;default&lt;/strong&gt;, it still probably includes way more than they need.&#160; Of course, each user needs a different subset of that 80%.&lt;/p&gt;
&lt;p&gt;Given that the MC is managing a graph, it seems like we should be able to actually perform a solve to determine what is or is not required.&#160; Or at least get a good idea.&#160; Bonus points if someone can then twiddle conf/, deploy/ and deployers/ to tidy things up.&lt;/p&gt;
&lt;p&gt;Anyhow, for the &lt;a title="jboss-as-rails" href="http://github.com/bobmcwhirter/jboss-as-rails/tree/master"&gt;jboss-as-rails&lt;/a&gt; project, I&amp;#8217;m kicking it old-school, and going with default.&#160; I&amp;#8217;m jamming it into git, and hopefully with some help, we can get it pared down to what we need.&lt;/p&gt;
&lt;p&gt;The &lt;a title="jboss-as-rails" href="http://github.com/bobmcwhirter/jboss-as-rails/tree/master"&gt;jboss-as-rails&lt;/a&gt; project is simply a configuration of AS that includes only what we need, along with the jboss-rails.deployer from the &lt;a title="jboss-rails" href="http://github.com/bobmcwhirter/jboss-rails/tree/master"&gt;jboss-rails&lt;/a&gt; project (notice the subtle naming difference&amp;#8230;).&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a picture to see how it&amp;#8217;ll all ultimately fit together.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fnokd.com/wp-content/uploads/2008/09/jboss-rails-stuff-10kview.png"&gt;&lt;img class="aligncenter size-full wp-image-512" title="jboss-rails-stuff-10kview" src="http://www.fnokd.com/wp-content/uploads/2008/09/jboss-rails-stuff-10kview.png" alt="" width="329" height="328" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The plugin will offer rake tasks for managing the included AS, deploying your app.&#160; I&amp;#8217;ll also produce an AS-free version of the plugin, assuming you want to manage your own AS separately.&lt;/p&gt;
&lt;p&gt;And poke around &lt;a title="jboss-as-rails" href="http://github.com/bobmcwhirter/jboss-as-rails/tree/master"&gt;jboss-as-rails&lt;/a&gt;, see what we can rip out.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JBoss on Rails</title>
    <slug>jboss-on-rails</slug>
    <published>2008-09-22T14:48:10Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Tomorrow is my first real status update call with my boss, &lt;a title="Sacha's blog" href="http://sacha.labourey.com/"&gt;Sacha Labourey&lt;/a&gt;.&#160; I&amp;#8217;ve been anxious to deliver something, to prove I hadn&amp;#8217;t gone &lt;em&gt;completely&lt;/em&gt; pudding-brained during my tenure as management.&lt;/p&gt;
&lt;p&gt;This morning, it all finally came together in a pleasing fashion, causing me to hoot and holler loud enough to scare the cats and probably some cows.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fnokd.com/wp-content/uploads/2008/09/picture-22.png"&gt;&lt;img class="aligncenter size-full wp-image-485" title="Cows" src="http://www.fnokd.com/wp-content/uploads/2008/09/picture-22.png" alt="" width="229" height="134" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve just &lt;a title="jboss-rails" href="http://github.com/bobmcwhirter/jboss-rails/tree/master"&gt;pushed an ugly-but-working deployer&lt;/a&gt; targeting &lt;a title="JBoss-AS" href="http://www.jboss.org/jbossas/downloads/"&gt;JBoss-AS 5.0.0.CR2&lt;/a&gt; (the latest and greatest!)&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s not very consumable at this point, as it&amp;#8217;s just a deployer, not a nice Rails plugin with a set of Rake tasks.&#160; Heck, it doesn&amp;#8217;t even &lt;em&gt;undeploy&lt;/em&gt; yet.&lt;/p&gt;
&lt;p&gt;But adding the deployer to your server&amp;#8217;s &lt;code&gt;deployers/&lt;/code&gt; directory allows you symlink live &lt;code&gt;RAILS_ROOT&lt;/code&gt;s into your &lt;code&gt;deploy/&lt;/code&gt; directory, and be running on JBoss.&lt;/p&gt;
&lt;p&gt;Live.&#160; In-situ.&#160; Edit your controllers or views as you like, and your changes are immediately reflected in the running instance.&#160; Just like with &lt;code&gt;./script/server&lt;/code&gt;.&#160; It does not even have to redeploy your app.&#160; The rails framework is handling the magic reloading.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fnokd.com/wp-content/uploads/2008/09/picture-21.png"&gt;&lt;img class="aligncenter size-full wp-image-484" title="Hello World" src="http://www.fnokd.com/wp-content/uploads/2008/09/picture-21.png" alt="" width="237" height="55" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s taken me some time to dig through the innards of JBoss-Microcontainer, and a few false starts, but I finally figured out a super simple deployment process.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;d previously been trying to manipulate a &lt;code&gt;RAILS_ROOT&lt;/code&gt; into a synthetic Java WAR archive, and shoe-horn things around that.&#160; But I have the freedom to go lower than that, so the jboss-rails deployer just sets up a Catalina context appropriately, without regard to &lt;code&gt;WEB-INF&lt;/code&gt; or other non-Rails stuff.&#160; There&amp;#8217;s no need for that cruft.&#160; Likewise, I can directly control and manipulate the classpath, so the &lt;code&gt;RAILS_ROOT&lt;/code&gt; does not even have to have any JRuby bits in it.&lt;/p&gt;
&lt;p&gt;The example application (&lt;a title="ballast test application" href="http://github.com/bobmcwhirter/jboss-rails/tree/master/src/test/ballast"&gt;src/test/ballast&lt;/a&gt;) is a virgin rails app with ActiveRecord disabled so I don&amp;#8217;t have to deal with database-driver gems just yet.&lt;/p&gt;
&lt;p&gt;Once deployed, a Rails app looks like pretty much any other web-app.&#160; The jboss.rails.deployment domain contains deployment objects for each rails app.&#160; And jboss.web contains all the webby bits floating around.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fnokd.com/wp-content/uploads/2008/09/picture-20.png"&gt;&lt;img class="aligncenter size-full wp-image-483" title="Deployment MBean" src="http://www.fnokd.com/wp-content/uploads/2008/09/picture-20.png" alt="" width="217" height="101" /&gt;&lt;/a&gt;I need to go&#160; back and remove the dead-end code I&amp;#8217;ve left in my wake, and update the tests I&amp;#8217;d disabled while in a coding flury (bad Bob!)&#160; I plan to put together an easy-to-consume plugin gem which contains an nicely-configured AS along with the jboss-rails deployer pre-installed, along with rake tasks to start/stop AS, and deploy your app.&#160; I&amp;#8217;d also like to give clustering a whirl, and see what we can do.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s been an excellent 3 weeks back as an engineer.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Maven, Java and RSpec</title>
    <slug>maven-java-and-rspec</slug>
    <published>2008-09-18T12:57:37Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Since I&amp;#8217;ve been back on the job, writing Java code lately, that means I&amp;#8217;ve been testing Java code lately.&lt;/p&gt;
&lt;p&gt;After living in the land of Ruby with &lt;a title="RSpec" href="http://rspec.info/"&gt;RSpec&lt;/a&gt;, thinking about JUnit did not excite me.&#160; Thankfully I found the &lt;a title="rspec-maven-plugin" href="http://svn.codehaus.org/mojo/trunk/sandbox/rspec-maven-plugin/"&gt;rspec-maven-plugin&lt;/a&gt;, which integrates straight into the maven test process.&lt;/p&gt;
&lt;p&gt;I like rspec because it removes a whole lot of the cruft involved in writing tests.&#160; When I return to the specs weeks later, I can still read the intent.&#160; So often, with JUnit tests named with cryptic method names, it&amp;#8217;s difficult to ascertain exactly what&amp;#8217;s intended to be tested.&lt;/p&gt;
&lt;p&gt;The beta-4 plugin on the repository is based on jruby-1.1.2, but in SVN I&amp;#8217;ve updated it to support 1.1.4.&#160; I think there&amp;#8217;s still some more improvements to be made, such as respecting &lt;strong&gt;maven.test.skip&lt;/strong&gt; and getting rid of the need for &lt;strong&gt;JRUBY_HOME&lt;/strong&gt; pointing to a full installation. (Note: I did not write this plugin, I&amp;#8217;ve just started contributing to it).&lt;/p&gt;
&lt;p&gt;After a little configuration of the plugin in your pom.xml&amp;#8230;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
&amp;lt;plugin&amp;gt;
  &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;rspec-maven-plugin&amp;lt;/artifactId&amp;gt;
  &amp;lt;configuration&amp;gt;
    &amp;lt;!-- jrubyHome points to the JRuby installation you wish to use (usually ${env.JRUBY_HOME}) --&amp;gt;
    &amp;lt;jrubyHome&amp;gt;${env.JRUBY_HOME}&amp;lt;/jrubyHome&amp;gt;
    &amp;lt;!-- sourceDirectory references where your RSpec tests reside --&amp;gt;
    &amp;lt;sourceDirectory&amp;gt;${basedir}/src/test/specs&amp;lt;/sourceDirectory&amp;gt;
    &amp;lt;!-- outputDirectory specifies where the RSpec report should be placed --&amp;gt;
    &amp;lt;outputDirectory&amp;gt;${basedir}/target&amp;lt;/outputDirectory&amp;gt;
    &amp;lt;!--&amp;lt;skipTests&amp;gt;true&amp;lt;/skipTests&amp;gt;--&amp;gt;
  &amp;lt;/configuration&amp;gt;
  &amp;lt;executions&amp;gt;
    &amp;lt;execution&amp;gt;
      &amp;lt;id&amp;gt;test&amp;lt;/id&amp;gt;
      &amp;lt;phase&amp;gt;test&amp;lt;/phase&amp;gt;
      &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;spec&amp;lt;/goal&amp;gt;
      &amp;lt;/goals&amp;gt;
    &amp;lt;/execution&amp;gt;
  &amp;lt;/executions&amp;gt;
&amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, just start flinging out specs in ./src/test/specs/.&lt;/p&gt;
&lt;p&gt;This is a portion of a test against a JBoss-VFS VirtualFileHandler implementation, written in Java in WarRootHandler.java:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
describe WarRootHandler do

  before(:each) do
    @context = RailsAppContextFactory.getInstance.createRoot( "ballast", File.dirname( __FILE__ ) + '/../ballast' )
    @root = @context.get_war_root_handler
  end

  it "should have a rails:// URL" do
    @root.to_uri.to_string.should eql( "rails://ballast/" )
  end

  it "should be resolvable through java URL handlers" do
    url = java.net.URL.new( "rails://ballast/" )
    url.to_s.should_not be_nil
  end

  it "should delegate for WEB-INF requests" do
    web_inf = @root.get_child( 'WEB-INF' )
    web_inf.should_not be_nil
    jboss_rails_yml = web_inf.get_child( 'jboss-rails.yml' )
    jboss_rails_yml.should_not be_nil
  end
end
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Deployers in JBoss Microcontainer</title>
    <slug>deployers-in-jboss-microcontainer</slug>
    <published>2008-09-17T14:08:35Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;In order to deploy a Rails app, I&amp;#8217;ve had to learn the innards of Microcontainer&amp;#8217;s deployer framework.&#160; After a few wrong turns, I feel like I&amp;#8217;ve finally gotten a handle on it.&lt;/p&gt;
&lt;p&gt;While we&amp;#8217;re all used to dropping in an .ear or a .war, and might think in terms of deploying these archive formats, that&amp;#8217;s ultimately one step removed from true deployment through MC.&lt;/p&gt;
&lt;p&gt;Within MC, when you deploy a .war or an exploded WAR directory, the first step is something recognizes that the chunk you&amp;#8217;re deploying is roughly shaped like a WAR.&#160; I&amp;#8217;ll address that phase of deployment in a future post.&lt;/p&gt;
&lt;p&gt;Knowing that the deployment is a WAR also tells MC to look in WEB-INF/ for meta-data descriptors, such as &lt;strong&gt;web.xml&lt;/strong&gt; and &lt;strong&gt;jboss-web.xml&lt;/strong&gt;.&#160; This is where true deployment of components starts.&#160; Deployment runs through a series of stages, with deployers setup to match particular files and stages, doing the right things at the right time.&lt;/p&gt;
&lt;p&gt;One of the earliest stages is the &lt;strong&gt;PARSE&lt;/strong&gt; stage.&#160; A deployer can be bound to this stage to be given an early chance to match, parse, and act upon any meta-data file.&#160; For normal WAR deployment, the &lt;strong&gt;WebAppParsingDeployer&lt;/strong&gt; does exactly that.&#160; There&amp;#8217;s a nice hierarchy of classes to make parsing XML descriptors such as web.xml super simple.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;WebAppParsingDeployer&lt;/strong&gt; is the bridge from a web.xml file sitting on the filesystem or in an archive to the &lt;strong&gt;MetaData&lt;/strong&gt; deployment bits. The parser reads web.xml, and produces a &lt;strong&gt;WebMetaData&lt;/strong&gt; object associated with the deployment.&#160; The &lt;strong&gt;WebMetaData&lt;/strong&gt; is simply a nice object-tree representing anything you can denote in web.xml.&lt;/p&gt;
&lt;p&gt;We also might have a jboss-web.xml meta-data in our WAR, and that is parsed during the &lt;strong&gt;PARSE&lt;/strong&gt; stage by the &lt;strong&gt;JBossWebAppParsingDeployer&lt;/strong&gt;.&#160; This deployer, like the previous, reads the XML file and creates, in this case, a &lt;strong&gt;JBossWebMetaData&lt;/strong&gt; object.&lt;/p&gt;
&lt;p&gt;Once we&amp;#8217;ve parsed these .xml files, the container has enough information to build up the classpath for the component.&#160; Some of these deployers have also thrown off or modified some &lt;strong&gt;ClassLoadingMetaData&lt;/strong&gt;, which describe paths that should be added to the classpath.&lt;/p&gt;
&lt;p&gt;As the container enters the &lt;strong&gt;CLASSLOADER&lt;/strong&gt; stage of deployment, other magic occurs to actually set up the classpath.&lt;/p&gt;
&lt;p&gt;In the end, it&amp;#8217;s the &lt;strong&gt;JBossWebMetaData&lt;/strong&gt; that drives the ultimate deployment, but what if we don&amp;#8217;t have a jboss-web.xml?&#160; That&amp;#8217;s where the &lt;strong&gt;MergedJBossWebMetaDataDeployer&lt;/strong&gt; comes in.&#160; It looks for a &lt;strong&gt;WebMetaData&lt;/strong&gt;, and a &lt;strong&gt;JBossWebMetaData&lt;/strong&gt; if one has been parsed, and merges them into a singular &lt;strong&gt;JBossWebMetaData&lt;/strong&gt;.&#160; I think it also mixes in any defaults that you have set for server-wide settings.&lt;/p&gt;
&lt;p&gt;Additionally, as jboss-web.xml is parsed by &lt;strong&gt;JBossWebAppParsingDeployer&lt;/strong&gt;, it will perform the merge itself.&#160; Additionally, magic is occuring to merge any annotation-based meta-data.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m a little fuzzy on the ins and outs of the &lt;strong&gt;CLASSLOADER&lt;/strong&gt; stage at this point, but magic occurs there.&lt;/p&gt;
&lt;p&gt;And our app still isn&amp;#8217;t deployed yet.&#160; But we&amp;#8217;re getting there.&lt;/p&gt;
&lt;p&gt;Finally, we enter the REAL stage of deployment, which fittingly-enough, is where the actual deployment occurs.&#160; Hooray!&lt;/p&gt;
&lt;p&gt;Our &lt;strong&gt;TomcatDeployer&lt;/strong&gt; is hanging out there, waiting for &lt;strong&gt;JBossWebMetaData&lt;/strong&gt; objects to appear.&#160; When it sees one, it goes to work setting up information for Tomcat to deploy a web-app.&#160; It configures everything in Tomcat from the information other deployers figured out from web.xml and jboss-web.xml and embodied in the MetaData.&lt;/p&gt;
&lt;p&gt;It jams it into Tomcat, hits the big red &amp;#8220;go&amp;#8221; button, and port 8080 is serving you web-app.&lt;/p&gt;
&lt;p&gt;Finally.&lt;/p&gt;
&lt;p&gt;In general, to deploy in AS5 using Microcontainer, you need some MetaData bits, and perhaps a bag of files/classes/resources.&#160; Nothing says they have to be bundled into a .war, or include some j2ee XML deployment descriptor.&#160; If you have other magical ways of bundling MetaData and resources, you&amp;#8217;re good to go.&lt;/p&gt;
&lt;p&gt;Of course, Ales or Adrian may tell me I&amp;#8217;m completely wrong.&#160; That&amp;#8217;s always a possibility.&#160; In fact, I&amp;#8217;m sure I&amp;#8217;ve got some things wrong, in reverse order, and otherwise mixed-up.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a picture for you, though.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fnokd.com/wp-content/uploads/2008/09/war-deployment.png"&gt;&lt;img class="aligncenter size-medium wp-image-474" title="war-deployment" src="http://www.fnokd.com/wp-content/uploads/2008/09/war-deployment-292x300.png" alt="" width="292" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While discussing this on the &lt;a title="Forum post" href="http://www.jboss.com/index.html?module=bb&amp;amp;op=viewtopic&amp;amp;t=142550"&gt;Microcontainer user&amp;#8217;s forum&lt;/a&gt;, I discovered that there are indeed several errors and inconsistencies in the above.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update #2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;New image, slightly new text to match the image better.&#160; Comments and clarifications still welcomed.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JGroups impersonating memcached</title>
    <slug>jgroups-impersonating-memcached</slug>
    <published>2008-09-04T11:44:52Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I woke up and noticed that a &lt;a title="JGroups: memcached" href="http://www.jgroups.org/javagroupsnew/docs/memcached/memcached.html"&gt;memcached mode&lt;/a&gt; was announced by Bela Ban, the fantastically Swiss man who jogs waaay too much.&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s a lot of things in this world that can take advantage of memcached.&#160; Personally, I find this quite interesting, considering that memcached tends to be the cache-of-choice for lots of non-Java languages.&#160; For instance, fragment caching and model caching in Rails supports talking to memcached.&lt;/p&gt;
&lt;p&gt;Or now, &lt;a title="JGroups" href="http://www.jgroups.org/javagroupsnew/docs/index.html"&gt;JGroups&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Another JBoss GitHub repository mirror</title>
    <slug>another-jboss-github-repository-mirror</slug>
    <published>2008-08-30T16:53:47Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;For those of you playing along at home, I&amp;#8217;ve added &lt;strong&gt;jboss-deployers&lt;/strong&gt; to my GitHub mirror set.&#160; Like the others, the &amp;#8216;vendor&amp;#8217; branch is the one you want.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="jboss-deployers" href="http://github.com/bobmcwhirter/jboss-deployers/tree/vendor"&gt;jboss-deployers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="jbossas" href="http://github.com/bobmcwhirter/jbossas/tree/vendor"&gt;jbossas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="microcontainer" href="http://github.com/bobmcwhirter/microcontainer/tree/vendor"&gt;microcontainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="vfs" href="http://github.com/bobmcwhirter/vfs/tree/vendor"&gt;vfs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;m adding JBoss projects to my mirror set as I trip across the need to browse their source.&#160; If there&amp;#8217;s a JBoss project you&amp;#8217;d like to see mirrored out of SVN, drop the URL to the &lt;strong&gt;trunk&lt;/strong&gt; of the SVN repository in a comment on this post, and I&amp;#8217;ll start slurping it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Raleigh RubyCamp</title>
    <slug>raleigh-rubycamp</slug>
    <published>2008-08-25T21:37:33Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Oh, fortuna!&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m rejoining the Red Hat/JBoss mothership, doing rubyish things, and what do you know, but there&amp;#8217;s a &lt;a title="Raleigh RubyCamp" href="http://barcamp.pbwiki.com/RaleighRubyCamp"&gt;RubyCamp&lt;/a&gt; at the RHT HQ in Raleigh on October 18th.&lt;a title="37signals" href="http://37signals.com/"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a title="37signals" href="http://37signals.com/"&gt;37signals&lt;/a&gt; and &lt;a title="Ruby Row" href="http://rubyrow.net/"&gt;Ruby Row&lt;/a&gt; are sponsoring the event.&lt;a title="Ruby Row" href="http://rubyrow.net/"&gt;&lt;br /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Space is limited to 200, but at the time of this posting only 57 have signed up.&#160; It&amp;#8217;s an unconference, so bring your own good ideas, and you can lead a session&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Be a smarter patch monkey</title>
    <slug>be-a-smarter-patch-monkey</slug>
    <published>2008-08-25T01:03:10Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;A project I&amp;#8217;m working on requires some hard-core monkey-patching of Rails internals.&lt;/p&gt;
&lt;p&gt;Monkey-patching is a dangerous occupation, and liable to cause new and intriguing bugs into previously-tested sane code.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve been working on a smarter patch-monkey, known as &lt;a title="Lemur: The smarter patch monkey" href="http://github.com/bobmcwhirter/lemur/tree/master"&gt;Lemur&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The goal is to allow monkey-patched methods (currently only instance methods are supported) to be written in modules that are mixed in (as modules are) but allowing redefinition of methods in the patchee by the patcher module.&lt;/p&gt;
&lt;p&gt;I may be ignorant of some Ruby to make it happen, but I&amp;#8217;ve resorted to &lt;strong&gt;alias_method&lt;/strong&gt; and &lt;strong&gt;remove_method&lt;/strong&gt;, along with a handful of Ruby&amp;#8217;s reflection methods to swap methods in a reasonable, clean, and auditable fashion.&lt;/p&gt;
&lt;p&gt;The specs demonstrate how it works.  Assume a basic class:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
class BasicClass
  def some_instance_method()
    # ...
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And a module to monkey-patch it&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
module PatchModule
  def some_instance_method()
    # ...
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Normally, Ruby will prefer a locally-defined method over a module mix-in, so you can&amp;#8217;t just &lt;strong&gt;include&lt;/strong&gt; your patch module in, even using &lt;strong&gt;class_eval&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So, invite in the Lemur.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
Lemur.patch_class(BasicClass, PatchModule)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And voila!  Your class is monkey-patched by the nicely self-contained module,  plus, it&amp;#8217;s tracked.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
Lemur.patched_classes # [ BasicClass ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And even more cool, you can get some patch-audit information for each patched class:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
Lemur.patch_records( BasicClass ) # [ array of PatchRecords ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each PatchRecord keeps up with the patched class, the patched method name, the actual replaced Method object, along with the patch module and the patch method.&lt;/p&gt;
&lt;p&gt;A total of 40min has been spent writing the code so far.  The idea is to add better auditability, &lt;strong&gt;unpatching&lt;/strong&gt;, and dealing with class methods, not just instance methods.&lt;/p&gt;
&lt;p&gt;Now, when you encounter a weird bug, you can ask the Lemur where the oddness might&amp;#8217;ve originated.&lt;/p&gt;
&lt;p&gt;Want to pitch in and do some meta-programming to make future meta-programming less scary, &lt;a href="http://github.com/bobmcwhirter/lemur/tree/master"&gt;fork my git repository&lt;/a&gt; and send me some pull requests.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GitHub Mirrors for some JBoss Projects</title>
    <slug>github-mirrors-for-some-jboss-projects</slug>
    <published>2008-08-21T16:12:09Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;In addition to the previously-mentioned JRuby mirror from Codehaus SVN to GitHub, I&amp;#8217;m now also mirroring:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="JBoss Microcontainer on GitHub" href="http://github.com/bobmcwhirter/microcontainer/tree/vendor"&gt;JBoss Microcontainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="JBoss AS5 on GitHub" href="http://github.com/bobmcwhirter/jbossas/tree/vendor"&gt;JBoss AS5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="JRuby on GitHub" href="http://github.com/bobmcwhirter/jruby/tree/vendor"&gt;JRuby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All are trunk-only mirrors, not picking up branches or tags.  Since the JBoss repository path has about 77,000 subversion revisions, and at one point held any and all JBoss software ever written, I have not mirrored it in its entirety.  Instead, I&amp;#8217;ve only grabbed http://anonsvn.jboss.org/repos/jbossas/trunk back to revision 77,200.  It&amp;#8217;ll mirror going forward, but the github repository does not include any ancient history.&lt;/p&gt;
&lt;p&gt;For those of you playing along at home, the way to fetch just a cauterized &amp;#8220;tip&amp;#8221; from SVN to a git repository is to mirror &lt;a title="Mirroring SVN to GitHub" href="http://www.fnokd.com/2008/08/20/mirroring-svn-repository-to-github/"&gt;as before&lt;/a&gt;, but for the initial &amp;#8220;git svn fetch&amp;#8221; command, add a SVN-style revision range&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git svn fetch -r77200:HEAD&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For me, at least, trying to fetch the tip revision for the directory resulted in failure.  Going back a few revisions, and using a range that includes HEAD worked much better.  Then just push to GitHub has normal, and start your rebase/push cronjob.&lt;/p&gt;
&lt;p&gt;The JBoss projects are updated from SVN every 15 minutes.  But we&amp;#8217;re updating from the anonymous SVN repository at JBoss, which itself is delayed from the developer repository by some amount of time.  So, ultimately, the GitHub mirror should be mostly up-to-date, but could lag behind actual developer commits by up to and hour, I reckon.&lt;/p&gt;
&lt;p&gt;If you&amp;#8217;re wanting to track these repositories using my git mirror, only track the vendor branch.  I make no claims about the stability or sanity of the &amp;#8216;master&amp;#8217; ref at any point in time.  I will make sure &amp;#8216;vendor&amp;#8217; exactly matches the Subversion history, though.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Mirroring SVN repository to GitHub</title>
    <slug>mirroring-svn-repository-to-github</slug>
    <published>2008-08-20T19:24:22Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;So, I&amp;#8217;m gearing up to work on some Java+Ruby (via JRuby) stuff.  The Java world still seems fairly entrenched in the cult of Subversion, while the Rubyists have gone with &lt;a title="Git" href="http://git.or.cz/"&gt;Git&lt;/a&gt; lately.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m still wrapping my mind around Git, but with &lt;a title="GitHub" href="https://github.com/"&gt;GitHub&lt;/a&gt;, it&amp;#8217;s fairly easy and straight-forward.  I paid my $7 for the micro account, to give me room to screw around.&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s quite a few posts about mirroring SVN to a Git repository, but I feel the need to add my own, of course.&lt;/p&gt;
&lt;p&gt;My goal is mirror the trunk of the JRuby project from Codehaus SVN to my account on GitHub.  By doing this, I can track the trunk development, and also work on my own patches.&lt;/p&gt;
&lt;p&gt;I started by creating an empty repository on my GitHub account, called &amp;#8216;jruby&amp;#8217;.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a title="My JRuby Git repository" href="http://github.com/bobmcwhirter/jruby/tree/master"&gt;http://github.com/bobmcwhirter/jruby/tree/master&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, over on my always-on, Contegix-powered server, I create a brand new local git repository, also called jruby.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;mkdir jruby&lt;/p&gt;
&lt;p&gt;cd jruby&lt;/p&gt;
&lt;p&gt;git init&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Next I use &amp;#8216;git svn init&amp;#8217; to setup the SVN repository as a remote code source to track.  Using the -T switch points git to the trunk, and ignores branches and tags, which is fine for my purposes.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git svn init -T &lt;a title="JRuby svn repository" href="http://svn.codehaus.org/jruby/trunk/jruby/"&gt;http://svn.codehaus.org/jruby/trunk/jruby/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That does not pull any code, but it lets my local working tree know that I&amp;#8217;m going to be pulling from an SVN repository at some point.  This setup only occurs in your local repository, and does not seem to ever get pushed to GitHub once we get to that point.&lt;/p&gt;
&lt;p&gt;So, now we do the initial pull.  Once again, this is on my always-on, Contegix-powered server, not my local laptop.  I&amp;#8217;m doing this on a server because towards the end, we&amp;#8217;ll be setting up a cronjob to accomplish it all.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git svn fetch&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&amp;#8217;ll think for a while, it&amp;#8217;ll slurp down the SVN revision history, it&amp;#8217;ll stop and ponder occasionally, and eventually, it&amp;#8217;ll be done.  Woo-hoo!  Our local working tree is now up-to-date with the subversion HEAD as of that moment.&lt;/p&gt;
&lt;p&gt;To reduce disk-space used by your local repository, go ahead and run the garbage collector&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git gc&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;On my system, that reduced the space from over 600mb to under 70mb.&lt;/p&gt;
&lt;p&gt;Now, that&amp;#8217;s great, but it&amp;#8217;s still just on my local repository.  Time to push it to GitHub.  We&amp;#8217;re not going to follow their directions exactly, since this will ultimately be a cronjob and needs to use ssh.  And I&amp;#8217;m slightly paranoid about my ssh keys.&lt;/p&gt;
&lt;p&gt;So, the first thing I do is create another keypair, for used only by my mirroring process, and only for pushing changes to github.  It has no passphrase.  This allows me to keep my top-secret keys off my shared, always-on server.  If these keys are compromised, all an attacker can use them for is to push changes to GitHub.  Which, being revision-control, is more annoying than dangerous.  (Hooray for &amp;#8220;git reset&amp;#8221;).&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;ssh-keygen -t dsa -f .ssh/id_dsa_github_mirroring&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Next, I edit my .ssh/config to add a &amp;#8220;fake host&amp;#8221; so that ssh connections invoked by git will use this new key.&lt;/p&gt;
&lt;p&gt;As with all previous bits, this is still on my always-on server, not my local laptop.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Host githubmirror&lt;br /&gt;
User git&lt;br /&gt;
Hostname github.com&lt;br /&gt;
IdentityFile /home/bob/.ssh/id_dsa_github_mirroring&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This will cause any invocation of &amp;#8220;ssh githubmirror&amp;#8221; into &amp;#8220;ssh git@github.com -i .ssh/id_dsa_github_mirroring&amp;#8221;.&lt;/p&gt;
&lt;p&gt;I then installed id_dsa_github_mirroring.pub into my GitHub account.&lt;/p&gt;
&lt;p&gt;Now, GitHub&amp;#8217;s instructions say to run this command to add the GitHub repository as a remote named &amp;#8220;origin&amp;#8221;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git remote add origin git@github.com:bobmcwhirter/jruby.git&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Instead, we teak it to use the &amp;#8220;fake host&amp;#8221; we added to .ssh/config&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git remote add origin git@githubmirror:bobmcwhirter/jruby.git&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We&amp;#8217;re almost done, I promise.&lt;/p&gt;
&lt;p&gt;Next, we need to do the first push from my server up to GitHub.  We first push to the &amp;#8216;master&amp;#8217; branch, since the repo really wants to have a master branch.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git push origin master&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, GitHub doesn&amp;#8217;t allow you to fork a repository you own, and since this mirror is owned by me, where can I do my own hacks and patches?  The &amp;#8216;master&amp;#8217; branch of course.  But I still want an unmolested, straight-from-subversion mirror.  So, I create a &amp;#8216;vendor&amp;#8217; branch in my workspace.  It&amp;#8217;s initialized to match &amp;#8216;master&amp;#8217; exactly.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git checkout -b vendor&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, I push that to GitHub, too.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git push origin vendor&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Awesome.  I now have two branches, identical at the moment, called &amp;#8220;vendor&amp;#8221; and &amp;#8220;master&amp;#8221;.&lt;/p&gt;
&lt;p&gt;Now, as far as I can tell, all the Subversion setup that we did only lives in the local repository on my always-on server.  Anyone who clones from the GitHub repository will not have that stuff.  They can of course do a &amp;#8216;git svn init&amp;#8217; themselves, to add it to their local repository.  But it doesn&amp;#8217;t flow through GitHub.&lt;/p&gt;
&lt;p&gt;But that&amp;#8217;s fine, since I&amp;#8217;ve been doing this on my always-on server anyhow.  My workspace is sitting in the &amp;#8216;vendor&amp;#8217; branch that&amp;#8217;s tracking the vendor branch from github.&lt;/p&gt;
&lt;p&gt;I can pull the latest changes from Subversion by typing&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git svn rebase&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The &amp;#8216;rebase&amp;#8217; command is neat, in that any changes that exist in the git repository are floated to be applied to whatever the latest HEAD is.  But since I&amp;#8217;m only concerned with a one-way SVN-to-Git mirror, there will never be any changes to float, and this will just tack on subsequent SVN commits as Git commits onto the &amp;#8216;vendor&amp;#8217; branch.  It&amp;#8217;ll leave the &amp;#8216;master&amp;#8217; branch un-touched.&lt;/p&gt;
&lt;p&gt;After rebasing, you gotta push the &amp;#8216;vendor&amp;#8217; branch up to GitHub.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;git push origin vendor&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, type that every 15 minutes, and your &amp;#8216;vendor&amp;#8217; branch will stay mostly up-to-date.&lt;/p&gt;
&lt;p&gt;Or use cron.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve cronned a script that fires every 15 minutes&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;#!/bin/sh&lt;/p&gt;
&lt;p&gt;cd /home/bob/github-svn-mirrors/$1&lt;br /&gt;
git svn rebase&lt;br /&gt;
git push origin vendor&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&amp;#8217;s run with the repository name as the first (and only) argument&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;*/15 * * * * /home/bob/github-svn-mirrors/bin/mirror jruby&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, over on my laptop, finally, I can clone the repository, work on topic branches, push to master and have my own controlled environment and fork, while knowing the &amp;#8216;vendor&amp;#8217; branch reflects the pure SVN state which I can also pull into my hackings as-desired.&lt;/p&gt;
&lt;p&gt;When I submit a patch, if it ultimately floats back to me through the vendor branch, git is supposedly smart enough to realize that the same changes have arrived in my &amp;#8216;master&amp;#8217; (assuming it&amp;#8217;s applied verbatim) and keep things nice and tidy.  Else, I can force a merge, trampling my half-assed patch with the official JRuby code.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>And now, something slightly different</title>
    <slug>and-now-something-slightly-different</slug>
    <published>2008-08-28T21:19:08Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Back in May, I was a manager.&lt;/p&gt;
&lt;p&gt;I feebly attempted to direct 8 great guys and gals to further the goals of JBoss.org.&amp;nbsp; After the Codehaus, you&amp;rsquo;d think I&amp;rsquo;d be able to help build an opensource community with fun and flair.&amp;nbsp; But I came to realize that it&amp;rsquo;s hard to build a community as an active effort.&amp;nbsp; Instead, I think community develops as a by-product of a useful and well-run project.&amp;nbsp; And that&amp;rsquo;s under the control of the project leaders and contributors, not necessarily some external third party.&lt;/p&gt;
&lt;p&gt;Back in May, I gave up being a manger.&lt;/p&gt;
&lt;p&gt;Now, the day after Labor Day, fittingly enough, I&amp;rsquo;ll be jumping back into the world of JBoss.&amp;nbsp; But &lt;strong&gt;not as a manager&lt;/strong&gt;. When I was burned out and felt like resigning, &lt;a title="Proctor's Drools blog" href="http://blog.athico.com/"&gt;Mark Proctor&lt;/a&gt; and &lt;a title="Sacha's Blog" href="http://sacha.labourey.com/"&gt;Sacha Labourey&lt;/a&gt; instead talked me into taking a sabbatical.&amp;nbsp; And I&amp;rsquo;m truly grateful to them.&amp;nbsp; Now, after unwinding for a few months, I asked to rejoin the team as an engineer.  Through Sacha&amp;rsquo;s patience and budget manipulation, I&amp;rsquo;m once again excited to go to work.&amp;nbsp; I think JBoss should definitely be held up as a company that takes care of its people.&amp;nbsp; They could&amp;rsquo;ve easily given me the boot, but instead they&amp;rsquo;ve been extremely kind and accommodating.&lt;/p&gt;
&lt;p&gt;So, what will I be doing?&lt;/p&gt;
&lt;p&gt;After talking to Java developers and Rubyists alike, my first goals are to look at Rails as just-another-way to write J2EE apps (or &amp;ldquo;JEE&amp;rdquo; I reckon, these days&amp;hellip;).&amp;nbsp; Yes, I know about (and plan to use) things like &lt;a title="Warbler" href="http://blog.nicksieger.com/articles/2007/09/04/warbler-a-little-birdie-to-introduce-your-rails-app-to-java"&gt;Warbler&lt;/a&gt; and &lt;a title="JRuby-Rack" href="http://blog.nicksieger.com/articles/2008/05/08/introducing-jruby-rack"&gt;JRuby-Rack&lt;/a&gt;.&amp;nbsp; Both are good things.&lt;/p&gt;
&lt;p&gt;But I also have full control of the deployment environment, to build a stack to make it happier than &amp;ldquo;build and deploy a WAR&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Through the miracle of &lt;a title="JBossAS" href="http://www.jboss.org/jbossas/"&gt;AS5&lt;/a&gt; built on &lt;a title="JBossMC" href="http://www.jboss.org/jbossmc/"&gt;JBossMicrocontainer&lt;/a&gt;, along with the awesome &lt;a title="JBossVFS" href="http://repository.jboss.org/maven2/org/jboss/jboss-vfs/"&gt;VFS&lt;/a&gt; bits, it should be possible to deploy a Rails app in-situ, right from your working directory.&amp;nbsp; There should be no reason to have to build a WAR while you&amp;rsquo;re hacking a rails app.&amp;nbsp; And deployment to a server should still involve capistrano (in my opinion).&amp;nbsp; Stick to the Rails way of doing things, but make it Java under the covers.&lt;/p&gt;
&lt;p&gt;Various blog posts have shown Rails apps on Glassfish in 12, 10, or 5 steps.&amp;nbsp; My goal is to get it down to 1 step. And you should magically be able to pick up and use all the wonderful JEE bits that maps to the Rails functionality the Railers of the world enjoy, without having to be aware of the JEE bits.&lt;/p&gt;
&lt;p&gt;Speaking with Mark Newton (the guy who runs JBoss.org now), it seems sensible to view Rails as simply yet-another-programming-model for writing Java apps.&amp;nbsp; The idea is to avoid leaky abstractions, so we&amp;rsquo;re not having to write some psuedo RubyJava application.&lt;/p&gt;
&lt;p&gt;Once we&amp;rsquo;ve got that base covered, then we can make fun and exciting Ruby bindings to all the powerful JBoss tools, such as Drools, ESB, Cache or MQ.&lt;/p&gt;
&lt;p&gt;I expect to have a bit of fun with this.&amp;nbsp; More fun than being a manager, certainly.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Welcome to my Odd Thesis</title>
    <slug>welcome-to-my-odd-thesis</slug>
    <published>2008-11-10T15:41:29Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;As noted in the introduction, I'm currently practicing "thesis-driven development."&amp;nbsp; This site is fodder for the practical experimentation of what I'm doing.&lt;/p&gt;
&lt;p&gt;In addition to a nifty logo, it's a custom Rails app, doing traditional Rails appish things (pages, posts, tags, comments, oh my!).&amp;nbsp; It uses some popular gems.&amp;nbsp; It's deployed using capistrano tasks in the way Rubyists are used to.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;But it all runs on JBoss.&lt;/p&gt;
&lt;p&gt;The base is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JBoss AS 5.0.0.CR2&lt;/li&gt;
&lt;li&gt;Postgres 8.something&lt;/li&gt;
&lt;li&gt;RHEL 4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The gems/extensions/plugins in use by the app currently include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aasm&lt;/li&gt;
&lt;li&gt;activerecord-jdbc-adapter-0.8.3&lt;/li&gt;
&lt;li&gt;activerecord-jdbcpostgresql-adapter-0.8.3&lt;/li&gt;
&lt;li&gt;activerecord-jdbcsqlite3-adapter-0.8.3&lt;/li&gt;
&lt;li&gt;atom-tools&lt;/li&gt;
&lt;li&gt;foreign_key_migrations&lt;/li&gt;
&lt;li&gt;haml&lt;/li&gt;
&lt;li&gt;jboss-rails-plugin&lt;/li&gt;
&lt;li&gt;jdbc-postgres-8.2&lt;/li&gt;
&lt;li&gt;jdbc-sqlite3-3.5.8&lt;/li&gt;
&lt;li&gt;rakismet&lt;/li&gt;
&lt;li&gt;redhillonrails_core&lt;/li&gt;
&lt;li&gt;restful_authentication&lt;/li&gt;
&lt;li&gt;transactional_migrations&lt;/li&gt;
&lt;li&gt;will_paginate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'd also like to welcome &lt;a title="First!" href="http://github.com/bobmcwhirter/jboss-rails/commit/7a9494950c4097d532b9abf7b4eb9f50328cc76e"&gt;my first non-Red Hat committer&lt;/a&gt; to these projects.&amp;nbsp; John Williams is one of the cool kids from &lt;a title="Contegix" href="http://contegix.com/"&gt;Contegix&lt;/a&gt; (where this server lives).&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Nobody should need cron</title>
    <slug>nobody-should-need-cron</slug>
    <published>2008-11-10T17:41:00Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Ultimately, we all want easy-to-replicate deployments of our apps.&amp;nbsp; Perhaps we're deploying on a cloud, and deploy often on new virtual hardware.&amp;nbsp; Perhaps we're just paranoid, and expect an earthquake to hit our datacenter.&amp;nbsp; Or maybe we expect to grow like the 4H club's monster pumpkin, and fully anticipate moving to new/different hardware soon.&lt;/p&gt;
&lt;p&gt;Either way, the fewer moving parts and manual steps you have to follow, the better.&lt;/p&gt;
&lt;p&gt;To me, cronjobs are the most-often forgotten step. They don't take up visible room on the filesystem.&amp;nbsp; They don't listen on a port.&amp;nbsp; They're easy to forget.&amp;nbsp; You can forget to install them.&amp;nbsp; You can forget to remove them.&amp;nbsp; In general, cronjobs annoy me.&lt;/p&gt;
&lt;p&gt;But there's still the need to do things at certain times, or on a regularly occurring schedule.&lt;/p&gt;
&lt;p&gt;With Rails apps, we can vendorize our dependencies.&amp;nbsp; With JRuby-on-Rails, we basically vendorize the whole language.&amp;nbsp; And with JBoss-Rails, we have a really nice and complete environment.&amp;nbsp; Java has tried real hard to allow you to deploy entirely within a container.&amp;nbsp; JBoss AS certainly provides everything we'd need.&lt;/p&gt;
&lt;p&gt;Specifically, it provides &lt;a title="Quartz" href="https://quartz.dev.java.net/"&gt;Quartz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since we're running in AS, we're happy to write deployers if needed, and we have a scheduler already setup in AS, I think we can bake scheduled tasks right into application deployment.&lt;/p&gt;
&lt;p&gt;Imagine &lt;strong&gt;$RAILS_ROOT/app/scheduled-tasks/blog_poller.rb&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It could have a fairly simple &lt;strong&gt;execute()&lt;/strong&gt; method on it.&lt;/p&gt;
&lt;p&gt;When your app is deployed, $RAILS_ROOT/config/scheduler.rb could be read to set up the quartz tasks.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Cron's syntax isn't exactly warm and fuzzy.&amp;nbsp; I think common case is a recurring interval for a task execution.&amp;nbsp; Something like...&lt;/p&gt;
&lt;pre&gt;Scheduler.deploy do |schedule|&lt;br /&gt;  schedule.every( 30.minutes ).run( BlogPoller )&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Simple enough. If parameters are needed, perhaps something akin to&lt;/p&gt;
&lt;pre&gt;Scheduler.deploy do |schedule|&lt;br /&gt;  schedule.every( 30.minutes ).run( BlogPoller ).with(&lt;br /&gt;    :number_of_retries=&amp;gt;3,&lt;br /&gt;    :notify_on_failure=&amp;gt;true&lt;br /&gt;  )&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Some syntax to support concrete time-of-day or day-of-week should be doable.&amp;nbsp; It might be worth investigating the &lt;a title="Chronic gem" href="http://chronic.rubyforge.org/"&gt;chronic&lt;/a&gt; gem.&lt;/p&gt;
&lt;p&gt;And since we're handling the deployment, we don't have to wiggle these in strangely as part of the web-app.&amp;nbsp; A deployer will look for &lt;strong&gt;config/scheduler.rb&lt;/strong&gt;, fire up a ruby interpreter to figure out what the schedule is, and then go deploy actual scheduled tasks into the Quartz service.&amp;nbsp; Scheduled tasks can be a first-class component like a Servlet, a message queue, or an EJB.&lt;/p&gt;
&lt;p&gt;Deploy your app, your scheduled tasks get deployed too.&amp;nbsp; Undeploy, and the scheduled tasks get cancelled and removed likewise.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Mailing Lists for JBoss-Rails and JBoss-Cloud</title>
    <slug>mailing-lists-for-jboss-rails-and-jboss-cloud</slug>
    <published>2008-11-10T17:46:02Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Thesis 1, &lt;a title="Thesis: JBoss-Rails" href="/theses/jboss-rails"&gt;Rails can run well on JBoss&lt;/a&gt; has a mailing list now.&amp;nbsp; To subscribe, send a message to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a title="Subscribe to jboss-rails" href="mailto:jboss-rails-subscribe@oddthesis.org  "&gt;jboss-rails-subscribe@oddthesis.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thesis 2, &lt;a title="Thesis: JBoss-Cloud" href="/theses/jboss-cloud"&gt;JBoss can run well on the Cloud&lt;/a&gt; also has a list.&amp;nbsp; To subscribe, send a message to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a title="Subscribe to jboss-cloud" href="mailto:jboss-cloud-subscribe@oddthesis.org"&gt;jboss-cloud-subscribe@oddthesis.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Each list supports all of the projects clustered around the thesis.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Capistrano deployment for JBoss-Rails</title>
    <slug>capistrano-deployment-for-jboss-rails</slug>
    <published>2008-11-13T15:51:57Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I've knocked together &lt;a title="Using the Capistrano recipes" href="/theses/jboss-rails/projects/jboss-rails-plugin/pages/using-the-capistrano-recipes"&gt;some documentation&lt;/a&gt; about using the Capistrano support in the JBoss Rails Plugin.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The goal is to make it easy for people used to deploying traditional Rails apps.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;After a few settings in your Capistrano deploy.rb file, you simply do what you normally do to deploy your app.&amp;nbsp; Assuming &lt;a title="JBoss Rails installation instructions" href="/theses/jboss-rails/projects/jboss-rails/pages/installation"&gt;you've got JBoss setup on your server&lt;/a&gt; to replace your pack of mongrels...&lt;/p&gt;
&lt;pre&gt;cap deploy&lt;/pre&gt;
&lt;p&gt;That's it.&amp;nbsp; You're done.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>List Archives</title>
    <slug>list-archives</slug>
    <published>2008-11-13T20:40:48Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Thanks to Jason Hunter and the friendly kids at &lt;a title="MarkMail" href="http://markmail.org/"&gt;MarkMail&lt;/a&gt; (a free service provied by &lt;a title="Mark Logic Corporation" href="http://www.marklogic.com/"&gt;Mark Logic&lt;/a&gt;), we've now got a swell mailing list archive.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a title="Odd Thesis archives at MarkMail" href="http://oddthesis.markmail.org/search/?q="&gt;http://oddthesis.markmail.org/search/?q=&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Cron in the Container</title>
    <slug>cron-in-the-container</slug>
    <published>2008-11-14T20:15:11Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Per the discussion in &lt;a title="Nobody should need cron" href="/posts/2008-11-nobody-should-need-cron"&gt;Nobody should need cron&lt;/a&gt;, I've added scheduled-task deployment capability to the JBoss Rails deployer.&amp;nbsp; Currently this functionality is only in the Git repository, but the next beta binary release will certainly include it.&lt;/p&gt;
&lt;p&gt;Instead of editing crontabs, you now work with &lt;strong&gt;RAILS_ROOT/config/jboss-scheduler.yml&lt;/strong&gt;, a simple YAML file.&lt;/p&gt;
&lt;p&gt;It defines all the scheduled tasks you want to be managed by the container.&amp;nbsp; For example, the jboss-scheduler.yml for Odd Thesis looks like this currently:&lt;/p&gt;
&lt;pre&gt;# Field Name&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Allowed Values&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Allowed Special Characters&lt;br /&gt;# ----------------------------------------------------------------&lt;br /&gt;# Seconds&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0-59&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; , - * /&lt;br /&gt;# Minutes&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0-59&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; , - * /&lt;br /&gt;# Hours&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0-23&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; , - * /&lt;br /&gt;# Day-of-month&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1-31&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; , - * ? / L W&lt;br /&gt;# Month&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1-12 or JAN-DEC&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; , - * /&lt;br /&gt;# Day-of-Week&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1-7 or SUN-SAT&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; , - * ? / L #&lt;br /&gt;# Year (Optional)&amp;nbsp;&amp;nbsp; empty, 1970-2099&amp;nbsp;&amp;nbsp;&amp;nbsp; , - * /&lt;br /&gt;&lt;br /&gt;github.commit.poller:&lt;br /&gt;&amp;nbsp; description: Poll projects for GitHub commits&lt;br /&gt;&amp;nbsp; cron: 0 */15 * * * ?&lt;br /&gt;&amp;nbsp; task: Github::CommitPoller&lt;/pre&gt;
&lt;p&gt;That names a task ("github.commit.poller"), sets the cron spec (every 15 minutes), and wires up an associated Ruby class to do the work (Github::CommitPoller).&lt;/p&gt;
&lt;p&gt;The container loads up the rails environment once for each task, and keeps it handy and fresh for each triggering of the task.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;It looks for tasks under &lt;strong&gt;RAILS_ROOT/app/scheduler/&lt;/strong&gt;.&amp;nbsp; In the above example, it's ultimately using &lt;strong&gt;RAILS_ROOT/app/scheduler/github/commit_poller.rb&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The task class itself has no particular requirements, other than being able to respond to &lt;strong&gt;run()&lt;/strong&gt; called with no arguments.&lt;/p&gt;
&lt;pre&gt;module Github&lt;br /&gt;  class CommitPoller&lt;br /&gt;    def run()&lt;br /&gt;      # do work, use ActiveRecord models, etc&lt;br /&gt;    end&lt;br /&gt;  end&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Since you don't want to fire up the whole container to execute your task, perhaps if you're testing, or need an extra execution of it, there's a magic Rake task you can execute:&lt;/p&gt;
&lt;pre&gt;rake jboss:scheduler:run:commit_poller&lt;/pre&gt;
&lt;p&gt;The JBoss-Rails Plugin automatically scans your scheduled-tasks and creates rake tasks to run them from the command-line.&amp;nbsp; It currently just uses the last portion of the name ("commit_poller"), so it's up to you to avoid any naming conflicts.&amp;nbsp; Having &lt;strong&gt;foo/poller.rb&lt;/strong&gt; and &lt;strong&gt;bar/poller.rb&lt;/strong&gt; will only result in sadness.&lt;/p&gt;
&lt;p&gt;I'm not necessarily super-happy with the name of the deployment descriptor (&lt;strong&gt;jboss-scheduler.yml&lt;/strong&gt;) nor of the task class location (&lt;strong&gt;app/scheduler/**.rb&lt;/strong&gt;).&amp;nbsp; I'm open to suggestions and discussions.&lt;/p&gt;
&lt;p&gt;Check it out from GitHub if you're brave, else a binary release should be forthcoming before too long.&lt;/p&gt;
&lt;p&gt;And yes, I advise you to use this wisely.&amp;nbsp; It's not an acceptable way to do very important sysadmin chores.&amp;nbsp; But if you have some recurring activity that's not either a user thread or runnable as a daemon, I think this can be quite useful.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a title="Commits" href="/commits"&gt;Odd Thesis Commits page&lt;/a&gt; for an example.&amp;nbsp; Every 15 minutes it polls GitHub for a YAML feed of recent commits, and then jams them into our database.&amp;nbsp; It's not a critical task, but one I don't want to screw with Vixie cron to handle.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Downtime, Updates</title>
    <slug>downtime-updates</slug>
    <published>2008-11-17T16:44:31Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Throughout the day (I've scheduled a daily maintenance window from 9am-5pm US Eastern every day...) this site occasionally will go offline while I update the code behind it.&lt;/p&gt;
&lt;p&gt;Sometimes I'm updating the Rails application that powers it.&amp;nbsp; Sometimes I'm updating the Rails deployer that lights it up.&lt;/p&gt;
&lt;h3&gt;Application Updates&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;In the case of just updating the application, the downtime should last all of 5 seconds while AS redeploys the app atomically after Capistrano has successfully updated the code and such on the server.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Capistrano checks the code out from the repository (GitHub) into a timestamped directory.&amp;nbsp; It creates a symlink named &lt;strong&gt;&lt;em&gt;current&lt;/em&gt;&lt;/strong&gt; pointing to the newly deployed directory of code.&amp;nbsp; It then emits an updated &lt;strong&gt;-rails.yml&lt;/strong&gt; deployment descriptor in the JBoss &lt;strong&gt;deploy/&lt;/strong&gt; directory.&amp;nbsp; Every few seconds, AS scans the deploy/ directory for updated things to deploy.&amp;nbsp; Seeing the new &lt;strong&gt;-rails.yml&lt;/strong&gt;, it first completely undeploys the old application from the old timestamped directory, including any scheduler.&amp;nbsp; Then it deploys the new application from the new timestamped directory.&lt;/p&gt;
&lt;p&gt;We intentionally do not use the &lt;em&gt;&lt;strong&gt;current&lt;/strong&gt;&lt;/em&gt; symlink when deploying to AS.&amp;nbsp; If we did, as soon as the symlink was created, the code would be visible to the "old" version of the running Rails application before it gets completely undeployed.&amp;nbsp; This could result in errors if you require model migrations, changes to &lt;strong&gt;config/**&lt;/strong&gt; files or have added gems.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;By using the timestamped directories, we can ensure that the old version of the application remains intact until fully undeployed.&amp;nbsp; Then it gets atomically replaced by the new version.&lt;/p&gt;
&lt;h3&gt;Deployer Updates&lt;/h3&gt;
&lt;p&gt;I have yet to automate updating of the deployer itself, but I will soon.&amp;nbsp; I update the deployer itself every day or so, after integrating new features or improvements (thanks Ales!).&lt;/p&gt;
&lt;p&gt;To update the deployer, I bring AS down completely (&lt;em&gt;cap deploy:stop&lt;/em&gt;), pull the new code from GitHub, run maven, and restart AS (&lt;em&gt;cap deploy:start&lt;/em&gt;).&amp;nbsp; On this server, I've just symlinked the maven build output over to my AS &lt;strong&gt;deployers/&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;All told, updating both the deployer and the app (including ssh'ing over a very-high-latency satellite connection) takes right about 10 minutes.&lt;/p&gt;
&lt;h3&gt;Bottom Line&lt;/h3&gt;
&lt;p&gt;The update this morning brought about changes to both the deployer and the app.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The deployer itself now uses &lt;a title="JBoss Microcontainer" href="http://www.jboss.org/jbossmc/"&gt;Microcontainer&lt;/a&gt; slightly better, thanks to code reviews from &lt;a title="Ales's Blog" href="http://blogs.jboss.com/blog/alesj/"&gt;Ales Justin&lt;/a&gt; (Mr. Microcontainer).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;And the Atom feed should now include better URLs for links in the entries.&amp;nbsp; Thanks to &lt;a title="Adam's Blog" href="http://www.warski.org/blog/"&gt;Adam Warski&lt;/a&gt; for noticing and reporting that.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Overview Presentation</title>
    <slug>overview-presentation</slug>
    <published>2008-11-17T21:24:31Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Tomorrow I'm scheduled to present at the fortnightly internal JBoss R&amp;amp;D call.&amp;nbsp; It's just a routine hugfest where the engineers who care to dial in have a group meeting.&amp;nbsp; Normally someone presents their recent work.&lt;br /&gt;&lt;br /&gt;Since this is an open-source company, and I ain't got no secrets, I figured this would be the best way to &lt;a title="Download presentation (PDF)" href="/system/assets/oddthesis-jboss-r-and-d.pdf"&gt;distribute my slides (PDF)&lt;/a&gt;, instead of choking the mail-server.&lt;/p&gt;
&lt;p&gt;&lt;a title="Download presentation (PDF)" href="/system/assets/oddthesis-jboss-r-and-d.pdf"&gt;&lt;img src="/system/assets/oddthesis-preso-thumb.png" alt="R&amp;amp;D Presentation" width="300" height="225" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They attempt to explain the thought process behind these projects and their future.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Diagram of Deployers</title>
    <slug>diagram-of-deployers</slug>
    <published>2008-11-25T14:53:41Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Thanks to help from Ales, I've been able to really clean up and simplify the JBoss Rails deployers for Microcontainer.&amp;nbsp; When you use JBoss Microcontainer, you can easily break down your tasks into small, bite-sized chunks.&amp;nbsp; Because of that, we now have 7 deployers, but each only has a handful of lines.&lt;/p&gt;
&lt;p&gt;First, the picture, then we'll walk through it.&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/assets/ruby-deployers.png" alt="Deployers" width="408" height="640" /&gt;&lt;/p&gt;
&lt;p&gt;Of the many deployment stages MC walks through, the JBoss Rails deployment of web apps and schedulers requires only 3: &lt;strong&gt;Parse&lt;/strong&gt;, &lt;strong&gt;Describe&lt;/strong&gt; and &lt;strong&gt;Real&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;Parsing&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;RailsRootReferenceParsingDeployer&lt;/strong&gt; is responsible for handling any file matching &lt;strong&gt;*-rails.yml&lt;/strong&gt; in your appserver's &lt;strong&gt;deploy/&lt;/strong&gt; directory.&amp;nbsp; This is the small YAML file that points to your &lt;strong&gt;RAILS_ROOT&lt;/strong&gt; on disk, injects the &lt;strong&gt;RAILS_ENV&lt;/strong&gt; you wish to deploy in, and sets up the web context root.&amp;nbsp; This deployer handles the reference file, and emits a &lt;strong&gt;RailsMetaData&lt;/strong&gt; object.&lt;/p&gt;
&lt;p&gt;Once the &lt;strong&gt;RailsMetaData&lt;/strong&gt; object is available, the &lt;strong&gt;RailsVersionDeployer&lt;/strong&gt; is fired.&amp;nbsp; Since we require Rails itself to be in your app's &lt;strong&gt;vendor/&lt;/strong&gt; directory, we can dig around inside there to find Rails's &lt;strong&gt;version.rb,&lt;/strong&gt; and figure out if we're running a version of at least 2.2.&amp;nbsp; If we're running 2.1 (non-threadsafe), we just have to change our deployment strategy for some bits.&amp;nbsp; When this deployer fires and reads the &lt;strong&gt;version.rb&lt;/strong&gt;, it emits a &lt;strong&gt;RailsVersionMetaData&lt;/strong&gt; object, which simply embodies the version number of Rails used by this app.&lt;/p&gt;
&lt;p&gt;Meanwhile, unrelated to anything Rails-specific, the &lt;strong&gt;YamlScheduleParsingDeployer&lt;/strong&gt; is on the lookout for any meta-data file named &lt;strong&gt;jboss-scheduler.yml&lt;/strong&gt;.&amp;nbsp; The scheduler file handles cron tasks inside your app's code. Nothing about the scheduler is inherently Rails-centric, but it is Ruby-centric.&amp;nbsp; I anticipate being able to use the same deployer to handle schedulers in Merb, or Camping, or any other ruby framework.&lt;/p&gt;
&lt;p&gt;The output from parsing a &lt;strong&gt;jboss-scheduler.yml&lt;/strong&gt; is a &lt;strong&gt;ScheduleMetaData&lt;/strong&gt; object.&lt;/p&gt;
&lt;h3&gt;Describing&lt;/h3&gt;
&lt;p&gt;While the above-mentioned scheduler stuff is framework-agnostic, it still needs some help from whichever framework it's deployed in.&amp;nbsp; The &lt;strong&gt;ScheduleMetaData&lt;/strong&gt; contains information such as the name of the Ruby class to instantiate to perform the scheduled job.&amp;nbsp; It needs some additional information, such as &lt;em&gt;where to look for these classes&lt;/em&gt;.&amp;nbsp; It's also helpful if the scheduler knows the thread-safeness of the framework it's associated it.&lt;/p&gt;
&lt;p&gt;So the &lt;strong&gt;RailsScheduleDescribeDeployer&lt;/strong&gt; is hanging around, looking at metadata flow by.&amp;nbsp; If there's a &lt;strong&gt;RailsMetaData&lt;/strong&gt;, and a &lt;strong&gt;RailsVersionMetaData&lt;/strong&gt;, and a &lt;strong&gt;ScheduleMetaData&lt;/strong&gt; object available in this deloyment, then it'll step in.&lt;/p&gt;
&lt;p&gt;By convention, JBoss Rails assumes that scheduled task classes are in the files under &lt;strong&gt;$RAILS_ROOT/app/scheduler/&lt;/strong&gt;.&amp;nbsp; We also know if Rails is threadsafe or not based upon the version being used.&lt;/p&gt;
&lt;p&gt;So the &lt;strong&gt;RailsScheduleDescribeDeployer&lt;/strong&gt; looks at the Rails-specific metadata flowing in, and adjusts the existing Rails-agnostic &lt;strong&gt;ScheduleMetaData&lt;/strong&gt; by adding &lt;strong&gt;$RAILS_ROOT/app/scheduler/&lt;/strong&gt; to the Ruby load path and setting the thread-safety flag.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This may be better suited as a Post-Parsing stage deployer.&amp;nbsp; I'm not sure yet.&lt;/p&gt;
&lt;h3&gt;Real Deployment&lt;/h3&gt;
&lt;p&gt;The real stage is where the rubber meets the road.&amp;nbsp; All of this MetaData that's floating around gets converted into instances of &lt;strong&gt;BeanMetaData&lt;/strong&gt;.&amp;nbsp; Microcontainer's own &lt;strong&gt;BeanMetaDataDeployer&lt;/strong&gt; consumes those, and will instantiate and &lt;strong&gt;start()&lt;/strong&gt; our actual POJOs.&amp;nbsp; The &lt;strong&gt;BeanMetaData&lt;/strong&gt; simply describes your POJO's Java class name, constructor arguments, properties to set or inject with other POJOs, annotations to apply, and runtime methods (such as &lt;strong&gt;start()&lt;/strong&gt; and &lt;strong&gt;stop()&lt;/strong&gt;) that should be called.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;RailsRuntimeFactoryDeployer&lt;/strong&gt; sees the &lt;strong&gt;RailsMetaData&lt;/strong&gt;, and creates a &lt;strong&gt;BeanMetaData&lt;/strong&gt; describing a factory to produce initialized JRuby runtimes for your Rails app.&amp;nbsp; It assigns a predictable name so that other POJOs can find it if they need it.&amp;nbsp; Other frameworks will be able to deploy factories that are capable of initializing JRuby runtimes for their environments.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;RailsWebDeployer&lt;/strong&gt; sees the &lt;strong&gt;RailsMetaData&lt;/strong&gt;, and creates a &lt;strong&gt;BeanMetaData&lt;/strong&gt; describing an object that can setup and remove a Tomcat web context for your Rails app.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;ScheduleDeployer&lt;/strong&gt; creates a &lt;strong&gt;BeanMetaData&lt;/strong&gt; describing object that can add and remove scheduled tasks from the Quartz scheduler embedded in AS5.&amp;nbsp; This deployer creates &lt;strong&gt;BeanMetaDatas&lt;/strong&gt; that inject the runtime factory described by the &lt;strong&gt;RailsRuntimeFactoryDeployer&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;All of these &lt;strong&gt;BeanMetaData&lt;/strong&gt; instances then float on by, are grabbed by MC's own &lt;strong&gt;BeanMetaDataDeployer&lt;/strong&gt;.&amp;nbsp; My classes are instantiated, properties are set, &lt;strong&gt;start()&lt;/strong&gt; is called, and we find ourselves deployed. My deployers also add object-instance JMX annotations to the BeanMetaData objects.&amp;nbsp; This causes my POJOs to get registered in the MBeanServer and to appear in the JMX console.&amp;nbsp; Pretty slick.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Overall, I really like Microcontainer's deployment framework.&amp;nbsp; I don't always completely understand it, and I routinely overlook classes that will do 80% of the work for me.&amp;nbsp;&amp;nbsp; It's been a long road, but breaking 1 deployer into 7 has simplified everything, honestly.&amp;nbsp; The chunks are smaller, and more importantly, they are reusable.&amp;nbsp; I did not want to have to write scheduler logic for each Ruby framework I attack.&amp;nbsp; MC's multi-stage metadata-driven deployment process really helps.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Structure prevents chaos</title>
    <slug>structure-prevents-chaos</slug>
    <published>2008-12-02T17:21:07Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;h3&gt;Basics&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;We can look at a directory structure, and as intelligent humans, recognize patterns.&lt;/p&gt;
&lt;p&gt;Look at a tree such as&lt;/p&gt;
&lt;pre&gt;WEB-INF/&lt;br /&gt;    web.xml&lt;br /&gt;    lib/&lt;br /&gt;        drools.jar&lt;br /&gt;    classes/&lt;br /&gt;        org/&lt;br /&gt;            jboss/&lt;/pre&gt;
&lt;p&gt;&amp;nbsp; Or maybe&lt;/p&gt;
&lt;pre&gt;META-INF/&lt;br /&gt;    persistence.xml&lt;br /&gt;org/&lt;br /&gt;    jboss/&lt;/pre&gt;
&lt;p&gt;The first looks like a WAR, while the second looks like a plain JAR.&lt;/p&gt;
&lt;p&gt;Once we've identified the type or structure, we know the &lt;strong&gt;meaning&lt;/strong&gt; of the parts of the tree.&amp;nbsp; In a WAR, we know that &lt;strong&gt;WEB-INF/&lt;/strong&gt; will contain metadata such as &lt;strong&gt;web.xml&lt;/strong&gt;.&amp;nbsp; In a JAR, we know that &lt;strong&gt;META-INF/&lt;/strong&gt; may contain metadata such as &lt;strong&gt;persistence.xml&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We can consider these to be metadata paths that Microcontainer should scan for metadata deployments.&lt;/p&gt;
&lt;p&gt;Additionally, for a WAR, this tree contains some implicit items for the classpath.&amp;nbsp; Any JAR nestled under &lt;strong&gt;WEB-INF/lib/&lt;/strong&gt;, along with classes under &lt;strong&gt;WEB-INF/classes/&lt;/strong&gt; should be considered as entries in the classpath.&amp;nbsp; For a JAR, the root of the tree should be a classpath entry, loading the whole JAR.&lt;/p&gt;
&lt;p&gt;To embody these concepts, Microcontainer has &lt;strong&gt;StructureDeployers&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;When a file resource such as a JAR, a WAR, or a Rails application directory is deployed through Microcontainer, MC checks with the known &lt;strong&gt;StructureDeployer&lt;/strong&gt; implementations to try to identify it.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;There's a &lt;strong&gt;JARStructure&lt;/strong&gt; deployer that looks for &lt;strong&gt;META-INF/&lt;/strong&gt; to identify JARs and a &lt;strong&gt;WARStructure&lt;/strong&gt; that looks for an extension of &lt;strong&gt;.war&lt;/strong&gt; or the existence of &lt;strong&gt;WEB-INF/&lt;/strong&gt; to identify WARs.&amp;nbsp; If the &lt;strong&gt;StructureDeployer&lt;/strong&gt; recognizes the candidate, it sets up the metadata paths and classpaths implied by the given structure.&amp;nbsp; Microcontainer then will load up the classes and continue to deploy the items found within the metadata paths.&lt;/p&gt;
&lt;h3&gt;Rails Structure&lt;/h3&gt;
&lt;p&gt;Rails developers are familiar with trees that look like&lt;/p&gt;
&lt;pre&gt;config/&lt;br /&gt;    database.yml&lt;br /&gt;    environment.rb&lt;br /&gt;app/&lt;br /&gt;    models/&lt;br /&gt;    controllers/&lt;br /&gt;    views/&lt;br /&gt;lib/&lt;/pre&gt;
&lt;p&gt;It's apparent to me that &lt;strong&gt;config/&lt;/strong&gt; is where configuration information is kept.&amp;nbsp; It's somewhat like a JAR's &lt;strong&gt;META-INF/&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;By convention, &lt;strong&gt;lib/java/**.jar&lt;/strong&gt; is added to a JRuby-on-Rails classpath, to be made available to the application.&lt;/p&gt;
&lt;p&gt;I've created a &lt;strong&gt;RailsStructure&lt;/strong&gt; that looks for &lt;strong&gt;config/environment.rb&lt;/strong&gt;, and if found, will consider the candidate to be a Rails application.&amp;nbsp; From there it adds &lt;strong&gt;config/&lt;/strong&gt; to the metadata path.&lt;/p&gt;
&lt;p&gt;This is ultimately what allows &lt;strong&gt;config/jboss-scheduler.yml&lt;/strong&gt; and other deployable files to be located, identified, and deployed.&lt;/p&gt;
&lt;p&gt;It also adds &lt;strong&gt;lib/java/classes/&lt;/strong&gt; and all jars recursively under &lt;strong&gt;lib/java/&lt;/strong&gt; to the application's classpath, bridging the Java to Ruby gap nicely.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss AS5: The Platform of the Future</title>
    <slug>jboss-as5-the-platform-of-the-future</slug>
    <published>2008-12-05T13:15:49Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Oh happy day!&lt;/p&gt;
&lt;p&gt;&lt;a title="Dimitris's announcement" href="http://dandreadis.blogspot.com/2008/12/jbossas-500ga-released.html"&gt;Dimitris announced&lt;/a&gt; that JBoss AS 5.0-GA (the community edition) has been released.&amp;nbsp; For a while (years?) people have been asking where AS5 is.&amp;nbsp; Well, it's...&lt;/p&gt;
&lt;p style="text-align: center; font-size: 120%;"&gt;&lt;a title="JBoss AS 5 GA, no joke." href="http://www.jboss.org/jbossas/downloads/"&gt;RIGHT HERE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go ahead and grab it.&amp;nbsp; It's awesome.&amp;nbsp; Plus it's the foundation for your cool new Ruby on Rails apps (once you install the &lt;a title="JBoss-Rails Deployer" href="/theses/jboss-rails/projects/jboss-rails"&gt;JBoss-Rails Deployer&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The supported &lt;a title="JBoss EAP" href="http://www.jboss.com/products/platforms/application"&gt;EAP&lt;/a&gt; flavor of AS5 will be released in the next several months.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss and mod_cluster</title>
    <slug>jboss-and-mod_cluster</slug>
    <published>2008-12-23T18:02:50Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;h3&gt;Background on Clustering HTTP&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;JBoss clusters, as we all know.&amp;nbsp; You can fire up a farm of AS5 worker nodes, and they'll find each other (sometimes with the help of a &lt;a title="JGroups Gossip" href="http://www.jgroups.org/user/node71.html#Gossip"&gt;Gossip&lt;/a&gt; router).&amp;nbsp; They'll share HTTP sessions and such, through the magic of &lt;a title="JBoss Cache" href="http://www.jboss.org/jbosscache/"&gt;JBoss Cache&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But then you end up with a farm of distinct HTTP listeners out there, each with their own IP address.&amp;nbsp; So we jam a proxy out front, normally, which dispatches requests to any one of the workers on the farm.&lt;/p&gt;
&lt;p&gt;But then your proxy has to know all about the workers.&amp;nbsp; With many generic solutions, that means maintaing a list of worker nodes.&amp;nbsp; Normally by a human or a ball of bash scripts.&lt;/p&gt;
&lt;p&gt;Let me introduce &lt;a title="JBoss mod_cluster" href="http://www.jboss.org/mod_cluster/"&gt;JBoss mod_cluster&lt;/a&gt;, though, which goes a long way to making clustering a simple, happy, joyous event.&lt;/p&gt;
&lt;h3&gt;JBoss mod_cluster&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;While &lt;a title="JBoss mod_cluster" href="http://www.jboss.org/mod_cluster/"&gt;JBoss mod_cluster&lt;/a&gt; has a few different modes of operation, from standalone to HA, using HTTP or AJP to chat with the back-ends, we'll be looking at the top-of-the-line implementation, since I get to play with all the big toys.&lt;/p&gt;
&lt;p&gt;First, as the name implies, mod_cluster is a module for &lt;a title="Apache httpd" href="http://httpd.apache.org/"&gt;Apache httpd&lt;/a&gt;.&amp;nbsp; In fact, it's a set of modules that work with mod_proxy and mod_proxy_ajp.&lt;/p&gt;
&lt;p&gt;The Apache httpd configuration can be super-simple:&lt;/p&gt;
&lt;pre&gt;&amp;lt;VirtualHost *:80&amp;gt;&lt;br /&gt;  ServerName test.local.oddthesis.org&lt;br /&gt;&lt;br /&gt;  ManagerBalancerName mycluster&lt;br /&gt;  ServerAdvertise off&lt;br /&gt;&lt;br /&gt;  &amp;lt;Proxy *&amp;gt;&lt;br /&gt;  &amp;lt;/Proxy&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;/VirtualHost&amp;gt;&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;I turn off proxy server advertising because multicast isn't available to me (see below).&lt;/p&gt;
&lt;p&gt;In the HA mode, mod_cluster takes advantage of the fact that your cluster knows itself.&amp;nbsp; A worker is responsible for providing the entire cluster view to the front-end httpd processes.&amp;nbsp; It also informs the cluster itself of the view of the proxy front-ends.&lt;/p&gt;
&lt;p&gt;Then mod_cluster pipes requests through mod_proxy_ajp dynamically to find their way to a worker.&amp;nbsp; You don't have to maintain worker lists yourself or through bash voodoo any more.&amp;nbsp; The front-end chats AJP with the workers, so things flow efficiently.&amp;nbsp; Add nodes, remove nodes, have nodes crash (never!), and the proxy responds.&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/assets/mod_cluster.png" alt="mod_cluster overview" width="292" height="431" /&gt;&lt;/p&gt;
&lt;p&gt;The source distribution seems to include httpd and a lot of its own dependencies.&amp;nbsp; I was able to compile just the modules which work fine in a stock Fedora-10 spin of apache httpd.&amp;nbsp; I'll be publishing an RPM shortly, also.&lt;/p&gt;
&lt;h3&gt;Multicast&lt;/h3&gt;
&lt;p&gt;Some of the magic involves multicast, which I've decided is a tool of the devil.&amp;nbsp; By default, it seems disabled in VMWare, and is permanently disabled on EC2.&amp;nbsp; So it might as well not exist.&lt;/p&gt;
&lt;p&gt;With mod_cluster, the default is for the proxies to advertise over multicast so that workers can find them initially.&amp;nbsp; This is awesome if your environment supports it. Mine doesn't.&lt;/p&gt;
&lt;p&gt;But the AS5 portion of mod_cluster realizes that sometimes you can't use multicast.&amp;nbsp; So you can provide a list of proxies in the mod-cluster service within AS5.&amp;nbsp; I've decided to go with property substitution and modifying my JBoss boot script to check for &lt;strong&gt;$JBOSS_PROXY_LIST&lt;/strong&gt; in &lt;strong&gt;/etc/jboss-as5.conf&lt;/strong&gt;.&amp;nbsp; This gets passed on in and consumed at AS5's boot time.&amp;nbsp; Basically:&lt;/p&gt;
&lt;pre&gt;run.sh -Djboss.modcluster.proxyList=$JBOSS_PROXY_LIST&lt;/pre&gt;
&lt;pre&gt;  &amp;lt;!-- Configure this node's communication with the load balancer --&amp;gt;&lt;br /&gt;  &amp;lt;bean name="HAModClusterConfig" class="org.jboss.modcluster.config.ha.HAModClusterConfig" mode="On Demand"&amp;gt;&lt;br /&gt;&lt;br /&gt;    &lt;strong&gt;&amp;lt;!-- Comma separated list of address:port listing the httpd servers&lt;br /&gt;         where mod_cluster is running. --&amp;gt;&lt;br /&gt;    &amp;lt;property name="proxyList"&amp;gt;${jboss.modcluster.proxyList}&amp;lt;/property&amp;gt;&lt;/strong&gt;&lt;/pre&gt;
&lt;p&gt;In an EC2 environment, my puppet recipe will grab the proxy list from the boot metadata and reset my /etc/jboss-as5.conf appropriately, perhaps.&lt;/p&gt;
&lt;p&gt;You may argue that we've just replaced the maintenance of a worker list with the maintenance of a proxy list.&amp;nbsp; Which is somewhat true.&amp;nbsp; But the proxy list tends to be smaller, more static, and less crashy.&amp;nbsp; Workers tend to grow, shrink and crash more often.&amp;nbsp; And &lt;strong&gt;if you do have multicast available&lt;/strong&gt; to you, mod_cluster will sprinkle magic end-to-end, and no list maintenance is required at all.&lt;/p&gt;
&lt;p&gt;Overall, mod_cluster is definitely another useful tool for running Java apps in scalable environments.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>IRC Presence</title>
    <slug>irc-presence</slug>
    <published>2008-12-29T16:13:26Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;For anyone wanting to "chat" in real-time, there are two channels on &lt;a title="Freenode Website" href="http://freenode.net/"&gt;Freenode IRC&lt;/a&gt; I try to keep active when I'm online:&lt;/p&gt;
&lt;p&gt;Point your IRC client to &lt;strong&gt;irc.freenode.net&lt;/strong&gt; and join &lt;a title="JBoss-Rails IRC channel" href="irc://irc.freenode.net/jboss-rails"&gt;&lt;strong&gt;#jboss-rails&lt;/strong&gt;&lt;/a&gt; or &lt;a title="JBoss-Cloud IRC channel" href="irc://irc.freenode.net/jboss-cloud"&gt;&lt;strong&gt;#jboss-cloud&lt;/strong&gt;&lt;/a&gt;.&amp;nbsp; I'm "bobmcw" on Freenode.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;#jruby&lt;/strong&gt; and &lt;strong&gt;#jboss&lt;/strong&gt; channels are also useful.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Kick the tires on JBoss-Rails</title>
    <slug>kick-the-tires-on-jboss-rails</slug>
    <published>2008-11-12T21:44:23Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Today I managed to get things to the point where they're hopefully easy to give a whirl.&lt;/p&gt;
&lt;p&gt;First, there's the &lt;a title="Odd Thesis repository" href="http://repo.oddthesis.org/deployers"&gt;binary of the deployer&lt;/a&gt;, along with &lt;a title="JBoss Rails Deployer installation instructions" href="/theses/jboss-rails/projects/jboss-rails/pages/installation"&gt;installation instructions&lt;/a&gt;.&amp;nbsp; We hope to soon have an uber tarball that includes both AS5 and the deployer.&amp;nbsp; But for now, you'll have to install AS, then drop in the deployer.&lt;/p&gt;
&lt;p&gt;Then there's the instructions for &lt;a title="JBoss Rails Plugin installation instructions" href="/theses/jboss-rails/projects/jboss-rails-plugin/pages/installation"&gt;installing&lt;/a&gt; and &lt;a title="Using the JBoss Rails Plugin rake tasks" href="/theses/jboss-rails/projects/jboss-rails-plugin/pages/using-the-rake-tasks"&gt;using&lt;/a&gt; the JBoss Rails Plugin to deploy your app and control the appserver.&lt;/p&gt;
&lt;p&gt;Expect frequent releases over the coming weeks as we continue to make fast progress on both capability and usability.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Thincrust and JBoss-Cloud</title>
    <slug>thincrust-and-jboss-cloud</slug>
    <published>2008-12-12T20:51:23Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;It's Friday, and I've posted no diagrams this week, so I figured it was time.&lt;/p&gt;
&lt;p&gt;I've previously mentioned my use of &lt;a title="Thincrust" href="http://thincrust.net/"&gt;Thincrust&lt;/a&gt; tooling to build appliance images.&amp;nbsp; Now that AS5 GA is available, I needed to update my images.&amp;nbsp; Also, Fedora 10 came out since I last spun them.&lt;/p&gt;
&lt;p&gt;The 10,000' view of appliance-creator looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/assets/appliance-diagram.png" alt="Overview" /&gt;&lt;/p&gt;
&lt;p&gt;It's a bunch of RPMs, stitched together through a Kickstart file.&amp;nbsp; The AOS base RPMs are just a minimal bundle of RPMs needed to have a roughly useable system.&lt;/p&gt;
&lt;p&gt;Then we slurp in the appliance RPM.&amp;nbsp; This RPM is not JBoss AS5, but rather the definition of a server that will be running AS5.&lt;/p&gt;
&lt;p&gt;Let's explode that into another diagram:&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/assets/appliance-diagram-innards.png" alt="Appliance RPM" /&gt;&lt;/p&gt;
&lt;p&gt;The appliance RPM has an explicit dependency on the actual JBoss AS5 RPM, which is created from the binary distribution and an appropriate &lt;strong&gt;init.d&lt;/strong&gt; script.&amp;nbsp; The dependency on Open JDK is also specified for the appliance.&lt;/p&gt;
&lt;p&gt;The appliance RPM additionally includes the ACE magic, particularly some Puppet recipes.&lt;/p&gt;
&lt;p&gt;Finally, using the Thincrust toolkit, we take the Kickstart that glues this all together and create a disk image we can boot in KVM.&amp;nbsp; Or we can convert it to EC2 or VMWare formats.&lt;/p&gt;
&lt;p&gt;I've got a &lt;a title="JBoss-Cloud git repository" href="http://www.github.com/bobmcwhirter/jboss-cloud"&gt;single repository&lt;/a&gt; at this point for building the AS5 RPM, all the appliance pieces, and spinning images over on GitHub.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;If you want to try making some images, follow the&lt;a title="Thincrust installation" href="http://thincrust.net/tooling.html"&gt; first 3 steps of the Thincrust installation&lt;/a&gt;, clone the repo, and run one of these commands:&lt;/p&gt;
&lt;pre&gt;rake appliance:jboss-as5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; # Build jboss-as5 appliance image&lt;br /&gt;rake appliance:jboss-as5:vmx&amp;nbsp; # Build jboss-as5 appliance image for VMWare&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;You need Ruby Rake installed, of course.&lt;/p&gt;
&lt;p&gt;To see rake targets for notable steps along the way from a virgin workspace to VMWare images, try &lt;strong&gt;rake -T&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;rake appliance:common-source      # Create the source tarball for appliances.&lt;br /&gt;rake appliance:jboss-as5          # Build jboss-as5 appliance image&lt;br /&gt;rake appliance:jboss-as5:vmx      # Build jboss-as5 appliance image for VMWare&lt;br /&gt;rake appliance:jboss-jgroups      # Build jboss-jgroups appliance image&lt;br /&gt;rake appliance:jboss-jgroups:vmx  # Build jboss-jgroups appliance image for VMWare&lt;br /&gt;rake clean                        # Remove any temporary products.&lt;br /&gt;rake clobber                      # Remove any generated file.&lt;br /&gt;rake info                         # Get information on the build&lt;br /&gt;rake rpm:appliance:jboss-as5      # Build jboss-as5 appliance RPM.&lt;br /&gt;rake rpm:appliance:jboss-jgroups  # Build jboss-jgroups appliance RPM.&lt;br /&gt;rake rpm:extras                   # Build all RPMs from extras.&lt;br /&gt;rake rpm:extras:jboss-as5         # Build jboss-as5 RPM.&lt;br /&gt;rake rpm:extras:jboss-jgroups     # Build jboss-jgroups RPM.&lt;br /&gt;rake rpm:extras:jboss-rails       # Build jboss-rails RPM.&lt;br /&gt;rake rpm:repodata                 # Create the repository metadata&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;You may even notice the work-in-progress JGroups appliance for running a Gossip router.&amp;nbsp; That one will probably always cohabitate with another appliance, ultimately.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss-Rails 1.0 Beta 2 Released</title>
    <slug>jboss-rails-1-0-beta-2-released</slug>
    <published>2008-12-03T17:53:21Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;The second beta of &lt;a title="JBoss-Rails project" href="/theses/jboss-rails/projects/jboss-rails"&gt;JBoss-Rails&lt;/a&gt; is now available.&amp;nbsp; This release brings about a handful of visible changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="*-rails.yml" href="/theses/jboss-rails/projects/jboss-rails/pages/x-rails-yml"&gt;*-rails.yml&lt;/a&gt; now supports mapping to a virtual host&lt;/li&gt;
&lt;li&gt;&lt;a title="jboss-scheduler.yml" href="/theses/jboss-rails/projects/jboss-rails/pages/jboss-scheduler-yml"&gt;jboss-scheduler.yml&lt;/a&gt; for recurring scheduled tasks&lt;/li&gt;
&lt;li&gt;&lt;a title="jboss-rails-env.yml" href="/theses/jboss-rails/projects/jboss-rails/pages/jboss-rails-env-yml"&gt;jboss-rails-env.yml&lt;/a&gt; for setting RAILS_ENV if you don't use *-rails.yml&lt;/li&gt;
&lt;li&gt;&lt;a title="jboss-web.yml" href="/theses/jboss-rails/projects/jboss-rails/pages/jboss-web-yml"&gt;jboss-web.yml&lt;/a&gt; for setting web config if you don't use *-rails.yml&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lib/java/**.jar&lt;/strong&gt; loaded into your classpath&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lib/java/classes/&lt;/strong&gt; loaded into your classpath&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The extra &lt;strong&gt;jboss-rails-env.yml&lt;/strong&gt; and &lt;strong&gt;jboss-web.yml&lt;/strong&gt; files allow you to simply symlink your application into your &lt;strong&gt;deploy/&lt;/strong&gt; directory, if you so choose.&amp;nbsp; Ultimately, it'll support deployment of Rails applications bundled into a JAR archive, without using &lt;strong&gt;*-rails.yml&lt;/strong&gt;.&amp;nbsp; But we're &lt;strong&gt;not yet&lt;/strong&gt; able to deploy archives.&lt;/p&gt;
&lt;p&gt;Plus a whole bunch of clean-ups, refactorings, and better following of Microcontainer's best practices.&lt;/p&gt;
&lt;h3&gt;Obtain the release&lt;/h3&gt;
&lt;p&gt;If you just want to drop the JBoss-Rails deployer into your existing AS 5.0.x, you can grab the simple deployer distribution:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="jboss-rails-deployer-1.0.0-beta-2.zip" href="http://repo.oddthesis.org/deployers/jboss-rails-deployer-1.0.0-beta-2.zip"&gt;jboss-rails-deployer-1.0.0-beta-2.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don't have an AS 5.0.x already handy, this a bundle of AS 5.0.x from the latest nightly build, plus the JBoss-Rails deployer installed in the 'all' and 'default' configurations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="jboss-5.0.x-rails-1.0.0-beta-2.zip" href="http://repo.oddthesis.org/bundles/jboss-5.0.x-rails-1.0.0-beta-2.zip"&gt;jboss-5.0.x-rails-1.0.0-beta-2.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just unzip it, set &lt;strong&gt;$JBOSS_HOME&lt;/strong&gt;, and you should be good to go.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>VM2: Like EC2, but local</title>
    <slug>vm2-like-ec2-but-local</slug>
    <published>2008-12-31T22:19:56Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;h3&gt;EC2 is awesome, but...&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;While I've been working towards getting stuff to work on Amazon EC2, I'm living a bandwidth-challenged lifestyle where DSL doesn't reach.&amp;nbsp; Shuffling images back and forth to Amazon is not awesome.&lt;/p&gt;
&lt;p&gt;After discovering &lt;strong&gt;vmrun&lt;/strong&gt;, I knocked together a handful of scripts to provide a workflow similar to EC2, but locally, using VMWare on my workstation.&lt;/p&gt;
&lt;h3&gt;VM2: Virtual Machine Mesh&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;I present &lt;a title="VM2: Virtual Machine Mesh" href="/theses/jboss-cloud/projects/vm2"&gt;VM2: Virtual Machine Mesh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is not intended to be exactly compatible with EC2, but to provide "close enough" match in workflow and functionality, particularly spinning up multiple instances from a single image, and boot user-data for configuration injection.&lt;/p&gt;
&lt;p&gt;The &lt;a title="JBoss-Cloud" href="/theses/jboss-cloud/projects/jboss-cloud"&gt;JBoss-Cloud&lt;/a&gt; project can generate a VMWare bundle, which we register in VM2:&lt;/p&gt;
&lt;pre style="font-size: 80%;"&gt;leonard:vm2 bob$ &lt;strong&gt;vm2 register /Users/bob/oddthesis/jboss-cloud/build/appliances/jboss-as5-appliance-1.0.0.Beta2-1.tgz&lt;/strong&gt;&lt;br /&gt;registering jboss-as5-appliance-1.0.0.Beta2-1 as vmi-b175c299b3&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;We can poke around and see the registered images&lt;/p&gt;
&lt;pre style="font-size: 80%;"&gt;leonard:vm2 bob$ &lt;strong&gt;vm2 describe-images&lt;/strong&gt;&lt;br /&gt;VMI             Name                                     User         Date&lt;br /&gt;----------------------------------------------------------------------------------------------------&lt;br /&gt;vmi-7839267fe0  postgis-appliance-1.0.0.Beta2-1          bob          Wed Dec 31 15:08:23 -0500 2008&lt;br /&gt;vmi-b175c299b3  jboss-as5-appliance-1.0.0.Beta2-1        bob          Wed Dec 31 16:55:12 -0500 2008&lt;br /&gt;----------------------------------------------------------------------------------------------------&lt;br /&gt;2 images&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;When registered, the image bundle gets stashed away in &lt;strong&gt;~/.vm2/images/&lt;/strong&gt; for safe-keeping.&lt;/p&gt;
&lt;p&gt;From there, we can launch instances from the image.&amp;nbsp; The bundle is expanded into a unique directory under &lt;strong&gt;~/.vm2/instances/&lt;/strong&gt; for each instance you want to spin up.&lt;/p&gt;
&lt;p&gt;Here we spin up 2 instances of the &lt;strong&gt;jboss-as5-appliance&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;leonard:vm2 bob$ &lt;strong&gt;vm2 run-instances vmi-b175c299b3 -n 2&lt;/strong&gt;&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;You can review the status of your instances&lt;/p&gt;
&lt;pre style="font-size: 80%;"&gt;leonard:vm2 bob$ &lt;strong&gt;vm2 describe-instances&lt;/strong&gt;&lt;br /&gt;Instance ID   VMI             State       IP Address        User                 Created&lt;br /&gt;---------------------------------------------------------------------------------------------------------------&lt;br /&gt;i-c160b05b43  vmi-b175c299b3  PREPARING   -                 bob                  Wed Dec 31 16:59:42 -0500 2008&lt;br /&gt;---------------------------------------------------------------------------------------------------------------&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;It'll go through the the following states&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PREPARING&lt;/strong&gt; as it expands the image bundle for the instance&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STARTING&lt;/strong&gt; as it boots up enough to know an IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RUNNING&lt;/strong&gt; when it's fully launched (init.d may still be churning)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STOPPED&lt;/strong&gt; when it's not actually running&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once they're running, &lt;strong&gt;vm2 describe&lt;/strong&gt; will show you their addresses:&lt;/p&gt;
&lt;pre style="font-size: 80%;"&gt;leonard:vm2 bob$ &lt;strong&gt;vm2 describe-instances&lt;/strong&gt;&lt;br /&gt;Instance ID   VMI             State       IP Address        User                 Created&lt;br /&gt;---------------------------------------------------------------------------------------------------------------&lt;br /&gt;i-c160b05b43  vmi-b175c299b3  RUNNING     192.168.237.153   bob                  Wed Dec 31 16:59:42 -0500 2008&lt;br /&gt;i-d864f89097  vmi-b175c299b3  RUNNING     192.168.237.152   bob                  Wed Dec 31 17:00:33 -0500 2008&lt;br /&gt;---------------------------------------------------------------------------------------------------------------&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;At this point, the guest images require &lt;strong&gt;open-vm-tools&lt;/strong&gt; and a special RPM called &lt;strong&gt;vm2-support&lt;/strong&gt; that is available in the &lt;strong&gt;jboss-cloud&lt;/strong&gt; project.&amp;nbsp; Thankfully, all of the JBoss-Cloud images automatically include both.&amp;nbsp; Gee whiz.&lt;/p&gt;
&lt;p&gt;It all operates on the local filesystem, and is not multi-user safe.&amp;nbsp; I also need to master some fork/exec Zen, to make it less blockfull.&amp;nbsp; It also assumes root's password is "thincrust" since I'm using the Thincrust tooling to create these images.&lt;/p&gt;
&lt;p&gt;In addition to the EC2-alike commands of &lt;strong&gt;run-instances&lt;/strong&gt; and &lt;strong&gt;terminate-instances&lt;/strong&gt;, there's &lt;strong&gt;shutdown-instances&lt;/strong&gt; which allow you to shutdown but retain the image for future use with &lt;strong&gt;start-instances&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Boot user-data gets injected into &lt;strong&gt;/etc/vm2-user-data.conf&lt;/strong&gt; at this point.&amp;nbsp; I may try to add an EC2-alike magic metadata webserver, but I think the direct file inject will play friendly enough with Puppet for now.&lt;/p&gt;
&lt;h3&gt;Get it&lt;/h3&gt;
&lt;p&gt;You can track VM2 from the &lt;a title="VM2 Git Repository" href="http://github.com/bobmcwhirter/vm2/tree/master"&gt;bobmcwhirter/vm2 GitHub repository&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Virtual Experience</title>
    <slug>jboss-virtual-experience</slug>
    <published>2009-01-05T20:38:43Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I'll be presenting on &lt;a title="JBoss-Rails" href="/theses/jboss-rails"&gt;JBoss-Rails&lt;/a&gt; and &lt;a title="JBoss-Cloud" href="/theses/jboss-cloud"&gt;JBoss-Cloud&lt;/a&gt; at the &lt;a title="JBoss Virtual Experience" href="http://www-2.virtualevents365.com/jboss_experience/"&gt;JBoss Virtual Experience&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's like a conference, but free, and you can attend in your slippers, since it's "virtual".&lt;/p&gt;
&lt;p&gt;Plan on attending on February 11th, from 8:30am through 6:00pm to &lt;a title="JBVE Agenda" href="http://www-2.virtualevents365.com/jboss_experience/agenda.php"&gt;hear speakers&lt;/a&gt; in 3 different tracks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Business&lt;/li&gt;
&lt;li&gt;Government&lt;/li&gt;
&lt;li&gt;Technical&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The JBVE guys are also tweeting as &lt;a title="jbossvirtexp on Twitter" href="http://twitter.com/jbossvirtexp"&gt;@jbossvirtexp&lt;/a&gt;.&amp;nbsp; Follow'em to stay informed.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss-Rails 1.0 Beta 3 Released</title>
    <slug>jboss-rails-1-0-beta-3-released</slug>
    <published>2008-12-29T18:50:30Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I'm happy to announce the 3rd beta of JBoss-Rails.&lt;/p&gt;
&lt;p&gt;This release includes updates of JRuby to 1.1.6 and JRuby-Rack to 0.9.3.&amp;nbsp; It also adjusts our own version-numbering scheme to be JBoss and RPM-compatible.&lt;/p&gt;
&lt;p&gt;Like last time, you can grab either just the deployer distribution, or a bundle that includes JBoss AS5 for JDK6.&amp;nbsp; The bundle uses the public 5.0.0.GA release we all celebrated a week or three ago.&lt;/p&gt;
&lt;p&gt;Here's the fun bits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Just the deployer&lt;/strong&gt;: &lt;a title="Just the JBoss-Rails deployer (no AS5)" href="http://repo.oddthesis.org/deployers/jboss-rails-deployer-1.0.0.Beta3.zip"&gt;jboss-rails-deployer-1.0.0.Beta3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AS5 plus deployer&lt;/strong&gt;:&lt;a title="JBoss AS5 plus JBoss-Rails bundle" href="http://repo.oddthesis.org/bundles/jboss-5.0.0-jdk6-rails-1.0.0.Beta3.zip"&gt; jboss-5.0.0-jdk6-rails-1.0.0.Beta3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to leave comments on this blog post, or subscribe to the &lt;a title="jboss-rails list archive" href="http://oddthesis.markmail.org/search/?q=#query:list%3Aorg.oddthesis.jboss-rails+page:1+state:facets"&gt;jboss-rails&lt;/a&gt; mailing list by sending a message to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="Subscribe to jboss-rails" href="mailto:jboss-rails-subscribe@oddthesis.org"&gt;jboss-rails-subscribe@oddthesis.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>RPMs of JBoss Things</title>
    <slug>rpms-of-jboss-things</slug>
    <published>2008-12-29T19:54:45Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;To build disk images for the JBoss-Cloud project, I had to build RPMs for the pieces I needed.&lt;/p&gt;
&lt;p&gt;Now I share those RPMs with you.&amp;nbsp; Many of them are &lt;strong&gt;noarch&lt;/strong&gt;, since they're just Java bits.&amp;nbsp; The actual binary RPMs are compiled against 32-bit i386 Fedora 10.&lt;/p&gt;
&lt;p&gt;The noarch RPMs include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="JBoss AS 5 RPM" href="http://repo.oddthesis.org/yum/RPMS/noarch/jboss-as5-5.0.0.GA-1.noarch.rpm"&gt;JBoss AS 5.0.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="JBoss-Rails deployer RPM" href="http://repo.oddthesis.org/yum/RPMS/noarch/jboss-rails-1.0.0.Beta3-1.noarch.rpm"&gt;JBoss-Rails Deployer for AS 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="JBoss mod_cluster for AS 5 " href="http://repo.oddthesis.org/yum/RPMS/noarch/as5-mod_cluster-1.0.0.Beta2-1.noarch.rpm"&gt;JBoss mod_cluster bits for AS 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="JBoss JGroups RPM" href="http://repo.oddthesis.org/yum/RPMS/noarch/jboss-jgroups-2.6.7.GA-1.noarch.rpm"&gt;JBoss JGroups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the binary space, there's just&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="JBoss mod_cluster for Apache httpd RPM" href="http://repo.oddthesis.org/yum/RPMS/i386/httpd-mod_cluster-1.0.0.Beta2-1.i386.rpm"&gt;mod_cluster for Apache httpd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, the &lt;a title="Yum repositories" href="http://repo.oddthesis.org/yum/"&gt;whole bit is setup as yum repositories&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And if these RPMs don't suit your need, there's also the &lt;a title="Source RPMs" href="http://repo.oddthesis.org/yum/SRPMS/"&gt;bundle of SRPMs&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>VMWare Scriptability</title>
    <slug>vmware-scriptability</slug>
    <published>2008-12-30T17:19:50Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Getting tired of clicking around with my mouse in VMWare Fusion on OSX, I did some googling, and found &lt;strong&gt;vmrun&lt;/strong&gt;.&amp;nbsp; It's conveniently tucked away under &lt;strong&gt;/Library/Application Support/VMWare Fusion/&lt;/strong&gt;, which isn't on my $PATH, so I added a line to my &lt;strong&gt;.bash_profile&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;alias vmrun='/Library/Application\ Support/VMware\ Fusion/vmrun'&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Now, once I've spun up an appliance image, I can easily start it from the command-line (and through a script, ultimately):&lt;/p&gt;
&lt;pre&gt;leonard:front-end-appliance bob$ &lt;strong&gt;vmrun start front-end-appliance.vmx&lt;/strong&gt; &lt;br /&gt;leonard:front-end-appliance bob$ &lt;strong&gt;vmrun list&lt;/strong&gt;&lt;br /&gt;Total running VMs: 2&lt;br /&gt;/Users/bob/oddthesis/thincrust/jboss-cloud/build/appliances/front-end-appliance/front-end-appliance.vmx&lt;br /&gt;/Users/bob/Documents/Virtual Machines.localized/Thincrust.vmwarevm/Thincrust.vmx&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Here you can see my Thincrust image, which I use to build the appliance images.&amp;nbsp; And you see how I started a freshly spun appliance full of "front-end" goodness.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Point of Clarification</title>
    <slug>point-of-clarification</slug>
    <published>2009-01-03T00:40:34Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;As Marek Goldmann points out &lt;a title="Marek Goldmann's JBoss-Cloud post" href="http://javavsme.wordpress.com/2009/01/01/jboss-cloud/"&gt;in his post about JBoss-Cloud&lt;/a&gt;, the project is by no means tied to the JBoss-Rails project.&amp;nbsp; (He's also blogged about JBoss mod_cluster both in &lt;a title="Marek Goldmann on mod_cluster (Polish)" href="http://javavsme.wordpress.com/2008/12/27/mod_cluster-nowe-spojrzenie-na-load-balancery/"&gt;Polish&lt;/a&gt; and &lt;a title="Marek Goldmann on mod_cluster (English)" href="http://javavsme.wordpress.com/2009/01/01/fresh-mod_cluster-rpms-for-fedora-10/"&gt;English&lt;/a&gt;.)&amp;nbsp; He's also provided patches to our RPM spec files.&amp;nbsp; Thanks Marek!&lt;/p&gt;
&lt;p&gt;Even though both projects share a site (&lt;a title="Bob's Odd Thesis" href="/"&gt;Odd Thesis&lt;/a&gt;) and a developer (me), they are not intrinsincly linked.&amp;nbsp; I do want to run my Rails apps in the cloud, but JBoss-Cloud supports any and all of JBoss.&amp;nbsp; If you've got a Seam app, go for it.&lt;/p&gt;
&lt;p&gt;I now return you to your regularly-scheduled programming.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Virtual Experience: Presentation Slides</title>
    <slug>jboss-virtual-experience-presentation-slides</slug>
    <published>2009-01-06T03:50:24Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;My slides for the &lt;a title="JBoss Virtual Experience" href="http://www-2.virtualevents365.com/jboss_experience/"&gt;JBoss Virtual Experience&lt;/a&gt; (JBoss Rails and JBoss in the Cloud) are due close-of-business today (about 6 hours ago).&amp;nbsp; Of course, that really means start-of-business tomorrow, thankfully.&lt;/p&gt;
&lt;p&gt;The Marketing gurus say I can publish them before the event, so here we go.&amp;nbsp; &lt;a title="JBoss Virtual Experience presentation" href="/system/assets/jbve-preso.pdf"&gt;Here's 70 slides of goodnes (PDF)&lt;/a&gt; to be presented in 30 minutes about 2 distinct projects. I recommend reviewing the slides before the &lt;a title="JBoss Virtual Experience" href="http://www-2.virtualevents365.com/jboss_experience/"&gt;JBVE&lt;/a&gt; presentation, as we'll be zipping through these fairly quickly.&amp;nbsp; You gotta keep up!&lt;/p&gt;
&lt;p&gt;I really think this probably should have been 2 individual presentations, but it is what it is, now.&amp;nbsp; So enjoy a &lt;a title="JBoss Virtual Experience presentation" href="/system/assets/jbve-preso.pdf"&gt;double-shot of bullet-point love (PDF)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a title="JBoss Virtual Experience presentation" href="/system/assets/jbve-preso.pdf"&gt;&lt;img src="/system/assets/jbve-preso-059.png" alt="" width="333" height="249" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>VM2 Command Reference</title>
    <slug>vm2-command-reference</slug>
    <published>2009-01-06T17:30:11Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I've begun documenting the &lt;a title="VM2" href="/theses/jboss-cloud/projects/vm2"&gt;VM2&lt;/a&gt; layer that allows VMWare to behave not unlike EC2.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a title="VM2 Command Reference" href="/theses/jboss-cloud/projects/vm2/pages/vm2-command-reference"&gt;command-reference&lt;/a&gt; for information on registering and deregistering images, starting and terminating instances, and much more.&lt;/p&gt;
&lt;p&gt;VM2 is the environment I use to demonstrate the &lt;a title="JBoss-Cloud" href="/theses/jboss-cloud/projects/jboss-cloud"&gt;JBoss-Cloud&lt;/a&gt; appliances in my &lt;a title="JBVE Presentation" href="/posts/2009-01-jboss-virtual-experience-presentation-slides"&gt;JBoss Virtual Experience presentation&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Another Head in the Clouds</title>
    <slug>another-head-in-the-clouds</slug>
    <published>2009-02-01T16:17:21Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;To counter some of last week's layoffs within the industry, we grew my team by 100%, hiring one other guy: &lt;a title="Marek's Blog" href="http://javavsme.wordpress.com/"&gt;Marek Goldmann&lt;/a&gt;.&amp;nbsp; You may have seen him around here commenting on posts, plus I pointed to his writings on &lt;a title="Marek's Polish post about mod_cluster" href="http://javavsme.wordpress.com/2008/12/27/mod_cluster-nowe-spojrzenie-na-load-balancery/"&gt;mod_cluster&lt;/a&gt; a while back.&amp;nbsp; He's already been responsible for creating our 64-bit images and functional ESXi support.&lt;/p&gt;
&lt;p&gt;Hailing from &lt;a title="Silesia" href="http://en.wikipedia.org/wiki/Silesia"&gt;Silesia&lt;/a&gt; (in Poland), he's got a background in high-availability, a willingness to hack JBoss, Fedora and RPMs, and enjoys bacon.&amp;nbsp; He may like long walks on the beach; I haven't asked.&lt;/p&gt;
&lt;p&gt;Welcome to the team, Marek!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Microcontainer enables the good sort of evil</title>
    <slug>jboss-microcontainer-enables-the-good-sort-of-evil</slug>
    <published>2009-02-12T14:55:41Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I've decided to rework the web-services deployer for JBoss-Rails to try wielding Apache-CXF directly.&amp;nbsp; The goal is to make configuration even easier.&amp;nbsp; With JBossWS, it still expected a META-INF/ directory containing your WS-Security configuration file.&amp;nbsp; In XML.&lt;/p&gt;
&lt;p&gt;And we know that's not awesome for Rails folks.&lt;/p&gt;
&lt;p&gt;But, during the process of playing with CXF, I found that some of its interceptors are slightly incompatible with the JBoss SOAP DOM implementation.&amp;nbsp; After spending a day recompiling both CXF and the JBoss DOM bits, I finally located the bug, in CXF's StaxUtils class.&lt;/p&gt;
&lt;p&gt;I &lt;a title="CXF-2033" href="https://issues.apache.org/jira/browse/CXF-2033"&gt;filed my report in the CXF JIRA&lt;/a&gt;, but I don't want to wait around for another release.&amp;nbsp; I also don't want to mangle the CXF jars I'm getting from the Maven repository or the JBoss DOM classes I get from the app-server.&lt;/p&gt;
&lt;p&gt;The quick solution seemed to be replicating the StaxUtils class, with my bugfix, into my own source-tree, and getting it in front of the "official" class located in the CXF jar.&lt;/p&gt;
&lt;p&gt;Firing up the JBoss-Rails deployer with my patched class still resulted in failure.&amp;nbsp; It appears that the jars inside the deployer are loaded alphabetically, perhaps.&amp;nbsp; CXF vs JBoss, it's hard to get my class in front.&lt;/p&gt;
&lt;p&gt;As we've talked previously about structure deployers, and how they help Microcontainer recognize the shape and layout of some thing you deploy.&amp;nbsp; They figure out where to look for classes, and where to look for meta-data.&lt;/p&gt;
&lt;p&gt;MC also supports a &lt;a title="JBossMC declared structure" href="http://www.jboss.org/files/jbossmc/docs/2.0.x/userGuide/ch21s04.html"&gt;declared-structure&lt;/a&gt; concept.&amp;nbsp; The thing-being-deployed tells MC all of this structure information, through a &lt;strong&gt;jboss-structure.xml&lt;/strong&gt; file.&amp;nbsp; Using this facility within the JBoss-Rails deployer, I have more control over the jar search order:&lt;/p&gt;
&lt;pre&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;br /&gt;&amp;lt;structure&amp;gt;&lt;br /&gt;    &amp;lt;context&amp;gt;&lt;br /&gt;        &amp;lt;path name=""/&amp;gt;&lt;br /&gt;        &amp;lt;metaDataPath&amp;gt;&lt;br /&gt;            &amp;lt;path name="META-INF"/&amp;gt;&lt;br /&gt;        &amp;lt;/metaDataPath&amp;gt;&lt;br /&gt;        &amp;lt;classpath&amp;gt;&lt;br /&gt;            &amp;lt;path name="lib/jboss-rails.jar"/&amp;gt;&lt;br /&gt;            &amp;lt;path name="lib/" suffixes=".jar" /&amp;gt;&lt;br /&gt;        &amp;lt;/classpath&amp;gt;&lt;br /&gt;    &amp;lt;/context&amp;gt;&lt;br /&gt;&amp;lt;/structure&amp;gt;&lt;/pre&gt;
&lt;p&gt;This file says that starting from the top of the deployer's own archive, &lt;strong&gt;META-INF/&lt;/strong&gt; is for meta-data, and the classpath should include the jboss-rails.jar &lt;strong&gt;first&lt;/strong&gt;, &lt;strong&gt;then&lt;/strong&gt; everything else with a &lt;strong&gt;.jar&lt;/strong&gt; extension.&lt;/p&gt;
&lt;p&gt;Once again, Microcontainer saves the day with a handful of metadata.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>My cloud or yours?</title>
    <slug>my-cloud-or-yours</slug>
    <published>2009-01-19T17:43:16Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;After presenting &lt;a title="VM2 announcement" href="/posts/2008-12-vm2-like-ec2-but-local"&gt;VM2&lt;/a&gt;, I was introduced to the Red Hat team doing &lt;a title="oVirt" href="http://ovirt.org/"&gt;oVirt&lt;/a&gt;.&amp;nbsp; oVirt is a layer on top of &lt;a title="libvirt" href="http://libvirt.org/"&gt;libvirt&lt;/a&gt; to help manage virtual machines on a single host or a farm of machines.&amp;nbsp; Since it uses libvirt, it will ultimately be able to target multiple hypervisors, but &lt;a title="KVM" href="http://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine"&gt;KVM&lt;/a&gt; is obviously the focus these days.&lt;/p&gt;
&lt;p&gt;Since oVirt has made such great progress in handling more than localhost VMs, it seems like a good foundation for building an EC2 type of cloud within your own datacenter (or laptop).&lt;/p&gt;
&lt;p&gt;So I've begun work on a thin &lt;a title="EC2 SOAP API documentation" href="http://docs.amazonwebservices.com/AWSEC2/2008-12-01/DeveloperGuide/index.html?soap-operations.html"&gt;EC2 API&lt;/a&gt; layer.&amp;nbsp; By providing an EC2 API on top of oVirt, cloud tooling can treat the EC2 API as a common interface, regardless of your ultimate virtualization fabric or where its actually hosted.&lt;/p&gt;
&lt;p&gt;The &lt;a title="Eucalyptus" href="http://eucalyptus.cs.ucsb.edu/"&gt;Eucalyptus&lt;/a&gt; team has done some work on host-your-own-EC2-compatible cloud, so it's certainly feasible.&lt;/p&gt;
&lt;p&gt;Once we have a common API for interacting with clouds, we can then work up the stack, using &lt;a title="JBoss JOPR" href="http://www.jboss.org/jopr/"&gt;JOPR&lt;/a&gt;, to manage the virtual nodes we've deployed.&lt;/p&gt;
&lt;p&gt;Here's the &lt;a title="DotW" href="/tags/dotw"&gt;diagram-of-the-week&lt;/a&gt; to demonstrate.&amp;nbsp; Blue bits are &lt;a title="JBoss.org" href="http://jboss.org/"&gt;JBoss.org&lt;/a&gt; projects, red bits come from the Red Hat teams, and yellow are your own applications and servers.&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/assets/jboss-haze-diagram.png" alt="10k' View" width="378" height="508" /&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Interview about Rails &amp; Cloud</title>
    <slug>interview-about-rails-cloud</slug>
    <published>2009-02-02T16:13:35Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;A few weeks ago, I spoke to Nitin Bharti at DZone/JavaLobby about JBoss-Rails and JBoss-Cloud.&lt;/p&gt;
&lt;p&gt;They've now published the &lt;a title="Interview for DZone" href="http://java.dzone.com/articles/odd-theses-an-interview-with-b"&gt;mostly-accurate transcript&lt;/a&gt;. You can also hear it &lt;a title="Audio interview for DZone" href="http://java.dzone.com/sites/all/files/MP3_Bob%20Mcwhirther.mp3.zip"&gt;straight from the horse's mouth&lt;/a&gt; (MP3, zipped?).&lt;/p&gt;
&lt;p&gt;Don't forget, you'll also be able to attend my presentation at the &lt;a title="JBoss Virtual Experience" href="http://www-2.virtualevents365.com/jboss_experience/"&gt;JBoss Virtual Experience&lt;/a&gt; on February 11th.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Status Update: Rails &amp; Cloud</title>
    <slug>status-update-3-feb-2009</slug>
    <published>2009-02-03T16:56:28Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Since I haven't shipped any bits lately, I figured it was time to at least talk about what I've been doing lately.&amp;nbsp; (Sacha, are you reading?)&lt;/p&gt;
&lt;p&gt;Things that did not involve code include the &lt;a title="Interview on DZone" href="/posts/2009-02-interview-about-rails-cloud"&gt;interview on DZone&lt;/a&gt; and &lt;a title="Odd hire" href="/posts/2009-02-another-head-in-the-clouds"&gt;bringing Marek on board&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Things that do involve code have been interesting also...&lt;/p&gt;
&lt;h3&gt;Ruby and JAX-WS&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;I like the EC2 API, at least as it is expressed through the command-line tools.&amp;nbsp; On the other-hand, the wire protocol does not elicit joy.&amp;nbsp; I'm normally a fan of &lt;a title="Bill Burke on REST" href="http://java.dzone.com/articles/intro-rest"&gt;RESTful&lt;/a&gt; protocols, but EC2, well, is not.&lt;/p&gt;
&lt;p&gt;And since my goal is to make oVirt appear like an EC2 cloud, I'm stuck with implementing the EC2 SOAP API.&amp;nbsp; With WS-Security bits.&amp;nbsp; Involving X.509 certificates.&lt;/p&gt;
&lt;p&gt;Every time I've looked at the SOAP implementations for Ruby, they seemed lacking.&amp;nbsp; Particularly once you start involving all the security bits and crypto.&amp;nbsp; But &lt;a title="JBossWS" href="http://www.jboss.org/jbossws/"&gt;JBossWS&lt;/a&gt; is pretty nice and fancy, supports certificates, message-signing and all that good stuff.&amp;nbsp; Just adjust a few settings and your API is secure.&amp;nbsp; Just like EC2.&lt;/p&gt;
&lt;p&gt;So far, I've gotten a &lt;strong&gt;@WebService&lt;/strong&gt; that can be backed by Ruby classes.&amp;nbsp; But that involves some &lt;strong&gt;wsdl2java&lt;/strong&gt;, compilation on the Java side, etc.&amp;nbsp; Now I'm looking into &lt;strong&gt;@WebServiceProvider&lt;/strong&gt;, which takes a slightly more dynamic approach.&amp;nbsp; I may end up having to jack in even lower to stand up classes from your RoR app as JAX-WS handlers, though.&amp;nbsp; But we'll get there.&amp;nbsp; And ideally, without touching the Java compiler from within your Rails app.&amp;nbsp; I'm glad to have the &lt;a title="Tag: deployers" href="/tags/deployers"&gt;deployers&lt;/a&gt; framework in &lt;a title="JBossMC" href="http://www.jboss.org/jbossmc/"&gt;Microcontainer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, thanks to &lt;a title="dmlloyd's blog" href="http://dmlloyd.blogspot.com/"&gt;David M. Lloyd&lt;/a&gt; for helping me understand BER-encoding and other magic involving OpenSSH RSA keypairs.&lt;/p&gt;
&lt;p&gt;Ongoing...&lt;/p&gt;
&lt;h3&gt;Is that an appliance in your pocket?&lt;/h3&gt;
&lt;p&gt;All of this talk about clouds is awesome.&amp;nbsp; But it's just an assembly of disk images (or "appliances") ultimately.&amp;nbsp; USB sticks have a pretty good capacity these days, and appliance images can be somewhat small-ish.&amp;nbsp; I've been talking to &lt;a title="JBossTools blog" href="http://jbosstools.blogspot.com/"&gt;Max Andersen&lt;/a&gt; of the &lt;a title="JBossTools" href="http://www.jboss.org/tools/"&gt;JBossTools&lt;/a&gt; project, about having a bootable, ready-to-go JBossTools-based appliance on a USB stick.&amp;nbsp; Fedora, OpenJDK, Eclipse, JBoss Tools.&amp;nbsp; Plug, boot, go.&lt;/p&gt;
&lt;p&gt;Also ongoing...&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss WebServices and Ruby</title>
    <slug>jboss-webservices-and-ruby</slug>
    <published>2009-02-05T16:21:48Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Given thesis 3, "JBoss can provide enterprise services to Rails apps" and my need to provide an secured EC2 SOAP API to emulate Amazon locally, I figured it was time to take a look at &lt;a title="JBossWS" href="http://jboss.org/jbossws"&gt;JBossWS&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;JBossWS can use JBoss's own stack (jbossws-native), Apache-CXF or Sun's Metro project to drive the underlying SOAP stuff.&amp;nbsp; For ease, I've just stuck with the jbossws-native for now.&lt;/p&gt;
&lt;h3&gt;Implementing a JAX-WS handler with Ruby&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Normally, JAX-WS likes annotations.&amp;nbsp; A &lt;strong&gt;lot&lt;/strong&gt;.&amp;nbsp; It also seems to like code generation, if you use something like &lt;strong&gt;wsprovide&lt;/strong&gt; or &lt;strong&gt;wsdl2java&lt;/strong&gt;.&amp;nbsp; You end up with a Java method for each operation, and annotations to link it all together.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;That's just not going to work for the dynamic world of Ruby.&lt;/p&gt;
&lt;p&gt;Thankfully, they do provide the &lt;strong&gt;javax.xml.ws.Provider&lt;/strong&gt; interface.&amp;nbsp; Implement that, and now your class only needs a single method to handle all operations:&lt;/p&gt;
&lt;pre&gt;public Source invoke(Source request) {&lt;br /&gt;    ...&lt;br /&gt;    return response;&lt;br /&gt;}&lt;/pre&gt;
&lt;p&gt;This is more akin to the service(...) method on servlets.&amp;nbsp; In my case, it'll route all handling through a JRuby interpreter to classes inside your Rails app.&lt;/p&gt;
&lt;p&gt;Since I'm working from an existing WSDL, I need to link up the definitions in the WSDL to the Java bits that will handle them.&amp;nbsp; I have to tell the container that some Java class will handle the service defined in the WSDL.&lt;/p&gt;
&lt;p&gt;So we're back to annotations.&amp;nbsp; Seems like we can't get away from the compiler.&amp;nbsp; But we can get away from compile-time compiling.&amp;nbsp; &lt;a title="Stefano's blog" href="http://www.javalinux.it/wordpress/"&gt;Stefano Maestri&lt;/a&gt; suggested using Javassist, which enables us to deal with run-time compilation, instead.&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/assets/rubyws-generation.png" alt="Code generation" width="414" height="286" /&gt;&lt;/p&gt;
&lt;p&gt;So it's fairly easy to put the bulk of the dispatch-to-ruby logic into a real Java class, and generate a thin shim at runtime to hold the &lt;strong&gt;@WebServiceProvider&lt;/strong&gt; annotation with the wiring information needed.&lt;/p&gt;
&lt;p&gt;While we're there, we also generate a constructor that sets the name of the ruby service, along with the name of the JRuby runtime-factory deployed by another part of the process.&amp;nbsp; The handler can use the JRuby factory and the class name to instantiate your Ruby class and dispatch requests to it.&lt;/p&gt;
&lt;p&gt;That's awesome.&amp;nbsp; But what triggers all of this?&lt;/p&gt;
&lt;h3&gt;Deploying Ruby JAX-WS handlers&lt;/h3&gt;
&lt;p&gt;We've talked about deployers before.&amp;nbsp; And we're going to do it again.&lt;/p&gt;
&lt;p&gt;If you recall all the previous deployment discussions, when a Rails app is deployed, it throws off a &lt;strong&gt;RailsApplicationMetaData&lt;/strong&gt; object early on.&amp;nbsp; This signals that we've got a Rails app being deployed, and tells us useful things like the &lt;strong&gt;RAILS_ROOT&lt;/strong&gt; and &lt;strong&gt;RAILS_ENV&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To deploy web-services, we add in another deployer or two. First, we have a &lt;strong&gt;RailsWebServicesDeployer&lt;/strong&gt;, which knows just enough to scan your Rails application and find things to handle webservices.&amp;nbsp; It creates a generic (not-Rails-specific) &lt;strong&gt;RubyWebServicesMetaData&lt;/strong&gt;, describing the Ruby class to handle the service.&lt;/p&gt;
&lt;p&gt;This all happens around the time of the &lt;strong&gt;PARSE&lt;/strong&gt; stage of deployment.&lt;/p&gt;
&lt;p&gt;After the &lt;strong&gt;CLASSLOADER&lt;/strong&gt; stage is complete, so we can safely generate classes into the app's classloader, we fire off the Javassist generate based upon the &lt;strong&gt;RubyWebServicesMetaData&lt;/strong&gt; we find.&lt;/p&gt;
&lt;p&gt;Once we've added our annotated shim classes to the classloader, we look for a &lt;strong&gt;JBossWebMetaData&lt;/strong&gt;, which you've probably worked with in its jboss-web.xml form.&amp;nbsp; We adjust it so that our generated classes are listed as servlets, we set up the mappings and URL patterns, and then let it slide out of our hands.&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/assets/rubyws-deploy.png" alt="Ruby WS deployers" width="479" height="421" /&gt;&lt;/p&gt;
&lt;p&gt;Lastly, the JBossWS deployers kick in, and do whatever it is they do to turn a &lt;strong&gt;JBossWebMetaData&lt;/strong&gt; into deployed web-services.&amp;nbsp; We don't have to care about that bit at all.&lt;/p&gt;
&lt;h3&gt;Bottom Line&lt;/h3&gt;
&lt;p&gt;In general, I think the strategy for deploying Rails-centric bits of JBoss enterprise services will involve a handful of deployers wedged in at the appropriate stages, and the ability to poke around in Ruby classes to generate annotations on Java subclasses.&amp;nbsp; Sounds complex, but it's not, really.&lt;/p&gt;
&lt;p&gt;Stuff like this:&lt;/p&gt;
&lt;pre&gt;class MyRubyHandler &amp;lt; JBossRubyHandler&lt;br /&gt;  targetNamespace 'http://jboss.org/myservice'&lt;br /&gt;end&lt;/pre&gt;
&lt;p&gt;Becomes stuff like this:&lt;/p&gt;
&lt;pre&gt;// Generated&lt;br /&gt;@WebServiceProvider( &lt;br /&gt;  targetNamespace="http://jboss.org/myservice"&lt;br /&gt;)&lt;br /&gt;public class MyRubyHandlerProxy extends BaseRubyHandlerProxy {&lt;br /&gt;    public MyRubyHandlerProxy() {&lt;br /&gt;      super( "MyRubyHandler", "factory.MyAppRubyFactory" );&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Given Javassist and a strong confidence in writing deployers, we can avoid any explicit user-invoked compilation phase, while still wiring up to Java technologies that insist on annotations.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Virtual Experience this Wednesday</title>
    <slug>jboss-virtual-experience-this-wednesday</slug>
    <published>2009-02-07T17:57:54Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;As time draws nigh, I once again want to remind everyone to &lt;a title="Register for the JBoss Virtual Experience" href="http://www-2.virtualevents365.com/jboss_experience/register.php"&gt;&lt;strong&gt;go register&lt;/strong&gt;&lt;/a&gt; for the &lt;a title="JBoss Virtual Experience" href="http://www-2.virtualevents365.com/jboss_experience/"&gt;JBoss Virtual Experience&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are &lt;a title="JBVE Agenda" href="http://www-2.virtualevents365.com/jboss_experience/agenda.php"&gt;3 simultaneous tracks&lt;/a&gt;: &lt;strong&gt;Business&lt;/strong&gt;, &lt;strong&gt;Technical&lt;/strong&gt; and &lt;strong&gt;Goverment&lt;/strong&gt;.&amp;nbsp; A lot of JBoss engineers and business people will be around for Q&amp;amp;A after each presentation, plus there's a virtual cafe where folks can linger for informal conversation.&lt;/p&gt;
&lt;p&gt;My presentation goes on at 3pm US-Eastern.&lt;/p&gt;
&lt;p&gt;It should be fun.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>XML Data-Binding for JRuby</title>
    <slug>xml-data-binding-for-jruby</slug>
    <published>2009-02-15T19:06:28Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;In the process of binding a fancy SOAP stack to JBoss-Rails, I of course became frustrated working with DOM trees or StAX iterators.&amp;nbsp; If you're using 100% Pure Java(tm), you'd use JAXB, and compile up a nice tree matching the object-model described by the XSD in the WSDL.&lt;/p&gt;
&lt;p&gt;I, on the other hand, am not using 100% Pure Java(tm) syntax and processes. I'm dynamically deploying WSDLs handled by dynamically reloadable Ruby classes.&lt;/p&gt;
&lt;p&gt;So I need a dynamic data-binding to wire up to the &lt;a title="Apache-CXF" href="http://cxf.apache.org/"&gt;Apache-CXF&lt;/a&gt; chain.&amp;nbsp; A CXF &lt;a title="DataBinding javadocs" href="http://cxf.apache.org/javadoc/latest/org/apache/cxf/databinding/DataBinding.html"&gt;DataBinding&lt;/a&gt; is responsible for handling readers and writers capable of converting an XML stream into &lt;strong&gt;some other object&lt;/strong&gt;.&amp;nbsp; And back again.&amp;nbsp; The data-binding is informed by the XML Schema used to define the web-service.&lt;/p&gt;
&lt;p&gt;Now, some examples using the Amazon EC2 WSDL.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The describe-instances operation is used to list information about running server instances on EC2.&amp;nbsp; The request message is defined by this XSD fragment:&lt;/p&gt;
&lt;pre&gt;&amp;lt;xs:element name="DescribeInstances" &lt;br /&gt;            type="tns:DescribeInstancesType"/&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;xs:complexType name="DescribeInstancesType"&amp;gt;&lt;br /&gt;  &amp;lt;xs:sequence&amp;gt;     &lt;br /&gt;    &amp;lt;xs:element name="instancesSet" &lt;br /&gt;                type="tns:DescribeInstancesInfoType"/&amp;gt;&lt;br /&gt;  &amp;lt;/xs:sequence&amp;gt;    &lt;br /&gt;&amp;lt;/xs:complexType&amp;gt; &lt;br /&gt;                &lt;br /&gt;&amp;lt;xs:complexType name="DescribeInstancesInfoType"&amp;gt;&lt;br /&gt;  &amp;lt;xs:sequence&amp;gt;     &lt;br /&gt;    &amp;lt;xs:element name="item" &lt;br /&gt;                type="tns:DescribeInstancesItemType" &lt;br /&gt;                minOccurs="0" &lt;br /&gt;                maxOccurs="unbounded"/&amp;gt;&lt;br /&gt;  &amp;lt;/xs:sequence&amp;gt;    &lt;br /&gt;&amp;lt;/xs:complexType&amp;gt; &lt;br /&gt;                &lt;br /&gt;&amp;lt;xs:complexType name="DescribeInstancesItemType"&amp;gt;&lt;br /&gt;  &amp;lt;xs:sequence&amp;gt;     &lt;br /&gt;    &amp;lt;xs:element name="instanceId" &lt;br /&gt;                type="xs:string" /&amp;gt;&lt;br /&gt;  &amp;lt;/xs:sequence&amp;gt;    &lt;br /&gt;&amp;lt;/xs:complexType&amp;gt; &lt;/pre&gt;
&lt;p&gt;When deployed (at runtime) the Ruby data-binding swizzles that into some relatively simple Ruby classes:&lt;/p&gt;
&lt;pre&gt;class DescribeInstancesType&lt;br /&gt;  attr_accessor :instancesSet&lt;br /&gt;&lt;br /&gt;  def initialize()&lt;br /&gt;    @instancesSet = DescribeInstancesInfoType.new()&lt;br /&gt;  end&lt;br /&gt;end&lt;br /&gt;&lt;br /&gt;class DescribeInstancesInfoType &amp;lt; ::Array&lt;br /&gt;end&lt;br /&gt;&lt;br /&gt;class DescribeInstancesItemType&lt;br /&gt;  attr_accessor :instanceId&lt;br /&gt;&lt;br /&gt;  def initialize()&lt;br /&gt;    @instanceId = ''&lt;br /&gt;  end&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Through some magic involving subclassing &lt;strong&gt;::Array&lt;/strong&gt;, when a portion of the tree is array-like, we end up with a very intuitive-to-use model.&amp;nbsp; We've borrowed this strategy from &lt;strong&gt;xsd2ruby&lt;/strong&gt; by the &lt;a title="soap4r" href="http://dev.ctor.org/soap4r"&gt;soap4r&lt;/a&gt; guys.&lt;/p&gt;
&lt;p&gt;Throwing some XML at it:&lt;/p&gt;
&lt;pre&gt;&amp;lt;ns1:DescribeInstances&amp;gt;&lt;br /&gt;  &amp;lt;ns1:instancesSet&amp;gt;&lt;br /&gt;    &amp;lt;ns1:item&amp;gt;&lt;br /&gt;      &amp;lt;ns1:instanceId&amp;gt;foo&amp;lt;/ns1:instanceId&amp;gt;&lt;br /&gt;    &amp;lt;/ns1:item&amp;gt;&lt;br /&gt;    &amp;lt;ns1:item&amp;gt;&lt;br /&gt;      &amp;lt;ns1:instanceId&amp;gt;bar&amp;lt;/ns1:instanceId&amp;gt;&lt;br /&gt;    &amp;lt;/ns1:item&amp;gt;&lt;br /&gt;    &amp;lt;ns1:item&amp;gt;&lt;br /&gt;      &amp;lt;ns1:instanceId&amp;gt;baz&amp;lt;/ns1:instanceId&amp;gt;&lt;br /&gt;    &amp;lt;/ns1:item&amp;gt;&lt;br /&gt;  &amp;lt;/ns1:instancesSet&amp;gt;&lt;br /&gt;&amp;lt;/ns1:DescribeInstances&amp;gt;&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Results in the Ruby object:&lt;/p&gt;
&lt;pre&gt;#&amp;lt;DescribeInstancesType:0x57581ef &lt;br /&gt;    @instancesSet=[#&amp;lt;DescribeInstancesItemType:0x23356034 &lt;br /&gt;                       @instanceId="foo"&amp;gt;, &lt;br /&gt;                   #&amp;lt;DescribeInstancesItemType:0x242e34f2 &lt;br /&gt;                       @instanceId="bar"&amp;gt;, &lt;br /&gt;                   #&amp;lt;DescribeInstancesItemType:0x6dc22478 &lt;br /&gt;                       @instanceId="baz"&amp;gt;]&amp;gt;&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;And using it is quite simple:&lt;/p&gt;
&lt;pre&gt;root.instancesSet.each{|e| puts e.instanceId }&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Likewise, in a day or two, we'll have the reverse, capable of marshalling a Ruby object right back to some XSD-defined XML.&lt;/p&gt;
&lt;p&gt;And all of this will be used in the JBoss-Rails web-services bits.&amp;nbsp; It's all driven by the Java StAX parsers, so no need to argue about "REXML is slow!" or whatnot.&amp;nbsp; All XML-handling occurs from Java, against fast Java XML parsers.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Cloud 1.0.0.Beta2 is out!</title>
    <slug>jboss-cloud-1-0-0-beta2-is-out</slug>
    <published>2009-02-16T11:50:05Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;I'm happy to announce a new version of JBoss Cloud. This is my first release, so I would like to say hi to everyone!&lt;br /&gt;&lt;br /&gt;This release contains three new major features (appliance-builder, meta-appliance and VMware ESX support) and a bunch of bug fixes.&lt;/p&gt;
&lt;h3&gt;Meta-appliance aka metappliance&lt;/h3&gt;
&lt;p&gt;If you don't want to create your own environment for building appliances on your system, you can use our &lt;strong&gt;meta-appliance&lt;/strong&gt;. We provide it to you in three formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RAW&lt;/strong&gt; &amp;mdash; Ideally to run on KVM,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VMware Enterprise&lt;/strong&gt; &amp;mdash; Good for VMware ESX/ESXi,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VMware Personal&lt;/strong&gt; &amp;mdash; Best for VMware Server, Workstation, Fusion, Player etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just &lt;a href="http://repo.oddthesis.org/releases/jboss-cloud/1.0.0.Beta2/i386/meta-appliance/"&gt;grab&lt;/a&gt; best format for you from our server and use it. There is a &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/metappliance"&gt;page&lt;/a&gt; which describes how to use it.&lt;/p&gt;
&lt;h3&gt;appliance-builder&lt;/h3&gt;
&lt;p&gt;Another big change is appliance-builder. It is a wizard for JBoss Cloud appliance building. Just run it from root folder of JBoss Cloud source and see it in action. In next releases there will be more and more features that will make appliance creation quicker and sweeter.&lt;/p&gt;
&lt;h3&gt;VMware ESX/ESXi support&lt;/h3&gt;
&lt;p&gt;Beginning with Beta2 JBoss Cloud has support for VMware ESX/ESXi. Yeah, that's true &amp;mdash; you can run JBoss Cloud on VMware Infrastructure 3! Just build an VMware enterprise appliance (or &lt;a href="http://repo.oddthesis.org/releases/jboss-cloud/1.0.0.Beta2/i386/"&gt;grab it&lt;/a&gt; from our server!) and push it to VMware ESX/ESXi server via VI Client!&lt;/p&gt;
&lt;p&gt;To build an appliance for VMware enterprise product just run:&lt;/p&gt;
&lt;pre&gt;./appliance-builder -V&lt;/pre&gt;
&lt;p&gt;Wizard will help you select appliance and best values for it.&lt;/p&gt;
&lt;p&gt;Build process will take some time, so go get some beer or coffee. After your'e back, check directory &lt;strong&gt;$JBOSS_CLOUD_HOME/build/appliances/$ARCH/$APPLIANCE_NAME/vmware/enterprise/&lt;/strong&gt; for appliance.&lt;/p&gt;
&lt;p&gt;Unfortunately ESX support requires two packages: &lt;strong&gt;livecd-tools-021-1.fc10&lt;/strong&gt; and &lt;strong&gt;appliance-tools-003.11-1.fc10&lt;/strong&gt; that aren't included in fedora stable repositories. New packages are available from &lt;em&gt;updates-testing&lt;/em&gt;. Just run the command to update:&lt;/p&gt;
&lt;pre&gt;yum --enablerepo=updates-testing update livecd-tools appliance-tools&lt;/pre&gt;
&lt;p&gt;If you don't want to build VMware ESX appliances you can omit the update, of course.&lt;/p&gt;
&lt;h3&gt;Other stuff&lt;/h3&gt;
&lt;p&gt;Our yum repository has also a new structure. From Beta2 all appliances could be updated via yum update command!&lt;/p&gt;
&lt;p&gt;Notice also that default password for all our appliances is from now &lt;strong&gt;oddthesis&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There was also some work on make appliances working in 64 bit environments. 64 bit appliances &lt;span style="text-decoration: underline;"&gt;should&lt;/span&gt; work now.&lt;/p&gt;
&lt;h3&gt;Where can I get it?&lt;/h3&gt;
&lt;p&gt;Pre-built appliances are available for all supported output formats to &lt;a href="http://repo.oddthesis.org/releases/jboss-cloud/1.0.0.Beta2/i386/"&gt;download from our server&lt;/a&gt;. All appliances are built only for i386 architecture, sorry. If you really want 64 bit support &amp;mdash; grab &lt;a href="http://github.com/bobmcwhirter/jboss-cloud/tree/master"&gt;JBoss Cloud sources&lt;/a&gt; and build own appliances, that's really easy!&lt;/p&gt;
&lt;p&gt;All VMware images are assuming, that you are running those in environment with a network connection named &lt;strong&gt;NAT&lt;/strong&gt;. This is default in VMware personal environments and it should work out of-the-box. However if you want to run it in VMware ESX and &lt;strong&gt;NAT&lt;/strong&gt; doesn't match your configuration (most likely) simply put your network name in &lt;strong&gt;nethernet0.networkName&lt;/strong&gt; parameter in .vmx file.&lt;/p&gt;
&lt;p&gt;I you aren't using &lt;a href="/theses/jboss-cloud/projects/vm2"&gt;VM2&lt;/a&gt; for running appliances, you must set manually &lt;strong&gt;JBOSS_PROXY_LIST&lt;/strong&gt; and &lt;strong&gt;JBOSS_GOSSIP_HOST&lt;/strong&gt; in &lt;strong&gt;/etc/jboss-as5.conf&lt;/strong&gt; file in jboss-as5-appliance to have a fully working JBoss AS 5 cluster.&lt;/p&gt;
&lt;h3&gt;Last words...&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Don't forget to take a look at &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/bins/13626"&gt;detailed list of tickets done in 1.0.0.Beta2&lt;/a&gt;! If you have found a bug or have a good idea how to make JBoss Cloud better &amp;mdash; &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/new"&gt;fill a ticket&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;If you have any problems, questions on JBoss Cloud bits or just want tell us that you're using it, contact us via &lt;a href="/posts/2008-12-irc-presence"&gt;IRC&lt;/a&gt; or our &lt;a href="/posts/2008-11-mailing-lists-for-jboss-rails-and-jboss-cloud"&gt;mailing list&lt;/a&gt;. We're happy to hear from you!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Atlanta SofaConf</title>
    <slug>atlanta-sofaconf</slug>
    <published>2009-02-19T15:08:07Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I'm going to be in Atlanta for the Atlanta JUG's &lt;a title="Atlanta JUG DevNexus conference" href="http://www.devnexus.com/"&gt;DevNexus&lt;/a&gt; conference, March 10-11.&amp;nbsp; I may or may not be speaking, but I'll be attending and helping with all things JBoss.&lt;/p&gt;
&lt;p&gt;But why should you settle for simply attending the conference, when you could also have me sleep on your sofa? If you live in Atlanta and have a spare sofa or futon, here's your chance to spend some quality time with a JBoss developer.&amp;nbsp; Invite friends, we'll grill (if you have a grill) and have some beers.&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/assets/sofaconf.png" alt="SofaConf" width="262" height="60" /&gt;&lt;/p&gt;
&lt;p&gt;To qualify, you must have a sofa capable of sleeping a 6'5" man.&lt;/p&gt;
&lt;p&gt;Leave a comment explaining why I should select your sofa to host the First Atlanta Sofa Conf.&amp;nbsp; Factors may include who you are, what type of sofa you have, and proximity to the Vinings area, or anything else you deem appropriate.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Put Java in your Rails apps with Maven</title>
    <slug>put-java-in-your-rails-apps-with-maven</slug>
    <published>2009-02-18T21:17:13Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I just knocked up a quick page on using Maven to build the Java portion of your JBoss-Rails app, if you're doing a hybrid multi-language app.&lt;/p&gt;
&lt;p&gt;Anyhow, please check out &lt;a title="Using Maven for your mixed-language project" href="/theses/jboss-rails/projects/jboss-rails/pages/using-maven"&gt;Using Maven for your mixed-language project&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>A few words on VMware support in JBoss-Cloud</title>
    <slug>a-few-words-on-vmware-support-in-jboss-cloud</slug>
    <published>2009-02-23T15:08:21Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;h3&gt;Why VMware?&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;I'm a VMware fan, really. They provide good, reliable virtualization environment for personal use and big business too. In the middle of 2008 VMware has &lt;a href="http://www.vmware.com/company/news/releases/esxi_pricing.html"&gt;announced&lt;/a&gt; a new product called &lt;a href="https://www.vmware.com/products/esxi/"&gt;ESXi&lt;/a&gt;. It's a hypervizor, &lt;strong&gt;available for free&lt;/strong&gt; (but still not opensource), for everyone. ESXi can be a part of VMware Infrastructure (you can choose between old, fat ESX Server and new, light ESXi).&lt;br /&gt;&lt;br /&gt;Unfortunately ESXi can be installed only on &lt;a href="http://www.vmware.com/resources/compatibility/search.php"&gt;certified hardware&lt;/a&gt;. Officially. Many people around the world have created a &lt;a href="http://www.vm-help.com/esx/esx3.5/Whiteboxes_SATA_Controllers_for_ESX_3.5_3i.htm"&gt;white-box list&lt;/a&gt; of systems (mainboards, controllers, etc.) capable running ESXi, so you can pick up a good, cheap piece of hardware and have really good virtualization at home (or company).&lt;br /&gt;&lt;br /&gt;Before I started digging in JBoss-Cloud I had a wish to run it on ESXi (and VMware Infrastructure 3 too as formats are the same), so making JBoss-Cloud on ESXi working was my priority (VMware personal support was already done by Bob).&lt;/p&gt;
&lt;h3&gt;VMware disk types&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;For appliance image creation we use &lt;a href="http://thincrust.net/tooling.html"&gt;&lt;strong&gt;appliance-creator&lt;/strong&gt;&lt;/a&gt; tool from &lt;a href="http://thincrust.net"&gt;Thincrust&lt;/a&gt;. Te default output format of this tool is a RAW disk. It's great for KVM, but not so good for VMware, or rather I thought so before... But, in turn.&lt;br /&gt;&lt;br /&gt;VMware uses seven (sic!) &lt;a href="http://sanbarrow.com/vmdk/disktypes.html"&gt;disk types&lt;/a&gt;&lt;a href="http://sanbarrow.com/vmdk/disktypes.html"&gt;&lt;/a&gt;. We can exclude types which are breaking a disk in 2 GB files. We don't need them as we are using good filesystems, right? We don't need also physical disks. After excludes, we have still three types; two for VMware Personal: &lt;strong&gt;monolithicSparse&lt;/strong&gt;, &lt;strong&gt;monolithicFlat&lt;/strong&gt; and one for VMware Enterprise: &lt;strong&gt;vmfs&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt;BTW, I'm using the unofficial VMware Personal and Enterprise terms to distinguish VMware products intended to personal, home use (Server, Fusion, Workstation, Player) and enterprise, datacenter use (Infrastructure, ESXi).&lt;br /&gt;&lt;br /&gt;So, back to disks. What's the main difference between monolithicSparse and monolithicFlat? It's simple: monolithicSparse is growing as there is more data to store on the disk and monolithicFlat allocates all disk size at the time of creation. Another difference is that monolithicSparse has a embedded disk descriptor, monolithicFlat has an external descriptor file.&lt;br /&gt;&lt;br /&gt;Thincrust appliance-creator has support for various disk formats. How it is done? It creates a RAW disk image and, if needed, it converts it to a specified format using &lt;strong&gt;qemu-img&lt;/strong&gt;. As qemu-img has a wide support for various formats, appliance-creator is a very handy tool, worth &lt;a href="http://thincrust.net/tooling.html"&gt;taking a look&lt;/a&gt; (or two)!&lt;/p&gt;
&lt;p&gt;VMware disk support is also included in qemu-img. Unfortunately only &lt;strong&gt;monolithicSparse&lt;/strong&gt; disk type is supported by this tool and we need &lt;strong&gt;vmfs&lt;/strong&gt;. Second glitch: created disk is a IDE disk. It's fine for VMware Personal, but VMware Enterprise uses only SCSI disks. As the disk descriptor for monolithicSparse is embedded, there is no simple way to convert it to a SCSI disk (at least I don't know any simple method).&lt;/p&gt;
&lt;h3&gt;We need to boot it, now!&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;I understood that if I want to have JBoss-Cloud working on VMware Enterprise I must do it another way. After some time spent on &lt;strong&gt;vmfs&lt;/strong&gt; disk format I realized that this is... simply a RAW disk! So, really good news, as we have a RAW disk already!&lt;br /&gt;&lt;br /&gt;In VMware environment a disk needs also a disk descriptor file. For vmfs disk type the descriptor is fortunately an external, simple text file which can be edited by hand. I've created one for my disk with all needed information (disk size, geometry, SCSI controller etc.). It wouldn't be possible without a &lt;a href="http://sanbarrow.com/"&gt;great site&lt;/a&gt; from Ulli Hankeln. Ulli has &lt;a href="http://sanbarrow.com/vmdk/disktypes.html#vmfs"&gt;described the vmfs descriptor format&lt;/a&gt; and created also a &lt;a href="http://sanbarrow.com/vmdk/diskgeometrietable.html"&gt;disk geometry table&lt;/a&gt; for every disk size in the world. Thank you Ulli, great job!&lt;br /&gt;&lt;br /&gt;After first run I saw the grub menu. I was happy, really happy. A few seconds later Fedora said, that it wouldn't boot. The problem was that the included in Fedora stable repository appliance-creator don't adds by default &lt;strong&gt;mptspi&lt;/strong&gt; module to kernel at boot time. The module is required to make LSI Logic controller (default on VMware for SCSI disks) working. Fortunately there was a &lt;a href="http://markmail.org/search/?q=thincrust+list%3Acom.redhat.thincrust-devel+disk#query:thincrust%20list%3Acom.redhat.thincrust-devel%20disk+page:1+mid:zgr4enjioddibbvf+state:results"&gt;discussion on that on thincrust-devel list&lt;/a&gt; which has produced a patch for appliance-creator. Patched version is still in updates-testing repo. To make an update of appliance-tools (and livecd-tools on which relay they) I run:&lt;/p&gt;
&lt;pre&gt;yum --enablerepo=updates-testing update livecd-tools appliance-tools&lt;/pre&gt;
&lt;p&gt;After quick update and appliance recreation. I go a little step forward. Now I got an other error:&lt;/p&gt;
&lt;blockquote&gt;&lt;span style="display: inline;"&gt;&lt;span&gt;mount:  error mounting /dev/root on /sysroot as ext3:  No such file or directory&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;span style="display: inline;"&gt;&lt;span&gt;This is a well known bug described in Red Hat's Bugzilla &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=466607"&gt;&lt;span style="display: inline;"&gt;&lt;span&gt;#466607&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style="display: inline;"&gt;&lt;span&gt; (and in &lt;/span&gt;&lt;/span&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=471093"&gt;&lt;span style="display: inline;"&gt;&lt;span&gt;#471093&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=466607"&gt;&lt;/a&gt;&lt;span style="display: inline;"&gt;&lt;span&gt;). I found a solution for this problem in &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=466607#c60"&gt;comments&lt;/a&gt;: add &lt;strong&gt;scsi_mod.scan=sync&lt;/strong&gt; to kernel parameters at boot time. &lt;a href="http://fedoraproject.org/wiki/Anaconda/Kickstart"&gt;Kickstart&lt;/a&gt; file provides a simple way to do it, so I modified our kickstart file in bootloader line:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;span style="display: inline;"&gt;&lt;span&gt;bootloader --timeout=1 --append="acpi=force scsi_mod.scan=sync"&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/blockquote&gt;
&lt;p&gt;After another recreation of images, Fedora booted just fine in my ESXi, mission was complete &amp;mdash; VMware support was added. I deserve a beer, or not?&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss-Cloud: Core, Wizard, VMware &amp; Roadmap</title>
    <slug>jboss-cloud-core-wizard-vmware-roadmap</slug>
    <published>2009-03-02T19:47:16Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;h3&gt;Introducing jboss-cloud-support&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;The most important change in JBoss-Cloud project is moving its core to a external project called &lt;strong&gt;JBoss-Cloud Support&lt;/strong&gt;. Sources are available, as usual, &lt;a href="http://github.com/goldmann/jboss-cloud-support/"&gt;at github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You might be asking what's the reason of that move? As you know we at JBoss are open, really open. If you want to generate appliances, not neccessary for Cloud, you can use only jboss-cloud-support with self created appliance files and all needed stuff for that. But you should know that we're focusing on JBoss-Cloud project, though.&lt;/p&gt;
&lt;p&gt;If something isn't working for you in a "stand-alone" version of JBoss-Cloud, tell us about that. We're on &lt;a href="/posts/2008-12-irc-presence"&gt;IRC&lt;/a&gt; and we have also a &lt;a href="/posts/2008-11-mailing-lists-for-jboss-rails-and-jboss-cloud"&gt;mailing-list&lt;/a&gt;. You can &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/new"&gt;create a ticket&lt;/a&gt; too (remember to add &lt;strong&gt;core&lt;/strong&gt; tag &amp;mdash; this will help a lot!).&lt;/p&gt;
&lt;h3&gt;Wizard improvements&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Wizard has been completely rewritten. What's new? In one word: everything. Wizard shipped with 1.0.0.Beta2 has enabled only selecting appliance and output type. &lt;strong&gt;Now you can choose everything you need&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Appliance to build,&lt;/li&gt;
&lt;li&gt;Disk size,&lt;/li&gt;
&lt;li&gt;Memory size,&lt;/li&gt;
&lt;li&gt;Output type,&lt;/li&gt;
&lt;li&gt;Network name (if VMware Personal or Enterprise output type is selected).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More, you can save an appliance configuration and reuse it later! By default wizard will store configurations in &lt;strong&gt;~/.jboss-cloud/configs/&lt;/strong&gt; directory. You can override this by setting &lt;strong&gt;JBOSS_CLOUD_CONFIG_DIR&lt;/strong&gt; environment variable, eg:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;export JBOSS_CLOUD_CONFIG_DIR=/opt/jbc/configs/&lt;/p&gt;
&lt;p&gt;./wizard&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At start wizard will show all saved configurations. After selecting saved config there are three options:&lt;/p&gt;
&lt;ol&gt; &lt;/ol&gt; 
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;view&lt;/strong&gt; &amp;mdash; it'll print saved configuration,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;delete&lt;/strong&gt; &amp;mdash; it'll remove selected configurations from disk,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;use&lt;/strong&gt; (default) &amp;mdash; it'll build selected configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To run wizard go to JBoss-Cloud home folder and run &lt;strong&gt;./wizard&lt;/strong&gt;. Note that it was renamed from &lt;strong&gt;appliance-builder&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Tip&lt;/strong&gt;: you can exit from wizard any time by pressing CTRL+C!&lt;/p&gt;
&lt;h3&gt;VMware support changes&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;VMware support code has been completely rewritten, too. Most important changes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Switch to SCSI disks&lt;/strong&gt; for VMware Personal appliances (Enterprise has SCSI disks already),&lt;/li&gt;
&lt;li&gt;Got rid of some dependencies: python-virtinst and qemu-img are &lt;strong&gt;no longer required&lt;/strong&gt;!&lt;/li&gt;
&lt;li&gt;Increase VMware appliances generation speed. If you have generated RAW image before, converting it to VMware images, both Personal and Enterprise will take not ~20 minutes as before, but &lt;strong&gt;&amp;lt; 5 sec&lt;/strong&gt;, really, check it out!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;When it will be released?&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;We're getting closer and closer to next beta release of JBoss-Cloud. Take a look at &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/bins/14145"&gt;tickets&lt;/a&gt; assigned to 1.0.0.Beta3 milestone. We're going to push it in the near future, so be prepared to get latest and best Cloud out there!&lt;/p&gt;
&lt;p&gt;But if you are impatient (don't worry, we like them), take a look at &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/how-to-start"&gt;how to start page&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss-Rails 1.0.0.Beta4 in time for the weekend</title>
    <slug>jboss-rails-1-0-0-beta4-in-time-for-the-weekend</slug>
    <published>2009-03-06T19:56:06Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I'm happy to announce after quite a lag, there's a new version of JBoss-Rails available with lots of new features. Just in time for playing with it over the weekend!&lt;/p&gt;
&lt;p&gt;This release sees a solidification of the &lt;a title="Job Scheduling" href="/theses/jboss-rails/projects/jboss-rails/pages/job-scheduling"&gt;&lt;strong&gt;Job Scheduling&lt;/strong&gt;&lt;/a&gt; component, along with the addition of the &lt;a title="Ruby SOAP Endpoints" href="/theses/jboss-rails/projects/jboss-rails/pages/ruby-soap-endpoints"&gt;&lt;strong&gt;Ruby SOAP Endpoints&lt;/strong&gt;&lt;/a&gt; component.&amp;nbsp; The SOAP stuff also brings along support for &lt;a title="crypto.yml" href="/theses/jboss-rails/projects/jboss-rails/pages/crypto-yml"&gt;cyrptographic keystores&lt;/a&gt; and XML-to-Ruby-to-XML databinding.&lt;/p&gt;
&lt;p&gt;Additionally, we've upgraded the version of JRuby (1.2RC1 now) and removed a dependency on JRuby-Rack.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;New and updated &lt;a title="JBoss-Rails Documentation" href="/theses/jboss-rails/projects/jboss-rails/pages/documentation"&gt;documentation&lt;/a&gt; now exists.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We've also created a &lt;a title="Your first Rails App on JBoss Rails" href="/theses/jboss-rails/projects/jboss-rails/pages/your-first-app-on-jboss-rails"&gt;"My first Rails App(tm)" walk-through&lt;/a&gt; to get you started on that weekend project of doing a mash-up between your sprinkler-system and Twitter.&lt;/p&gt;
&lt;p&gt;All of the artifacts are available from our &lt;a title="Odd Thesis Maven repository" href="http://repo.oddthesis.org/maven2/"&gt;newly-minted Maven repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="JBoss-Rails binary distribution" href="http://repo.oddthesis.org/maven2/org/jboss/rails/jboss-rails/1.0.0.Beta4/jboss-rails-1.0.0.Beta4-bin.zip"&gt;The complete binary distribution&lt;/a&gt; (~30mb)&lt;/li&gt;
&lt;li&gt;&lt;a title="JBoss-Rails Deployer" href="http://repo.oddthesis.org/maven2/org/jboss/rails/jboss-rails/1.0.0.Beta4/jboss-rails-1.0.0.Beta4-deployer.jar"&gt;The standalone JBoss-Rails deployer jar&lt;/a&gt; (~30mb, drag'n'drop, you're done)&lt;/li&gt;
&lt;li&gt;&lt;a title="JBoss-Rails Support bundle" href="http://repo.oddthesis.org/maven2/org/jboss/rails/jboss-rails/1.0.0.Beta4/jboss-rails-1.0.0.Beta4-support.zip"&gt;The jboss-rails-support component&lt;/a&gt; (~7kb) for your Rails app (we also have instructions for &lt;a title="Install jboss-rails-support" href="/theses/jboss-rails/projects/jboss-rails-support/pages/installation"&gt;installing this via git&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As always, we're available to chat on FreeNode, on the &lt;a title="#jboss-rails on FreeNode" href="irc://irc.freenode.net/jboss-rails"&gt;#jboss-rails&lt;/a&gt; channel.&lt;/p&gt;
&lt;p&gt;And you can join the &lt;strong&gt;jboss-rails@&lt;/strong&gt; mailing list by sending an email to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a title="Subscribe to jboss-rails" href="mailto:jboss-rails-subscribe@oddthesis.org"&gt;jboss-rails-subscribe@oddthesis.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The archives are &lt;a title="jboss-rails@ archives" href="http://oddthesis.markmail.org/search/?q="&gt;available through MarkMail&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have bugs or feature-requests, drop them on the &lt;a title="JBoss-Rails Lighthouse" href="http://oddthesis.lighthouseapp.com/projects/19747-jboss-rails"&gt;JBoss-Rails Lighthouse instance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sources are available on GitHub:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="JBoss-Rails on GitHub" href="http://github.com/bobmcwhirter/jboss-rails/tree/master"&gt;jboss-rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="JBoss-Rails Support on GitHub" href="http://github.com/bobmcwhirter/jboss-rails-support/tree/master"&gt;jboss-rails-support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>DevNexus slides for JBoss-Rails</title>
    <slug>devnexus-slides-for-jboss-rails</slug>
    <published>2009-03-11T14:32:58Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;If you were unlucky enough to miss my presentation on JBoss-Rails yesterday at the DevNexus conference, you can &lt;a title="DevNexus JBoss-Rails Presentation" href="/system/assets/devnexus.pdf"&gt;grab the entire deck right here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a title="DevNexus JBoss-Rails Presentation" href="/system/assets/devnexus.pdf"&gt;&lt;img src="/system/assets/devnexus-thumb-086.png" alt="DevNexus JBoss-Rails Presentation" width="200" height="150" /&gt;&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Summer of Odd Code</title>
    <slug>summer-of-odd-code</slug>
    <published>2009-03-19T21:38:49Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;JBoss has been selected (along with the Fedora Project) as a mentoring organization for the Google Summer of Code.&amp;nbsp; I've thrown up &lt;a title="JBoss.org GSoC ideas page" href="http://www.jboss.org/community/docs/DOC-13401"&gt;some ideas on the JBoss idea page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But don't feel limited to just those.&amp;nbsp; Ultimatley, you, the fantastic, enthusiastic, and intelligent student will write your own proposal to Google.&amp;nbsp; Feel free to color outside the lines and come up with even better ideas for any of the JBoss projects.&lt;/p&gt;
&lt;p&gt;If you've got something great, we'll find you a mentor.&lt;/p&gt;
&lt;p&gt;Anyhow, if you'd rather hack code than work a "real job" this summer break, &lt;a title="JBoss.org GSoC ideas page" href="http://www.jboss.org/community/docs/DOC-13401"&gt;start thinking about what you can do with JBoss&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Both the JBoss-Rails and JBoss-Cloud projects look forward to working with some young whipper-snappers this summer.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss-Cloud 1.0.0.Beta3 released!</title>
    <slug>jboss-cloud-1-0-0-beta3-released</slug>
    <published>2009-03-21T22:03:00Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;I'm happy to announce &lt;a href="/theses/jboss-cloud/projects/jboss-cloud"&gt;JBoss-Cloud&lt;/a&gt; 1.0.0.Beta3 release. This release is focused on making JBoss-Cloud more modular, faster and easy to use. Full list of changes you can find &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/bins/14145"&gt;here&lt;/a&gt;. Below are major changes in this release.&lt;/p&gt;
&lt;h3&gt;JBoss-Cloud Support&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Core of JBoss-Cloud was moved to &lt;a href="/theses/jboss-cloud/projects/jboss-cloud-support"&gt;JBoss-Cloud Support&lt;/a&gt; project to give us (and you, obviously), more space to move. Now, if you want to build own appliances, you can use Support project directly. More information available on JBoss-Cloud Support &lt;a href="/theses/jboss-cloud/projects/jboss-cloud-support/pages/documentation"&gt;documentation page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Wizard&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Wizard was completely rewritten. Now it is very useful and user friendly. Major changes are highlighted in my &lt;a href="/posts/2009-03-jboss-cloud-core-wizard-vmware-roadmap"&gt;last post&lt;/a&gt; on JBoss-Cloud (highly recommended to read). Take a look at the &lt;a href="/theses/jboss-cloud/projects/jboss-cloud-support/pages/wizard"&gt;documentation&lt;/a&gt; on how to use it.&lt;/p&gt;
&lt;h3&gt;Documentation upgrade&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Documentation for both project, &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/documentation"&gt;JBoss-Cloud&lt;/a&gt; and &lt;a href="/theses/jboss-cloud/projects/jboss-cloud-support/pages/documentation"&gt;JBoss-Cloud Support&lt;/a&gt; was updated and reflects now all changes. I you want to know more, just check these pages.&lt;/p&gt;
&lt;p&gt;If you want to start with JBoss-Cloud immediately please read &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/how-to-start"&gt;how to start page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Get it...&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;JBoss-Cloud 1.0.0.Beta3 appliances are available for download &lt;a href="http://repo.oddthesis.org/releases/jboss-cloud/1.0.0.Beta3/"&gt;here&lt;/a&gt;. Source code for 1.0.0.Beta3 is available from &lt;a href="http://github.com/bobmcwhirter/jboss-cloud/tree/1.0.0.Beta3"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Remember, you can always grab latest sources from &lt;a href="http://github.com/bobmcwhirter/jboss-cloud/tree/master"&gt;JBoss-Cloud&lt;/a&gt; and &lt;a href="http://github.com/goldmann/jboss-cloud-support/tree/master"&gt;JBoss-Cloud Support&lt;/a&gt;&amp;nbsp; from GitHub.&lt;/p&gt;
&lt;h3&gt;...and get in touch with us&lt;/h3&gt;
&lt;p&gt;We're always looking for your feedback. Meet us in &lt;a href="irc://irc.freenode.net/jboss-cloud"&gt;#jboss-cloud&lt;/a&gt; IRC channel on freenode. If you want to talk with us on mailing list, feel free to subscribe by sending an email to:&lt;/p&gt;
&lt;pre&gt;&lt;a title="Subscribe to jboss-rails" href="mailto:jboss-cloud-subscribe@oddthesis.org"&gt;jboss-cloud-subscribe@oddthesis.org&lt;/a&gt;&lt;/pre&gt;
&lt;p&gt;You can &lt;a href="http://oddthesis.markmail.org/search/list:org.oddthesis.jboss-cloud"&gt;search the archives&lt;/a&gt; via MarkMail too.&lt;/p&gt;
&lt;p&gt;If you have have an idea on how to make our Cloud better (or found a bug) &amp;mdash; file a new ticket on &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/overview"&gt;Lighthouse&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Future plans&lt;/h3&gt;
&lt;p&gt;Next release will be focused on Amazon EC2 support. Subscribe to &lt;a href="/"&gt;oddthesis.org&lt;/a&gt; for news. You can follow JBoss-Cloud on &lt;a href="http://twitter.com/jbosscloud"&gt;Twitter&lt;/a&gt; too!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss-Rails 1.0.0.Beta5 released</title>
    <slug>jboss-rails-1-0-0-beta5-released</slug>
    <published>2009-03-24T18:55:35Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Good afternoon everyone.&amp;nbsp; I hope everyone had an enjoyable lunch involving bacon.&lt;/p&gt;
&lt;p&gt;Now go grab the latest beta of JBoss-Rails.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="JBoss-Rails 1.0.0.Beta5 binary package" href="http://repo.oddthesis.org/maven2/org/jboss/rails/jboss-rails/1.0.0.Beta5/jboss-rails-1.0.0.Beta5-bin.zip"&gt;The whole package.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="JBoss-Rails 1.0.0.Beta5 deployer jar" href="http://repo.oddthesis.org/maven2/org/jboss/rails/jboss-rails/1.0.0.Beta5/jboss-rails-1.0.0.Beta5-deployer.jar"&gt;Just the deployer jar.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The biggest bits in this release are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title="Telco support" href="/theses/jboss-rails/projects/jboss-rails/pages/telco"&gt;Telco support using Mobicents SIP Servlets&lt;/a&gt; (via &lt;a title="Jean Deruelle's blog" href="http://jeanderuelle.blogspot.com/"&gt;Jean Deruelle&lt;/a&gt;, under active development)&lt;/li&gt;
&lt;li&gt;Much better mapping of Rails sessions to HTTP servlet sessions.&lt;/li&gt;
&lt;li&gt;Appropriate manipulation of multipart requests.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Give it a whirl, see if it breaks.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Async Task Queues: Ruby meets JMS</title>
    <slug>async-task-queues-ruby-meets-jms</slug>
    <published>2009-03-31T17:38:19Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I keep having "asynchronous messaging" listed in my presentations as something else "beyond rails" JBoss could bring to the Ruby table.&amp;nbsp; A guy (dude, sorry, I forgot your name) at DevNexus got excited by that idea.&amp;nbsp; So I've been hacking.&lt;/p&gt;
&lt;p&gt;Instead of just bridging JMS to Ruby and saying &lt;em&gt;ta-da&lt;/em&gt;, I noticed that most folks in the Ruby world currently play with async task queues.&amp;nbsp; Hang out in &lt;a title="#github IRC" href="irc://irc.freenode.net/github"&gt;&lt;strong&gt;#github&lt;/strong&gt;&lt;/a&gt; long enough, and you'll see them talking about pausing the queue, restarting the queue, the queue being clogged, etc.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Here, they're using the queue not so much to pass messages, but to trigger a unit of work to be executed outside of the "normal" thread of control.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Sometimes that thread is a web-request, and they queue up an action like forking a repository.&amp;nbsp; Sometimes that thread is a post-commit hook, and they queue up actions such as IRC notifications and other integrations.&lt;/p&gt;
&lt;p&gt;Thus, I've started to implement JMS, but so far only exposing it as an asynchronous task-queue.&lt;/p&gt;
&lt;p&gt;I'm completely open to suggestions, but my current musings think we want a ruby class per queue.&lt;/p&gt;
&lt;pre&gt;class PostCommitHookQueue&lt;br /&gt;  # I'm a queue!&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Maybe each queue can accept a handful of different tasks to execute.&amp;nbsp; Let's represent these by methods.&amp;nbsp; Tasks certainly need some parameters, so let's have a payload argument to contain those parameters.&lt;/p&gt;
&lt;pre&gt;class PostCommitHookQueue&lt;br /&gt;&lt;br /&gt;  def generate_commit_mail(payload)&lt;br /&gt;    # generate an email containing the commit&lt;br /&gt;  end&lt;br /&gt;&lt;br /&gt;  def notify_irc_channels(payload)&lt;br /&gt;    # go ping the project's IRC channel&lt;br /&gt;  end&lt;br /&gt;&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;We create this under app/queues/post_commit_hook_queue.rb, and we're off and running.&lt;/p&gt;
&lt;p&gt;But how do we send stuff to it?&amp;nbsp; I'm thinking of a class method &lt;strong&gt;enqueue(task, payload)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Here, a client is adding a &lt;strong&gt;:generate_commit_mail&lt;/strong&gt; task to the queue, with a hash of parameters as the payload.&lt;/p&gt;
&lt;pre&gt;PostCommitHookQueue.enqueue( :generate_commit_mail, &lt;br /&gt;                             { :project=&amp;gt;'jboss-rails', &lt;br /&gt;                               :hash=&amp;gt;872e971ea8 } )&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;This call is non-blocking, as it's ultimately just sending a message to a JMS destination.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Under the covers, each Ruby queue class ends up deploying an actual JMS queue, which can be administered like any other JMS queue within JBoss.&lt;/p&gt;
&lt;p&gt;Once we get this going, I'll look into how we can expose clustered queues, durable queues, and all the other functionality of JMS.&amp;nbsp; But do it nicely using the semantics of this async task queue use-case.&lt;/p&gt;
&lt;p&gt;Any thoughts on the design?&amp;nbsp; Any suggested use-cases for one-to-many topics, instead of just one-to-one queues?&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Throwing objects to tasks</title>
    <slug>throwing-objects-to-tasks</slug>
    <published>2009-04-03T20:45:39Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;I recently introduced the &lt;a title="Async task queues" href="/posts/2009-03-async-task-queues-ruby-meets-jms"&gt;&lt;strong&gt;async task queue&lt;/strong&gt;&lt;/a&gt; functionality of JBoss-Rails.&amp;nbsp; This is where we wire up JMS queues with Ruby handlers from your app.&lt;/p&gt;
&lt;p&gt;But what about the client side?&amp;nbsp; How does code outside of the app-server communicate over the queue to the running handler?&lt;/p&gt;
&lt;p&gt;Like this stand-alone &lt;strong&gt;*.rb&lt;/strong&gt; script:&lt;/p&gt;
&lt;pre&gt;#!/usr/bin/env jruby &lt;br /&gt;&lt;br /&gt;require RAILS_ROOT + '/client/boot'&lt;br /&gt;&lt;br /&gt;JBoss::Client.connect( "oddthesis", "localhost", 1099 ) do |client|&lt;br /&gt;  MailerQueue.enqueue( :send_welcome_mail, &lt;br /&gt;                       :user=&amp;gt;User.find( :first ) )&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;That's it.&amp;nbsp; The JBoss-Rails Support plugin sets up &lt;strong&gt;RAILS_ROOT/client/&lt;/strong&gt; for you, which includes the handy-dandy &lt;strong&gt;boot.rb&lt;/strong&gt; along with every Java jar that you need to speak JRuby-on-Rails.&lt;/p&gt;
&lt;p&gt;So, we require the boot.rb, which sets up the Rails environment along with all the extra JBoss goodness.&amp;nbsp; And then you're ready to write a client.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JBoss::Client.connect(...)&lt;/strong&gt; is used to connect a client to a running JBoss.&amp;nbsp; Ultimately, this just points to the JNDI service and includes an application name.&amp;nbsp; This is because a lot of apps could be registered with the same naming context.&amp;nbsp; And that context could be located on some other machinery.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;connect(...)&lt;/strong&gt; method takes a block, which is where you do your client operations.&amp;nbsp; Here, we're sending a task to the MailerQueuer, exactly the same as we would from with a Controller or other code inside the AS.&lt;/p&gt;
&lt;p&gt;Here our client is just plucking the first User object it finds in the database, and tossing it to the &lt;strong&gt;send_welcome_mail&lt;/strong&gt; task on the &lt;strong&gt;MailerQueue&lt;/strong&gt;.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In 5 lines of code.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And yes, &lt;strong&gt;you can toss ActiveRecord objects across the queue&lt;/strong&gt;.&amp;nbsp; Let's look at a handler on the far side:&lt;/p&gt;
&lt;pre&gt;class MailerQueue &amp;lt; JBoss::Queues::BaseQueue&lt;br /&gt;&lt;br /&gt;  def send_welcome_mail(payload)&lt;br /&gt;    user = payload[:user]&lt;br /&gt;    deliver_email( user.email_address )&lt;br /&gt;    user.welcomed_at = Time.now&lt;br /&gt;    user.save!&lt;br /&gt;  end&lt;br /&gt;&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;The handler, running in a completely separate process (within the AS) has a live AR object it can inspect, update, or destroy.&lt;/p&gt;
&lt;p&gt;Not too shabby for a week's work.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss-Cloud 1.0.0.Beta4 release for holidays</title>
    <slug>jboss-cloud-1-0-0-beta4-release-for-holidays</slug>
    <published>2009-04-11T01:52:10Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;I'm pleased to announce availability of &lt;a href="/theses/jboss-cloud/projects/jboss-cloud"&gt;JBoss-Cloud&lt;/a&gt; 1.0.0.Beta4 release with &lt;strong&gt;Amazon EC2 support&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There are two public JBoss-Cloud AMI's:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="value"&gt;&lt;strong&gt;ami-c17b9ca8&lt;/strong&gt; &amp;mdash; back-end-appliance&lt;br /&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ami-d57b9cbc&lt;/strong&gt; &amp;mdash; front-end-appliance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can search also for &lt;strong&gt;oddthesis&lt;/strong&gt; in AMI list, there will be always something fresh in our bucket to run. You can use tool you like to run our images, it could be &lt;a href="https://console.aws.amazon.com/ec2/"&gt;AWS Management Console&lt;/a&gt; or &lt;a href="http://developer.amazonwebservices.com/connect/entry.jspa?externalID=609"&gt;Elasticfox&lt;/a&gt;. For more information on running JBoss-Cloud on EC2 refer to &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/jboss-cloud-on-amazon-ec2"&gt;this site&lt;/a&gt;. For quick setup test we prepared &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/setup-testing"&gt;node-info&lt;/a&gt; application.&lt;/p&gt;
&lt;p&gt;VMware and RAW images are also available for immediately &lt;a href="http://repo.oddthesis.org/releases/jboss-cloud/1.0.0.Beta4/"&gt;download from our server&lt;/a&gt;. Along with EC2 support we fixed several issues, so if you're using VMware it's worth to download this release too!&lt;/p&gt;
&lt;p&gt;For command line lovers we have great news: from now it's possible to run and terminate EC2 instances directly from you command line! Just try our new commands (but first prepare your &lt;a href="/theses/jboss-cloud/projects/jboss-cloud-support/pages/ec2-configuration-file"&gt;EC2 configuration file&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;appliance:APPLIANCE_NAME:ec2:run&lt;br /&gt;appliance:APPLIANCE_NAME:ec2:terminate&lt;/pre&gt;
&lt;p&gt;As usual, all major changes are &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/bins/14999"&gt;listed&lt;/a&gt; in our tracking system. Source code is available at &lt;a href="http://github.com/bobmcwhirter/jboss-cloud/tree/master"&gt;GitHub&lt;/a&gt;. Feel free to blame us on &lt;a href="irc://irc.freenode.net/jboss-cloud"&gt;IRC&lt;/a&gt; or &lt;a href="mailto:jboss-cloud-subscribe@oddthesis.org"&gt;mailing-list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy cloud-holidays!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Java Respects RSpec</title>
    <slug>java-respects-rspec</slug>
    <published>2009-04-18T03:55:36Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;After living la vida Ruby for a while, I've grown to love &lt;a title="RSpec" href="http://rspec.info/"&gt;RSpec&lt;/a&gt;.&amp;nbsp; It's truly quite flexible, and seems much quicker-to-the-point than JUnit for testing things.&lt;/p&gt;
&lt;p&gt;Type-safety is nice and all, but when I'm writing tests, duck-typing is fantastic.&lt;/p&gt;
&lt;p&gt;Someone previously had authored the &lt;strong&gt;rspec-maven-plugin&lt;/strong&gt;.&amp;nbsp; But it seemed to sit idle, so I've usurped ownership lately.&amp;nbsp; The plugin, if you don't know, allows you to run RSpec, via JRuby, against your Java code, during the typical &lt;strong&gt;mvn test&lt;/strong&gt; lifecycle phase.&lt;/p&gt;
&lt;p&gt;Since I'm doing testing against some hard-core app-server innards, I started tripping over some shortcomings of the plugin.&amp;nbsp; In the process, I've managed to slip another language into the mix.&lt;/p&gt;
&lt;p&gt;First, my code deals with JBoss-VFS, which itself mucks about with URL protocol handles to enable nice things like &lt;strong&gt;vfsmemory://&lt;/strong&gt; URLs and such.&amp;nbsp; But installing these handlers has some fairly strict classloading requirements, namely that they need to be in the system classloader.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;So now rspec-maven-plugin forks and sets up your dependencies in the root classloader.&lt;/p&gt;
&lt;p&gt;The output during a test-run was sub-par, requiring you to open the HTML test report to really find out how things did.&lt;/p&gt;
&lt;p&gt;Now I've added in a console-based progress formatter akin to the JUnit output&lt;/p&gt;
&lt;pre&gt;[INFO] Running RSpec tests from /Users/bob/oddthesis/jboss-rails/src/test/specs&lt;br /&gt;SPEC: deployers/app_rails_yaml_parsing_deployer_spec.rb&lt;br /&gt;  - Java::OrgJbossRailsCoreDeployers::AppRailsYamlParsingDeployer&lt;br /&gt;  1 passing; 0 failing; 0 pending&lt;br /&gt;SPEC: deployers/crypto_yaml_parsing_deployer_spec.rb&lt;br /&gt;  - Java::OrgJbossRubyEnterpriseCryptoDeployers::CryptoYamlParsingDeployer&lt;br /&gt;  1 passing; 0 failing; 0 pending&lt;br /&gt;SPEC: deployers/rails_env_yaml_parsing_deployer_spec.rb&lt;br /&gt;  - Java::OrgJbossRailsCoreDeployers::RailsEnvYamlParsingDeployer&lt;br /&gt;  1 passing; 0 failing; 0 pending&lt;br /&gt;SPEC: deployers/rails_structure_spec.rb&lt;br /&gt;  - Java::OrgJbossRailsCoreDeployers::RailsStructure&lt;br /&gt;  0 passing; 0 failing; 1 pending&lt;br /&gt;SPEC: utils/string_utils_spec.rb&lt;br /&gt;  - Java::OrgJbossRubyCoreUtil::StringUtils camelize&lt;br /&gt;  3 passing; 0 failing; 0 pending&lt;br /&gt;  - Java::OrgJbossRubyCoreUtil::StringUtils converting paths to class names&lt;br /&gt;  3 passing; 0 failing; 0 pending&lt;br /&gt;  - Java::OrgJbossRubyCoreUtil::StringUtils converting paths to class names accomodating namespaces&lt;br /&gt;  2 passing; 0 failing; 0 pending&lt;br /&gt;=========================================&lt;br /&gt;TOTAL: 11 passing; 0 failing; 1 pending&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;You still get the HTML report, of course.&lt;/p&gt;
&lt;p&gt;Also, since you like RSpec, you probably dislike Maven grinding away, searching the internet for non-existent POMs, and generally being a time-waster.&amp;nbsp; (If you say "Nexus" I'll punch you in the neck.)&lt;/p&gt;
&lt;p&gt;So, after you've run &lt;strong&gt;mvn test&lt;/strong&gt; once, you'll have &lt;strong&gt;run-rspecs.sh&lt;/strong&gt; sitting in your &lt;strong&gt;target/&lt;/strong&gt; directory.&amp;nbsp; (There's the 3rd language, plain ol' shell).&amp;nbsp; This simply re-creates the &lt;strong&gt;fork()&lt;/strong&gt; and &lt;strong&gt;CLASSPATH&lt;/strong&gt; manipulation before invoking jruby to execute the actual script.&lt;/p&gt;
&lt;p&gt;If you want to re-run your tests, quickly, just execute that script:&lt;/p&gt;
&lt;pre&gt;$ ./target/run-rspecs.sh&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;If you're futzing around with just a subset of tests, you can pass any normal &lt;strong&gt;spec&lt;/strong&gt; command-line option to it.&lt;/p&gt;
&lt;p&gt;This invocation will run only the specs under my &lt;strong&gt;test/specs/deployers/&lt;/strong&gt; directory:&lt;/p&gt;
&lt;pre&gt;$ ./target/run-rspecs.sh -p deployers/**_spec.rb&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;Later, I'll describe how I'm actually writing my RSpec tests to give my &lt;a title="JBoss Microcontainer" href="http://www.jboss.org/jbossmc/"&gt;JBoss Microcontainer&lt;/a&gt; deployers a good thrashing.&lt;/p&gt;
&lt;p&gt;To use this, you'll want the latest SNAPSHOT from the &lt;a title="rspec-maven-plugin 1.0-beta-6-SNAPSHOT" href="http://snapshots.repository.codehaus.org/org/codehaus/mojo/rspec-maven-plugin/1.0-beta-6-SNAPSHOT/"&gt;Codehaus snapshot repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>An introduction to JBoss Cloud</title>
    <slug>an-introduction-to-jboss-cloud</slug>
    <published>2009-04-30T08:20:26Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;Yesterday I published an &lt;a href="http://java.dzone.com/articles/introduction-jboss-cloud"&gt;article about JBoss Cloud on DZone&lt;/a&gt;. Go, check it out, leave some comments, digg it!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://java.dzone.com/articles/introduction-jboss-cloud"&gt;&lt;img src="/system/assets/dzone_intro.png" alt="JBoss Cloud introduction on DZone" width="200" height="148" /&gt;&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Fancy new stuff in JBoss Cloud</title>
    <slug>fancy-new-stuff-in-jboss-cloud</slug>
    <published>2009-05-01T21:32:22Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;After holidays I have worked on &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/bins/15965"&gt;some tickets&lt;/a&gt; assigned to upcoming &lt;a href="/theses/jboss-cloud/projects/jboss-cloud"&gt;JBoss Cloud&lt;/a&gt; Beta5 release. Because these are adding some good stuff I will briefly describe what's new.&lt;/p&gt;
&lt;p&gt;There was a lot of work done on making JBoss Cloud more EC2 friendly. First of all we added finally &lt;strong&gt;appropriate kernel modules&lt;/strong&gt; for Amazon EC2 XEN kernels (we're using newest ones available &amp;mdash; 2.6.21 instead of default 2.6.18). This fixed a lot of errors in messages log and allowed us to run &lt;strong&gt;meta-appliance&lt;/strong&gt; on EC2! You can build JBoss Cloud images directly using our AMI.&lt;br /&gt;&lt;br /&gt;Till now we provided only 32 bit images of our appliances. This is over now! We have &lt;strong&gt;64 bit support&lt;/strong&gt; for all virtualizaton platforms!&lt;br /&gt;&lt;br /&gt;There was a lot of work on refactoring, writing new tests (yes, we have some!) and validation rules for config file. You can now hack JBoss Cloud more safely. There is a new rake task added:&lt;/p&gt;
&lt;pre&gt;&lt;span style="font-family: courier new,monospace;"&gt;rake appliance:APPLIANCE_NAME:validate:dependencies&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;This task &lt;strong&gt;validates additional packages added to appliance definition files&lt;/strong&gt;. How it is working? It takes all specified repositories and looks if every added package is available in one of them. Simply, but saves a lot of time (you don't need to build appliance to be sure your packages are resolvable). Want to check all available appliances?&lt;/p&gt;
&lt;pre&gt;&lt;span style="font-family: courier new,monospace;"&gt;rake appliance:all:validate:dependencies&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;We have also a brand new &lt;a href="http://www.jboss.org/mod_cluster/"&gt;mod_cluster&lt;/a&gt; 1.0.0.CR2 in our appliances.&lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Uploading packages&lt;/strong&gt; to remote server is smarter and more fancy &amp;mdash; we have a progress bar! Now you know if you should order an espresso or a whole coffee pot.&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;Signing packages is done also via rake task&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;rake rpm:RPM_NAME:sign&lt;/pre&gt;
&lt;p&gt;It'll sign RPM_NAME package with key specified in your &lt;em&gt;~/.rpmmacros&lt;/em&gt; file. More info will be available in &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/documentation"&gt;documentation&lt;/a&gt;, really soon.&lt;br /&gt; &lt;br /&gt;Pssst, I build especially for you some &lt;strong&gt;pre-release 64 bit EC2 AMIs&lt;/strong&gt;: &lt;span&gt;meta-appliance &amp;mdash; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;ami-27ae484e&lt;/span&gt;&lt;/strong&gt;, &lt;span&gt;front-end-appliance &amp;mdash; &lt;/span&gt;&lt;span&gt;&lt;strong&gt;ami-04ae486d&lt;/strong&gt; and finally &lt;/span&gt;&lt;span&gt;back-end-appliance &amp;mdash;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;strong&gt;ami-01ae4868&lt;/strong&gt;.&lt;/span&gt; Grab it!&lt;/p&gt;
&lt;p&gt;Be prepared for Beta5 release!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Rails becomes TorqueBox</title>
    <slug>jboss-rails-becomes-torquebox</slug>
    <published>2009-05-18T15:32:45Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Due to the success of the JBoss Rails thesis, we're taking the next step.&amp;nbsp; Since it has outgrown its original name, doing way more than just Rails compatibility, we're renaming the project to &lt;a title="TorqueBox" href="http://torquebox.org/"&gt;TorqueBox&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And giving it a logo:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://torquebox.org/images/torqueboxSmall.png" alt="TorqueBox Logo" width="148" height="33" /&gt;&lt;/p&gt;
&lt;p&gt;And its own site:&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a title="TorqueBox site" href="http://torquebox.org/"&gt;http://torquebox.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a title="Announcing the TorqueBox project" href="http://torquebox.org/news/2009/05/announcing-the-torquebox-project"&gt;the announcement over there&lt;/a&gt; for more information, including the latest release of the code.&lt;/p&gt;
&lt;p&gt;JBoss Rails here at Odd Thesis will be moth-balled, deprecated, but kept around for historical purposes.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>TorqueBox 1.0.0.Beta12 Released</title>
    <slug>torquebox-1-0-0-beta12-released</slug>
    <published>2009-05-25T19:55:16Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;TorqueBox, the project formerly known as JBoss-Rails, has just released version 1.0.0.Beta12.&amp;nbsp; Details are available over on &lt;a title="TorqueBox 1.0.0.Beta12 Release Announcement" href="http://torquebox.org/news/2009/05/torquebox-1-0-0-beta12-released"&gt;the TorqueBox site&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Cloud 1.0.0.Beta5 is available!</title>
    <slug>jboss-cloud-1-0-0-beta5-is-available</slug>
    <published>2009-05-31T20:28:03Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;h3&gt;What&amp;rsquo;s JBoss Cloud?&lt;/h3&gt;
&lt;p&gt;JBoss Cloud is a set of images to run your applications in a JBoss AS 5 cluster in a cloud. It&amp;rsquo;s virtualization platform independent; you can run it on your favorite platform: Xen, KVM, VMware and of course on Amazon EC! We&amp;rsquo;re providing a full set of images for both architectures (i386 and x86_64).&lt;br /&gt;&lt;br /&gt;After start, JBoss Cloud will automatically form a JBoss AS 5 cluster. &lt;strong&gt;No user interaction is required!&lt;/strong&gt; Just deploy your application and start using it.&lt;/p&gt;
&lt;h3&gt;New version highlights&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Management appliance&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We have added a management-appliance. A management appliance is responsible for detecting other running appliances on a network. Actual node list is stored on management appliance. After node discovery is done, management-appliance pushes front-end-appliance address to other nodes. For example if a back-end appliance receives a front-end-appliance address it&amp;rsquo;ll adjust configuration files and start JBoss AS 5 service. Similar other nodes will configure and start their services.&lt;/p&gt;
&lt;p&gt;In case of configuration change, &lt;strong&gt;service will be restarted automatically&lt;/strong&gt; with new settings.&lt;/p&gt;
&lt;p&gt;There is no need to start appliances in a specific order, just launch them, they will recognize each other after start. Be sure to launch &lt;strong&gt;management-appliance&lt;/strong&gt; too!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On EC2 you must&lt;/strong&gt; provide your EC2 credentials as user data to launch management-appliance. If you don't do this it'll boot, but it will not be able to discover other appliances. To inject credentials encode with &lt;strong&gt;base64&lt;/strong&gt; following string:&lt;/p&gt;
&lt;pre&gt;access_key: YOUR_ACCESS_KEY&lt;br /&gt;secret_access_key: YOUR_SECRET_ACCESS_KEY&lt;br /&gt;&lt;/pre&gt;
&lt;p&gt;To encode this string you can use for example &lt;a href="http://www.opinionatedgeek.com/dotnet/tools/Base64Encode/"&gt;this page&lt;/a&gt;. Passing this data to management-appliance i really simple. If you're using &lt;a href="https://console.aws.amazon.com/ec2/home"&gt;Amazon AWS Management Console&lt;/a&gt;, just click &lt;em&gt;Show advanced options&lt;/em&gt; and put your encoded string into &lt;em&gt;User Data&lt;/em&gt; field.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://farm3.static.flickr.com/2480/3581565156_9eed60678a_o.png"&gt;&lt;img src="http://farm3.static.flickr.com/2480/3581565156_8917e9882e_m.jpg" alt="" width="240" height="157" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're building management appliance from source. Just run:&lt;/p&gt;
&lt;pre&gt;&lt;span style="font-family: courier new,monospace;"&gt;rake appliance:management-appliance:ec2:run&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;I'll automatically inject appropriate data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Full set of images are now available&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Beta5 is the first release with full images stack available for download. Now we provide both, 32 and 64 bit AMIs and packages for other virtualization platforms in both architectures, too. Just &lt;a href="http://repo.oddthesis.org/releases/jboss-cloud/1.0.0.Beta5/"&gt;grab them&lt;/a&gt; and tell us how it feels.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EC2 support improved&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AMIs are now running with newest available kernel. Proper modules are also included.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dependency check before building appliance&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For those who want to build own images using &lt;a href="/theses/jboss-cloud/projects/jboss-cloud-support/pages/rake-tasks"&gt;rake tasks&lt;/a&gt; there is a RPM packages dependency check added. You know if build will succeed before it is started. It&amp;rsquo;ll save some time in case of creating new images. More info on using this feature you can find in my &lt;a href="/posts/2009-05-fancy-new-stuff-in-jboss-cloud"&gt;previous post&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Upgrades&lt;/h3&gt;
&lt;p&gt;We have also upgraded some packages to newest available versions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jboss.org/"&gt;JBoss AS&lt;/a&gt; 5.1.0.GA&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jboss.org/mod_cluster/"&gt;mod_cluster&lt;/a&gt; 1.0.0.GA&lt;/li&gt;
&lt;li&gt;&lt;a href="http://torquebox.org/"&gt;TorqueBox&lt;/a&gt; 1.0.0.Beta12&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Where can I get it?&lt;/h3&gt;
&lt;p&gt;If you're interested in Amazon EC AMIs, just launch these:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;i386 architecture:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;front-end-appliance: &lt;strong&gt;&lt;span&gt;ami-892ec8e0&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;back-end-appliance: &lt;strong&gt;&lt;span&gt;ami-4f2cca26&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;management-appliance: &lt;strong&gt;&lt;span&gt;ami-a72ec8ce&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;postgis-appliance: &lt;strong&gt;&lt;span&gt;ami-f92ec890&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;meta-appliance: &lt;strong&gt;&lt;span&gt;ami-d32ec8ba&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;x86_64 architecture:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;front-end-appliance: &lt;strong&gt;&lt;span&gt;ami-a92ec8c0&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;back-end-appliance: &lt;strong&gt;&lt;span&gt;ami-492cca20&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;management-appliance: &lt;strong&gt;&lt;span&gt;ami-db2ec8b2&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;postgis-appliance: &lt;strong&gt;&lt;span&gt;ami-e52ec88c&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;meta-appliance: &lt;strong&gt;&lt;span&gt;ami-cb2ec8a2&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you're using &lt;strong&gt;other virtualization platforms&lt;/strong&gt; (eg. VMware or KVM) we are providing a &lt;a href="http://repo.oddthesis.org/releases/jboss-cloud/1.0.0.Beta5/"&gt;set of images&lt;/a&gt;. Just &lt;a href="http://repo.oddthesis.org/releases/jboss-cloud/1.0.0.Beta5/"&gt;grab&lt;/a&gt;, unpack and run them!&lt;/p&gt;
&lt;h3&gt;Where can I get some help?&lt;/h3&gt;
&lt;p&gt;We're always (almost) on IRC. Just join &lt;a href="irc://irc.freenode.net/jboss-cloud"&gt;#jboss-cloud&lt;/a&gt; on freenode! Are you feeling in a mailing list better? No problem, send a blank message to &lt;a href="mailto:jboss-cloud-subscribe@oddthesis.org"&gt;jboss-cloud-subscribe@oddthesis.org&lt;/a&gt; to subscribe.&lt;/p&gt;
&lt;h3&gt;Where is the documentation?&lt;/h3&gt;
&lt;p&gt;Documentation is as always available on &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/documentation"&gt;documentation page&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Talks on JBoss Cloud in your neighborhood</title>
    <slug>talks-on-jboss-cloud-in-your-neighborhood</slug>
    <published>2009-06-20T18:46:58Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;Want to hear more about &lt;a href="/theses/jboss-cloud/projects/jboss-cloud"&gt;JBoss Cloud&lt;/a&gt; directly from core developers? Want to know what's the future of JBoss Cloud? Take a seat in one of these locations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/silesia-jug"&gt;Silesia JUG&lt;/a&gt; meeting: 30.06.2009, 6:30 pm local time, Katowice, Poland, &lt;a href="http://coig.pl/index.php?t=200&amp;amp;id=210"&gt;ul. Miko&#322;owska 100&lt;/a&gt;, room 136.&lt;/li&gt;
&lt;li&gt;The Triangle Users Group &lt;a title="TriJUG" href="http://trijug.org/"&gt;TriJUG&lt;/a&gt; meeting on July 20.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jbossworld.com/"&gt;JBoss World&lt;/a&gt;, Chicago, 03.09.2009, 10:50 am local time, &lt;a href="http://www.chicagohilton.com/hotels_hiltonchicago.aspx"&gt;Hilton Chicago&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>JBoss Cloud introduction video</title>
    <slug>jboss-cloud-introduction-video</slug>
    <published>2009-07-02T08:09:51Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;Bob McWhirter's presentation recorded on JavaOne 2009 is now &lt;a href="http://bit.ly/7gNKm"&gt;available&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bit.ly/7gNKm"&gt;&lt;img src="http://farm3.static.flickr.com/2555/3681265656_a19e1032e0_o.png" alt="JBoss Cloud presentation, part 1" width="300" height="243" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Don't forget to watch &lt;a href="http://bit.ly/tHP1H"&gt;part two&lt;/a&gt;. Happy watching!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Cloud at TriJUG</title>
    <slug>jboss-cloud-at-trijug</slug>
    <published>2009-07-21T14:35:49Z</published>
    <author>Bob McWhirter</author>
    <content>&lt;p&gt;Last night I was invited to present about JBoss Cloud at the July meeting of TriJUG.&amp;nbsp; I'd say it went over well, and a lot of questions and conversations ensued following.&lt;/p&gt;
&lt;p&gt;&lt;a title="TriJUG slides" href="http://fnokd.com/~bob/TriJUG.pdf"&gt;Here are the slides.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a title="TriJUG slides" href="http://fnokd.com/~bob/TriJUG.pdf"&gt;&lt;img src="http://fnokd.com/~bob/TriJUG.026.png" alt="" width="315" height="236" /&gt;&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Cloud 1.0.0.Beta6 is here</title>
    <slug>jboss-cloud-1-0-0-beta6-is-here</slug>
    <published>2009-07-30T16:45:46Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;There was really quiet on our blog for some time, I know. But, hey, there are several reasons for that! Most important is we&amp;rsquo;re finally moved to Fedora 11.&lt;/p&gt;
&lt;h3&gt;Fedora 11 is here!&lt;/h3&gt;
&lt;p&gt;This was a real big task. I though we can just switch repo locations and that&amp;rsquo;s it! No, it wasn&amp;rsquo;t so simple and smooth as I though. This has resulted finally in not supporting Fedora 10 anymore. Sad, but true. Supporting those two versions was really too difficult to maintain, mostly because of different RPM package formats and lack of libguestfs in Fedora 10.&lt;/p&gt;
&lt;h3&gt;Libguestfs&lt;/h3&gt;
&lt;p&gt;Have you heard about great library called &lt;a href="http://libguestfs.org/"&gt;libguestfs&lt;/a&gt;? It&amp;rsquo;s a great tool for accessing and modifying disk images. JBoss Cloud is a nice use case for this tool. From Beta6 everything we&amp;rsquo;re doing with RAW disks is done with libguestfs. This gives us more stable code, and we can now do more fancy stuff!&lt;br /&gt;&lt;br /&gt;There was several issues with libguestfs, but libguestfs team has fixed them really quick, thanks!&lt;/p&gt;
&lt;h3&gt;Other (important) things&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;ve done initial code refactoring and review. This will improve our ability to modify/add new features to JBoss Cloud.&lt;/p&gt;
&lt;p&gt;For those who are building own images: now we have great logging for our rake tasks. This has decreased the amount of messages printed to the screen. But if you want all messages, just turn on debug:&lt;/p&gt;
&lt;pre&gt;JBOSS_CLOUD_LOG_THRESHOLD=debug rake appliance:management-appliance:vmware:personal&lt;/pre&gt;
&lt;p&gt;We fixed also many, really many bugs.&lt;/p&gt;
&lt;h3&gt;Where I can get it?&lt;/h3&gt;
&lt;p&gt;As usual, Beta6 is available on our &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/releases"&gt;release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;I need help!&lt;/h3&gt;
&lt;p&gt;Drop a message on our o &lt;a href="mailto:jboss-cloud-subscribe@oddthesis.org"&gt;mailing list&lt;/a&gt;&lt;a&gt;&lt;/a&gt;, or ping us on&amp;nbsp; &lt;a href="irc://irc.freenode.net/jboss-cloud"&gt;IRC&lt;/a&gt;, we're happy to help you!&lt;/p&gt;
&lt;p&gt;If you found a bug, please let us know by filling a &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/new"&gt;new ticket&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>What can we expect in the upcoming Beta7 release?</title>
    <slug>what-can-we-expect-in-the-upcoming-beta7-release</slug>
    <published>2009-08-11T11:04:46Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;There are &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/bins/27978"&gt;many things to do&lt;/a&gt;. I'll highlight three major tasks planned for 1.0.0.Beta7. Of course there are also a &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets?q=tagged%3A%22bug%22+milestone%3A%221.0.0.Beta7%22"&gt;few bugs&lt;/a&gt; to fix.&lt;/p&gt;
&lt;h3&gt;1. Go fast!&lt;/h3&gt;
&lt;p&gt;We know, time is precious. We don't want to take your time and therefore we'll speed up our appliances! The goal is to start an instance under 5 minutes on EC2 and &amp;lt;20 sec on local virtualization platform. On EC2 this takes so much time, because every time you hit &lt;em&gt;Launch&lt;/em&gt; button an image is copied from bucket to host and unbundled, we cannot speed up this process, unfortunately :(&lt;/p&gt;
&lt;p&gt;We're optimizing boot process. That means: disabling everything we don't need and removing all unnecessary packages.&lt;/p&gt;
&lt;h3&gt;2. JOPR monitoring&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://jboss.org/jopr"&gt;JOPR&lt;/a&gt; is a JBoss monitoring and management tool (probably better word would be &lt;em&gt;platform&lt;/em&gt;). We'll use it to monitor all services we have in the cloud, including: JBoss AS and httpd. System level services like sshd we'll monitor too!&lt;/p&gt;
&lt;p&gt;You can define alerts, see resource usage history, customize your dashboard, etc. Just &lt;a href="http://jboss.org/jopr/JONmonitoring.html"&gt;take a look&lt;/a&gt;! More screenshots are available on &lt;a href="http://jboss.org/jopr"&gt;project website&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;3. Amazon CloudFront support&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://aws.amazon.com/cloudfront/"&gt;Amazon CloudFront&lt;/a&gt; will enable faster image  delivery. Every downloaded file is cached on servers around the world, this will dramatically increase your download speed (I hope!).&lt;/p&gt;
&lt;h3&gt;When it will be released?&lt;/h3&gt;
&lt;p&gt;The plan is to release Beta7 by the end of next week. Follow us on &lt;a href="http://twitter.com/jbosscloud"&gt;Twitter&lt;/a&gt; or take a seat in our &lt;a href="irc://irc.freenode.net/jboss-cloud"&gt;IRC room&lt;/a&gt; to know everything from first hand!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>JBoss Cloud 1.0.0.Beta7 released!</title>
    <slug>jboss-cloud-1-0-0-beta7-released</slug>
    <published>2009-08-24T13:34:25Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;I'm happy to announce next  &lt;a href="/theses/jboss-cloud/projects/jboss-cloud"&gt;JBoss Cloud&lt;/a&gt; beta!&lt;/p&gt;
&lt;h3&gt;JOPR&lt;/h3&gt;
&lt;p&gt;JOPR is bundled in our appliances! As I mentioned in my &lt;a href="/posts/2009-08-what-can-we-expect-in-the-upcoming-beta7-release"&gt;earlier post&lt;/a&gt;, JOPR, a monitoring and managing platform from JBoss garage, is now included by default in JBoss Cloud. What does it mean? You get monitoring of your running instances for free with all shiny charts and historical data. Of course that's not everything. You can define alerts for resources you're monitoring!&lt;/p&gt;
&lt;p&gt;I thought that we could monitor JBoss AS too, but JBoss AS 5.0 and 5.1 isn't supported yet... There is a &lt;a href="http://www.jboss.org/community/wiki/Jopr-JBossAS5plugin"&gt;JBoss AS plugin&lt;/a&gt;, but it will work with JBoss AS 5.2+. When it'll be released we'll upgrade immediately to deliver first-class JBoss monitoring.&lt;/p&gt;
&lt;p&gt;&lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/jopr"&gt;Read more&lt;/a&gt; about using configuring JOPR in JBoss Cloud.&lt;/p&gt;
&lt;p&gt;To see a full list of resources that can be managed by JOPR go to &lt;a href="http://www.jopr.org/confluence/display/JOPR2/Home"&gt;JOPR wiki&lt;/a&gt;, especially take a look at &lt;a href="http://www.jopr.org/confluence/display/JOPR2/Managed+Resources"&gt;Managed Resources page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;CloudFront support&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;If you're new to Amazon CloudFront read more &lt;a href="http://aws.amazon.com/cloudfront/"&gt;here&lt;/a&gt;. &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/releases"&gt;Beta7 images&lt;/a&gt; are released via CloudFront. CloudFront is a web service for files delivery. The main difference between uploading a release to a host via SSH and to CloudFront is that CloudFront files are replicated over the globe to many locations. This is transparent to client, only thing he'll notice is great download speed :)&lt;/p&gt;
&lt;p&gt;For CloudFront support we need to change appliance definition file. Read about current structure &lt;a href="/theses/jboss-cloud/projects/jboss-cloud-support/pages/configuration-file"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Read more about &lt;a href="/theses/jboss-cloud/projects/jboss-cloud-support/pages/cloudfront"&gt;using CloudFront&lt;/a&gt; in JBoss Cloud.&lt;/p&gt;
&lt;h3&gt;Are we faster?&lt;/h3&gt;
&lt;p&gt;I think yes, we're are a bit. We removed several unnecessary services enabled on boot. You feel difference  if you're using images in your local virtualization environment. Want an example? Front-end appliance boots 15 sec on my laptop using VMware Fusion.&lt;/p&gt;
&lt;p&gt;On EC2 this takes much more time (about five minutes/instance), I explained why &lt;a href="/posts/2009-08-what-can-we-expect-in-the-upcoming-beta7-release"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Bug fixes&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;We fixed a &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets?q=milestone%3A&amp;quot;1.0.0.Beta7&amp;quot;+tagged%3A&amp;quot;bug&amp;quot;"&gt;few bugs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most annoying was &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748/tickets/88-gossiprouter-uses-40-of-cpu"&gt;#88&lt;/a&gt;. Versions pre 2.6.12 of GossipRouter were eating about 40% of CPU in idle. This wasn't great. Thanks to &lt;a href="http://belaban.blogspot.com/"&gt;Bela&lt;/a&gt; who fixed this bug really quick for us!&lt;/p&gt;
&lt;p&gt;After JGroups 2.6.12.GA was released we updated it immediately. Beta7 is the first version that upgrades JGroups version across front-end and back-end appliances. Homogeneity will counteract possibly errors caused by version mismatch.&lt;/p&gt;
&lt;h3&gt;Where it is?&lt;/h3&gt;
&lt;p&gt;New JBoss Cloud images are &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/releases"&gt;available&lt;/a&gt; for immediately download. Links to images are on our &lt;a href="/theses/jboss-cloud/projects/jboss-cloud/pages/releases"&gt;Releases&lt;/a&gt; page. There are also AMI id's you can copy.&lt;/p&gt;
&lt;p&gt;We're always for you in &lt;a href="irc://irc.freenode.net/jboss-cloud"&gt;#jboss-cloud&lt;/a&gt; and on our &lt;a href="mailto:jboss-cloud-subscribe@oddthesis.org"&gt;mailing list&lt;/a&gt;. &lt;a href="http://oddthesis.lighthouseapp.com/projects/19748-jboss-cloud/tickets/new"&gt;Tickets&lt;/a&gt; are welcome too.&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Rackspace support added to deltacloud</title>
    <slug>rackspace-support-added-to-deltacloud</slug>
    <published>2009-09-30T04:12:46Z</published>
    <author>Michael Neale</author>
    <content>&lt;p&gt;Hi - I am your host Michael - and am joining bob in the quest to fullfill the thesis mentioned to the right ...&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;(ok waiting for your head to turn back)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Part of this is improving deltacloud.org, and as such I added a driver for the "rackspace cloud" (previously known as Mosso - well at least they didn't change it to love symbol - pretty sure there isn't a UTF-8 char for that, feel free to prove me wrong..).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Get it here:&amp;nbsp;http://github.com/michaelneale/driver-rackspace&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>We're moving!</title>
    <slug>we-re-moving</slug>
    <published>2009-12-23T11:07:37Z</published>
    <author>Marek Goldmann</author>
    <content>&lt;p&gt;JBoss Cloud (and JBoss Aplpiance Support) are now mature enought to  leave oddthesis incubator. We're moving to &lt;a href="http://community.jboss.org/"&gt;&lt;strong&gt;JBoss Community&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;StormGrind&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.jboss.org/stormgrind"&gt;StormGrind&lt;/a&gt; is a umbrella for all cloud JBoss projects. Learn more about StormGrind &amp;ndash; visit &lt;a href="http://www.jboss.org/stormgrind.html"&gt;home page&lt;/a&gt; and &lt;a href="http://www.jboss.org/community/wiki/StormGrindDocumentation"&gt;documentation pages&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Read also our &lt;a href="http://cloudpress.org/2009/12/21/announcing-stormgrind-and-new-releases/"&gt;announcement on our new blog&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Project name changes&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;With the move we also renamed all our projects. Take a look at diagram below which describes name transition.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.goldmann.pl/images/transition.png" alt="" width="373" height="315" /&gt;&lt;/p&gt;
&lt;p&gt;JBoss Cloud from now is called &lt;a href="http://www.jboss.org/stormgrind/projects/cirras.html"&gt;CirrAS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;JBoss Appliance Support is divided into two projects: &lt;a href="http://www.jboss.org/stormgrind/projects/boxgrinder.html"&gt;BoxGrinder Build&lt;/a&gt; and &lt;a href="http://www.jboss.org/stormgrind/projects/cantiere.html"&gt;Cantiere&lt;/a&gt;. &lt;a href="http://www.jboss.org/stormgrind/projects/boxgrinder.html"&gt;BoxGrinder Build&lt;/a&gt; is a set of Rake tasks to build appliances, &lt;a href="http://www.jboss.org/stormgrind/projects/cantiere.html"&gt;Cantiere&lt;/a&gt; is a set of Rake tasks to build in a convenient way RPM files.&lt;/p&gt;
&lt;p&gt;You can read more about this transition on a special &lt;a href="http://community.jboss.org/docs/DOC-14372"&gt;wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;New versions&lt;/h3&gt;
&lt;p&gt;With the move we also released new versions for our projects: CirrAS, Cantiere and BoxGrinder Build!&lt;/p&gt;
&lt;p&gt;You can read more on our &lt;strong&gt;&lt;a href="http://cloudpress.org/"&gt;new blog&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;
&lt;h3&gt;Technical informations&lt;/h3&gt;
&lt;p&gt;As I mentioned before we have now a &lt;a href="http://cloudpress.org/"&gt;new blog&lt;/a&gt;. There will be no new posts/announcements on oddthesis.org blog. Please update your news reader and bookmarks!&lt;/p&gt;
&lt;p&gt;We moved to new source repositories; read more &lt;a href="http://www.jboss.org/stormgrind/sourcecode.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We use now JIRA to track issues; read more &lt;a href="http://www.jboss.org/stormgrind/issues.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Currently we don't have any mailing list. Instead we're in process of creating forums on our new Clearspace installation at JBoss. More info &lt;a href="http://www.jboss.org/stormgrind/community.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our new Twitter account is &lt;a href="http://twitter.com/stormgrind"&gt;right here&lt;/a&gt; and if you still have questions about the move, feel free to ask &amp;ndash; we're in our new &lt;a href="irc://irc.freenode.net/stormgrind"&gt;IRC room&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
</feed>
