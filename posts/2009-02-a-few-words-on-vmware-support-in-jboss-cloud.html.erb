---
title: "A few words on VMware support in JBoss-Cloud"
author: Marek Goldmann
date: 2009-2-23
layout: post
---
<h3>Why VMware?<br/></h3>
<p>I'm a VMware fan, really. They provide good, reliable virtualization environment for personal use and big business too. In the middle of 2008 VMware has <a href='http://www.vmware.com/company/news/releases/esxi_pricing.html'>announced</a> a new product called <a href='https://www.vmware.com/products/esxi/'>ESXi</a>. It's a hypervizor, <strong>available for free</strong> (but still not opensource), for everyone. ESXi can be a part of VMware Infrastructure (you can choose between old, fat ESX Server and new, light ESXi).<br/><br/>Unfortunately ESXi can be installed only on <a href='http://www.vmware.com/resources/compatibility/search.php'>certified hardware</a>. Officially. Many people around the world have created a <a href='http://www.vm-help.com/esx/esx3.5/Whiteboxes_SATA_Controllers_for_ESX_3.5_3i.htm'>white-box list</a> of systems (mainboards, controllers, etc.) capable running ESXi, so you can pick up a good, cheap piece of hardware and have really good virtualization at home (or company).<br/><br/>Before I started digging in JBoss-Cloud I had a wish to run it on ESXi (and VMware Infrastructure 3 too as formats are the same), so making JBoss-Cloud on ESXi working was my priority (VMware personal support was already done by Bob).</p>
<h3>VMware disk types<br/></h3>
<p>For appliance image creation we use <a href='http://thincrust.net/tooling.html'><strong>appliance-creator</strong></a> tool from <a href='http://thincrust.net'>Thincrust</a>. Te default output format of this tool is a RAW disk. It's great for KVM, but not so good for VMware, or rather I thought so before... But, in turn.<br/><br/>VMware uses seven (sic!) <a href='http://sanbarrow.com/vmdk/disktypes.html'>disk types</a><a href='http://sanbarrow.com/vmdk/disktypes.html'/>. We can exclude types which are breaking a disk in 2 GB files. We don't need them as we are using good filesystems, right? We don't need also physical disks. After excludes, we have still three types; two for VMware Personal: <strong>monolithicSparse</strong>, <strong>monolithicFlat</strong> and one for VMware Enterprise: <strong>vmfs</strong>.<br/><br/>BTW, I'm using the unofficial VMware Personal and Enterprise terms to distinguish VMware products intended to personal, home use (Server, Fusion, Workstation, Player) and enterprise, datacenter use (Infrastructure, ESXi).<br/><br/>So, back to disks. What's the main difference between monolithicSparse and monolithicFlat? It's simple: monolithicSparse is growing as there is more data to store on the disk and monolithicFlat allocates all disk size at the time of creation. Another difference is that monolithicSparse has a embedded disk descriptor, monolithicFlat has an external descriptor file.<br/><br/>Thincrust appliance-creator has support for various disk formats. How it is done? It creates a RAW disk image and, if needed, it converts it to a specified format using <strong>qemu-img</strong>. As qemu-img has a wide support for various formats, appliance-creator is a very handy tool, worth <a href='http://thincrust.net/tooling.html'>taking a look</a> (or two)!</p>
<p>VMware disk support is also included in qemu-img. Unfortunately only <strong>monolithicSparse</strong> disk type is supported by this tool and we need <strong>vmfs</strong>. Second glitch: created disk is a IDE disk. It's fine for VMware Personal, but VMware Enterprise uses only SCSI disks. As the disk descriptor for monolithicSparse is embedded, there is no simple way to convert it to a SCSI disk (at least I don't know any simple method).</p>
<h3>We need to boot it, now!<br/></h3>
<p>I understood that if I want to have JBoss-Cloud working on VMware Enterprise I must do it another way. After some time spent on <strong>vmfs</strong> disk format I realized that this is... simply a RAW disk! So, really good news, as we have a RAW disk already!<br/><br/>In VMware environment a disk needs also a disk descriptor file. For vmfs disk type the descriptor is fortunately an external, simple text file which can be edited by hand. I've created one for my disk with all needed information (disk size, geometry, SCSI controller etc.). It wouldn't be possible without a <a href='http://sanbarrow.com/'>great site</a> from Ulli Hankeln. Ulli has <a href='http://sanbarrow.com/vmdk/disktypes.html#vmfs'>described the vmfs descriptor format</a> and created also a <a href='http://sanbarrow.com/vmdk/diskgeometrietable.html'>disk geometry table</a> for every disk size in the world. Thank you Ulli, great job!<br/><br/>After first run I saw the grub menu. I was happy, really happy. A few seconds later Fedora said, that it wouldn't boot. The problem was that the included in Fedora stable repository appliance-creator don't adds by default <strong>mptspi</strong> module to kernel at boot time. The module is required to make LSI Logic controller (default on VMware for SCSI disks) working. Fortunately there was a <a href='http://markmail.org/search/?q=thincrust+list%3Acom.redhat.thincrust-devel+disk#query:thincrust%20list%3Acom.redhat.thincrust-devel%20disk+page:1+mid:zgr4enjioddibbvf+state:results'>discussion on that on thincrust-devel list</a> which has produced a patch for appliance-creator. Patched version is still in updates-testing repo. To make an update of appliance-tools (and livecd-tools on which relay they) I run:</p>
<pre>yum --enablerepo=updates-testing update livecd-tools appliance-tools</pre>
<p>After quick update and appliance recreation. I go a little step forward. Now I got an other error:</p>
<blockquote><span style='display: inline;'><span>mount:  error mounting /dev/root on /sysroot as ext3:  No such file or directory</span></span><br/></blockquote>
<p><span style='display: inline;'><span>This is a well known bug described in Red Hat's Bugzilla <a href='https://bugzilla.redhat.com/show_bug.cgi?id=466607'><span style='display: inline;'><span>#466607</span></span></a><span style='display: inline;'><span> (and in </span></span><a href='https://bugzilla.redhat.com/show_bug.cgi?id=471093'><span style='display: inline;'><span>#471093</span></span></a><a href='https://bugzilla.redhat.com/show_bug.cgi?id=466607'/><span style='display: inline;'><span>). I found a solution for this problem in <a href='https://bugzilla.redhat.com/show_bug.cgi?id=466607#c60'>comments</a>: add <strong>scsi_mod.scan=sync</strong> to kernel parameters at boot time. <a href='http://fedoraproject.org/wiki/Anaconda/Kickstart'>Kickstart</a> file provides a simple way to do it, so I modified our kickstart file in bootloader line:</span></span></span></span></p>
<blockquote><span style='display: inline;'><span>bootloader --timeout=1 --append="acpi=force scsi_mod.scan=sync"</span></span><br/></blockquote>
<p>After another recreation of images, Fedora booted just fine in my ESXi, mission was complete &mdash; VMware support was added. I deserve a beer, or not?</p>
