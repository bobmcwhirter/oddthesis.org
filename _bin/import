#!/usr/bin/env ruby

require 'rexml/document'
require 'date'
require 'fileutils'
require 'net/http'
require 'uri'

class Importer

  def initialize(import_file, output_dir)
    @import_file = import_file
    @output_dir  = output_dir
  end

  def import_file
    doc = REXML::Document.new( File.read( @import_file ) )
    root = doc.root
    root.get_elements( 'entry' ).each do |entry|
      import_entry( entry )
    end
  end

  private

  def import_entry(entry_xml)
    title    = entry_xml.get_text( 'title' ).to_s
    slug     = entry_xml.get_text( 'slug' ).to_s
    author   = entry_xml.get_text( 'author' ).to_s
    published = DateTime.parse( entry_xml.get_text( 'published' ).to_s )
    content  = REXML::Text.unnormalize( entry_xml.get_text( 'content' ).to_s )

    content = import_images( content )

    output_path = File.join( @output_dir, published.strftime( "%Y-%m-#{slug}.html.erb" ) )
    #if ( ! File.exist?( output_path ) )
      puts "writing #{output_path}"
      FileUtils.mkdir_p( File.dirname( output_path ) )
      File.open( output_path, 'w' ) do |f|
        f.puts '---'
        f.puts "title: \"#{title}\""
        f.puts "author: #{author}"
        f.puts "date: #{published.year}-#{published.month}-#{published.day}"
        f.puts "layout: post"
        f.puts '---'
        f.puts content
      end
    #end

  end

  def import_images(content)
    doc = REXML::Document.new( '<entry>' + content + '</entry>' )
    REXML::XPath.each( doc, '//img' ) do |img|
      src = img.attributes['src']
      if ( src =~ /^\// )
        src = "http://oddthesis.org#{src}"
      end
      
      basename = File.basename( src )
      output_path = "images/archive/#{basename}"
 
      url = URI.parse( src )

      res = Net::HTTP.start(url.host, url.port) {|http|
        http.get(url.path)
      }

      FileUtils.mkdir_p( File.dirname( output_path ) )
      puts "writing #{output_path}"
      File.open( output_path, 'wb' ) do |f|
        f.write res.body
      end

      img.attributes['src'] = "/#{output_path}"
    end
    content = ''
    doc.root.children.each do |c|
      content += c.to_s
    end
    #REXML::Text.unnormalize( doc.root.get_text.to_s )
    content
  end


end

if ( $0 == __FILE__ ) 
  importer = Importer.new( ARGV[0], ARGV[1] )
  importer.import_file
end

